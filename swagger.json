{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ErrorSource": {
				"properties": {
					"pointer": {
						"type": "string",
						"description": "JSON Pointer [RFC6901] to the associated entity in the request document <br>\n[e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute]."
					}
				},
				"required": [
					"pointer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorInfo": {
				"properties": {
					"title": {
						"type": "string",
						"description": "human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem,<br>\nexcept for purposes of localization"
					},
					"detail": {
						"type": "string",
						"description": "a human-readable explanation specific to this occurrence of the problem."
					},
					"source": {
						"$ref": "#/components/schemas/ErrorSource",
						"description": "an object containing references to the source of the error"
					}
				},
				"required": [
					"title",
					"detail",
					"source"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorResponse": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Time when the error happened as UTC ISO-8601<br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"message": {
						"type": "string",
						"description": "Message to describe the main reason of the error"
					},
					"request_id": {
						"type": "string",
						"description": "Generated Id to be used to track the error"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/ErrorInfo"
						},
						"type": "array",
						"description": "List of errors which exists on the model"
					}
				},
				"required": [
					"timestamp",
					"message",
					"request_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BrandName": {
				"type": "string",
				"description": "Brand supported by Data Fridge.\nYou can find list of all supported Brands [here](http://configs.api.thedatafridge.com/brands.json)"
			},
			"GlobalEntityId": {
				"type": "string",
				"description": "Global Entity ID (GEID).\nYou can find list of all supported GEIDs on this\n[data studio report](https://datastudio.google.com/u/1/reporting/16gFJko6iHOISWh7VbIo3VFMfbFexal7L/page/BYrbB). <br>\nYou can export this list from that report, if you dont have access to that report\nplease request access to it using your company email. <br>\nIf you need to access this list from a service, DF will need to whitelist IP of your service using it."
			},
			"BusinessType": {
				"description": "Type of Business used to generate the order.<br>\nUse \"marketplace\" if vendor is a restaurant.<br>\nUse \"whitelabel\" if vendor is used in a whitelabel page.<br>\nUse \"cross-listed\" if vendor is used in another platform. For example, if Otlob sends orders to Talabat.\nUse \"courier\" if we offer rider as service to other companies/customers.",
				"enum": [
					"marketplace",
					"whitelabel",
					"cross-listed",
					"courier"
				],
				"type": "string"
			},
			"Charges": {
				"description": "List of all available charges which can occur for a vendor",
				"properties": {
					"joker_fee": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Gross Fee paid by vendors for using joker service"
					},
					"joker_discount_fee": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Discount granted to the customer when an order has a joker."
					},
					"service_fee": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to the vendor for serving this order. Defined in units"
					},
					"discount_fee": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Part of the discount (granted to the end customer) which is covered to the vendor. <br>\ndiscount_fee does NOT contain joker discount which is defined by \"joker_discount_fee\" on this object. <br>\nNormally discount_fee is NOT part of commission.commissionable_value. <br>\nDefined in units"
					},
					"payment_fee": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged for specific payment providers. <br>\nIn some cases a fee is charged to the vendor for specific payment methods. <br>\nExample: a vendor pays fee of 2 if customer pays Cash On Delivery. <br>\nDefined in units"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"VendorInOrder": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Identifier used by Customer Care, Customers, ... to determine the vendor in the platform. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters"
					},
					"name": {
						"type": "string",
						"description": "Name shown to the customers or used by Customer Care to recognize the vendor. <br>\nMaximum length is 300 characters"
					},
					"charges": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Charges"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"global_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "global_vendor_id is the salesforce grid_id. <br>\nMaximum length is 120 characters"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Profile": {
				"description": "Information used to submit the order. Doesn't has to be the account which has been used",
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "Identifier of the customer when registered. <br>\nMaximum length is 120 characters"
					},
					"guest": {
						"type": "boolean",
						"nullable": true
					},
					"locale": {
						"type": "string",
						"nullable": true,
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"first_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"last_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true,
						"description": "Must be valid phone number, Ex: +49123456789"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ChannelType": {
				"enum": [
					"ios",
					"android",
					"web",
					"mobile web",
					"other"
				],
				"type": "string"
			},
			"Channel": {
				"description": "Channel which was used to order",
				"properties": {
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ChannelType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"version": {
						"type": "string",
						"nullable": true,
						"description": "Version of the mobile app or frontend version used to placed the order. <br>\nMaximum length is 120 characters."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CouponInfo": {
				"properties": {
					"amount_paid_by_platform": {
						"type": "number",
						"format": "double",
						"description": "The amount of the coupon that is paid for by Delivery Hero platform"
					},
					"campaign_name": {
						"type": "string",
						"nullable": true,
						"description": "A name for marketing coupon campaigns."
					},
					"amount": {
						"type": "number",
						"format": "double",
						"description": "Describes the amount of the coupon that was deducted for this order. <br>\nIf a coupon worths 10 $ but only 7 are applied to this order then this field should have value of 7."
					},
					"incentive_code": {
						"type": "string",
						"nullable": true,
						"description": "Coupon code typed & applied by the customer while placing an order\n(case insensitive, might be original code or code entered by customer)"
					}
				},
				"required": [
					"amount_paid_by_platform",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Payment": {
				"properties": {
					"payment_method": {
						"type": "string",
						"nullable": true,
						"description": "The method which customer uses to pay. <br>\nIt is optional and nullable only when total order value is 0.\nIt can be visa, mastercard, paypal, etc... <br>\nMaximum length is 120 characters\nPayment method should only be filled with external methods.\nWallet, Voucher, etc should not be included"
					},
					"paid": {
						"type": "boolean",
						"description": "It should be true only if customer paid using online payment methods"
					},
					"transaction_number": {
						"type": "string",
						"nullable": true,
						"description": "Transaction as issued by the payment provider. <br>\nIt should be given when customers pays with online methods. <br>\nMaximum length is 120 characters."
					},
					"total_order_value": {
						"type": "number",
						"format": "double",
						"description": "Total amount charged to the customer. This is what customer pays.\nThe following formula is used for validating order_value against total_order_value  <br>\nThis field does NOT contain amount paid from wallet <br>\ntotal_order_value = $.order.order_value  <br>\n               + $.customer.payment.minimum_order_value_fee  <br>\n               + $.customer.payment.service_fee  <br>\n               + $.delivery.delivery_fee  <br>\n               + $.delivery.tip  <br>\n               + $.delivery.packaging_charges.amount  <br>\n               + $.customer.payment.known_total_mismatch <br>\n               - $.customer.payment.discount  <br>\n               - $.customer.payment.coupon  <br>\n               - $.customer.payment.loyalty_point_balance  <br>\n               - $.customer.payment.wallet_balance <br>\n               - $.customer.payment.allowance_amount (in case of corporate order)"
					},
					"total_tax": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Tax total in order value (including items, delivery taxes etc)."
					},
					"coupon": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Part of the order that is paid by coupon.<br>\nRepresents the subtotal of all coupons. It must be equal or greater than 0"
					},
					"coupons_info": {
						"items": {
							"$ref": "#/components/schemas/CouponInfo"
						},
						"type": "array",
						"nullable": true,
						"description": "Represents enhanced information about each of the coupons submitted.<br>\nCoupons should only cover the use case where a customer has to type in a code to get money off"
					},
					"discount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It must be equal or greater than 0. <br>\nIt is only price offers, in units not percentage. <br>\nThe following formula is used for validating summation of all discounts against\n  subsidies & discount_fee & joker_discount_fee granted to customer.<br>\nThis formula will be validated only if subsidies are present. <br>\ndiscount = $.subsidies.*.amount  + $.vendor.charges.discount_fee + $.vendor.charges.joker_discount_fee"
					},
					"minimum_order_value_fee": {
						"type": "number",
						"format": "double",
						"description": "Fee charged in case the minimum order value was not reached by customer.  <br>\nExample: if a customer orders a pizza for 5 and Minimum Order value is 8,\nthen minimum_order_value_fee should be 3"
					},
					"wallet_balance": {
						"type": "number",
						"format": "double",
						"description": "Amount paid from a wallet."
					},
					"loyalty_point_balance": {
						"type": "number",
						"format": "double",
						"description": "Amount paid via loyalty points in local currency."
					},
					"service_fee": {
						"type": "number",
						"format": "double",
						"description": "Some Global Entities apply some charges for specific payment methods.  <br>\nExample: if payment method is Cash On Delivery then customers must pay +2 $. <br>\nThat amount should be sent on this field"
					},
					"payment_provider": {
						"type": "string",
						"nullable": true,
						"description": "Service provider which was used to pay the order or null to denote that the order was payed cash to the\nrestaurant. <br>\ncustomers dont know about payment providers ex. adyen <br>\nMaximum length is 120 characters"
					},
					"allowance_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Represents an amount on money that companies support for corporate orders. <br>\ne.g. DH corporate orders are supported by DH with 6 € per order. <br>\nValue can be > 0 only if \"corporate\" = true"
					},
					"known_total_mismatch": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "known_total_mismatch represents the amount of mismatch when validating customer.payment.total_order_value"
					},
					"loyalty_burned_points": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The number of loyalty points burned for the order."
					}
				},
				"required": [
					"paid",
					"total_order_value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Braze": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Notifications": {
				"properties": {
					"braze": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Braze"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"OrderPerseus": {
				"properties": {
					"perseus_id": {
						"type": "string",
						"description": "Identifier of [Perseus installation](https://confluence.deliveryhero.com/display/DATA/Perseus+Device+Indentifier)\nof a user."
					},
					"perseus_session_id": {
						"type": "string",
						"description": "Identifier of [Perseus session](https://confluence.deliveryhero.com/pages/viewpage.action?pageId=363921464)\nof a user."
					}
				},
				"required": [
					"perseus_id",
					"perseus_session_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Customer": {
				"properties": {
					"customer_id": {
						"type": "string",
						"description": "Identifier of the customer regardless whether is a guest or registered one. <br>\nMaximum length is 120 characters"
					},
					"profile": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Profile"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"channel": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Channel"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"payment": {
						"$ref": "#/components/schemas/Payment"
					},
					"notifications": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Notifications"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"perseus": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/OrderPerseus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Identifier of Perseus of a user."
					}
				},
				"required": [
					"customer_id",
					"payment"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Commission": {
				"properties": {
					"commissionable_value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Every country/global_entity has its own logic for calculating this field. <br>\nCommissionable value of an order, basis for calculating commission to be paid by vendor. <br>\nDepending on the individual company definitions, it can include extra charges like delivery or payment fees\npaid by the customer. <br>\nTypically commissionable_value is calculated differently if a joker is submitted."
					},
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Amount of commission for the order the vendor is charged. <br>\nIt does NOT contain fees defined inside vendor.charges such as \"joker_fee\". <br>\nThis field only relates the the commission amount generated by order placement. <br>"
					},
					"rate": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Subsidy": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Tax": {
				"properties": {
					"tax_rate_percent": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Tax rate percent applied to a gross value"
					},
					"net_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It is the net amount without taxes"
					},
					"amount": {
						"type": "number",
						"format": "double",
						"description": "Tax Amount"
					}
				},
				"required": [
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OptionType": {
				"description": "Please notice that option type \"variation\" can only have fields \"id\" and \"name\". <br>\nOption with type \"topping\" and \"choice\" might contain all option fields",
				"enum": [
					"choice",
					"topping"
				],
				"type": "string"
			},
			"Option": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Maximum length is 120 characters\nTwo orders with same items and\noptions should have same item id's and same option id's. Identifier here CANNOT be order line item id."
					},
					"name": {
						"type": "string",
						"description": "Maximum length is 300 characters"
					},
					"unit_price": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Unit price for the option INCLUDING taxes. <br>\nApplies ONLY if option.type is choice or topping. <br>\nTherefore option type with \"variation\" CANNOT have price"
					},
					"type": {
						"$ref": "#/components/schemas/OptionType"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"customer_notes": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 500 characters"
					},
					"options": {
						"items": {
							"$ref": "#/components/schemas/Option"
						},
						"type": "array",
						"nullable": true,
						"description": "Applies ONLY if option.type is \"choice\" or \"topping\". <br>\nTherefore option type with variation CANNOT have options. <br>\nThis is meant to be used by complex menus such as McDonald's menu\nin which an option can contain a nested one. <br>\nExample: <br> <code>\n     \"items\": [{\"name\": \"McChicken\", \"options\": [{\"name\": \"Fries Deluxe\", \"options\": [{\"name\": \"BBQ sauce\"}]}]}]\n     <code>"
					}
				},
				"required": [
					"id",
					"name",
					"type",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductParent": {
				"properties": {
					"product_parent_id": {
						"type": "string",
						"nullable": true,
						"description": "Used when products have a hierarchical structure such as Pandora platform in which one main Product can have\nsubsequent entities. Customers cannot add parent products into the basket."
					},
					"name": {
						"type": "string",
						"nullable": true,
						"description": "Name of the main product"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Item": {
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "Should be same value as the product_id field sent on ProductMessage.\nMaximum length is 120 characters.\nTwo orders with same items and\noptions should have same item id's and same option id's. Identifier here CANNOT be order line item id."
					},
					"name": {
						"type": "string",
						"description": "Maximum length is 300 characters"
					},
					"customer_notes": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 500 characters"
					},
					"unit_price": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Unit price for the item INCLUDING VAT and before discount. <br>\nIt does NOT include price of the option."
					},
					"options": {
						"items": {
							"$ref": "#/components/schemas/Option"
						},
						"type": "array",
						"nullable": true
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"line_item_id": {
						"type": "string",
						"nullable": true,
						"description": "Defines identifier of the item id on the order."
					},
					"product_parent": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ProductParent"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Product parent information.<br>Used in cases when medium is provided as a product name\ninstead of Pizza Margareta.<br>Or on recommendations side several\ndifferent product variations are recommend instead of parent product."
					},
					"line_item_total": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Represents line item total (includes items and options amount) including VAT before discount."
					}
				},
				"required": [
					"name",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderDetails": {
				"properties": {
					"minimum_order_value": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"deposit": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Amount contained as deposit within the order"
					},
					"order_value": {
						"type": "number",
						"format": "double",
						"description": "This value represents the subtotal of the items INCLUDING taxes. <br>\nThis means this value does NOT contain fees, or discounts but it DOES contain taxes. <br>\nThis value does NOT represent the total amount paid by customer <br>\nThis value does NOT contain fees, discounts or coupon <br>\nThe following formula is used for validating summation of all items and its options are equals to order_value<br>\norder_value = $.order.items (from i to n) <br>\n                $.order.items[i].unit_price <br>\n                + $.order.items[i].options from(j to m)) ($.order.items[i].options[j].unit_price + <br>\n                                              ($.order.items[i].options from(y to x) recursive up to 5 level) <br>\n                                              * $.order.items[i].options[j].quantity ) <br>\n                * $.order.items[i].quantity) <br>\nFor example: valid order_value = summation of all items\n  {\n  ...,\n  \"order\": {\n      \"order_value\": 54.37,\n      \"items\": [\n        {\n          \"id\": \"CH-1A243\",\n          \"name\": \"Kung Pao\",\n          \"customer_notes\": \"longer than shorter limit 120, without chicken please qm;\",\n          \"unit_price\": 12.45,\n          \"options\": [\n            {\n              \"id\": \"CH-1A250\",\n              \"name\": \"Extra Chicken\",\n              \"unit_price\": 0.5,\n              \"type\": \"choice\",\n              \"quantity\": 2,\n              \"customer_notes\": \"no swiss cheese please\"\n            },\n            {\n              \"id\": \"CH-1A251\",\n              \"name\": \"Extra Large\",\n              \"type\": \"variation\"\n            }\n          ],\n          \"quantity\": 2\n        },\n        {\n          \"id\": \"BK-1B243\",\n          \"name\": \"3 in 1 Lunch Deal\",\n          \"unit_price\": 8.45,\n          \"options\": [\n            {\n              \"id\": \"BH-1A249\",\n              \"name\": \"Hamburger\",\n              \"quantity\": 2,\n              \"unit_price\": 5.5,\n              \"type\": \"choice\",\n              \"customer_notes\": \"no swiss cheese please\",\n              \"options\": [\n                {\n                  \"id\": \"CH-1A249\",\n                  \"name\": \"Extra Cheese\",\n                  \"type\": \"topping\",\n                  \"quantity\": 1,\n                  \"unit_price\": 3.0\n                }\n              ]\n            },\n            {\n              \"id\": \"BH-1A250\",\n              \"name\": \"Cheese Burger\",\n              \"quantity\": 1,\n              \"unit_price\": 1.02,\n              \"type\": \"choice\"\n            },\n            {\n              \"id\": \"BH-1A251\",\n              \"name\": \"Nuggets\",\n              \"quantity\": 1,\n              \"unit_price\": 1.0,\n              \"type\": \"choice\"\n            }\n          ],\n          \"quantity\": 1\n        }\n      ]\n    },\n    ...,\n  }"
					},
					"known_total_mismatch": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "known_total_mismatch represents the amount of mismatch calculation between\norder.order_value and order.items calculation. <br>\norder.order_value = order.items calculation + order.known_total_mismatch. <br>\nknown_total_mismatch absolute value cannot be greater than 20% of order.order_value. <br>\nFor example: if order.order_value = 10, known_total_mismatch can only be +- 2.\nPlease communicate with Data Fridge before using this field."
					},
					"tax": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Tax"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total tax amount applied to the items on the order and all charges (delivery taxes NOT included fee)"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/Item"
						},
						"type": "array",
						"description": "An item is an entity you can add to a cart and pay for it"
					}
				},
				"required": [
					"order_value",
					"items"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerLocation": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"label": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"address_text": {
						"type": "string",
						"description": "Concatenation of street, building, zip, and city. <br>\nThis field has no length limitation"
					},
					"street": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"street_number": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"building": {
						"type": "string",
						"nullable": true,
						"description": "In some cases, besides street and street_number a building reference is needed. <br>\nMaximum length is 120 characters"
					},
					"district": {
						"type": "string",
						"nullable": true,
						"description": "District / Area name. <br>\nMaximum length is 300 characters"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 2000 characters"
					},
					"postal_code": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"block": {
						"type": "string",
						"nullable": true,
						"description": "Identifies a piece of land inside a district or an area. <br>\nMaximum length is 120 characters"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"geohash": {
						"type": "string",
						"nullable": true,
						"description": "Public domain geocode. <br>\nMaximum length is 6 characters"
					},
					"city_id": {
						"type": "string",
						"nullable": true,
						"description": "Backend city_id. Should correspond with the data being passed in the delivery.location.city field. <br />\nMaximum length is 120 characters"
					},
					"area_id": {
						"type": "string",
						"nullable": true,
						"description": "Backend area_id. Should correspond with the data being passed in the delivery.location.district field. <br />\narea_id is consistent with the field in VendorDeliveryArea\nMaximum length is 120 characters"
					}
				},
				"required": [
					"address_text"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProviderType": {
				"description": "Use vendor_delivery when vendor delivers the order themselves. <br>\nUse pickup when customer picks the order up. <br>\nUse platform_delivery when platform itself has a rider fleet and delivers the order. <br>\nUse partner_delivery when neither restaurant or platform deliver the order.",
				"enum": [
					"vendor_delivery",
					"pickup",
					"platform_delivery",
					"partner_delivery"
				],
				"type": "string"
			},
			"PackagingCharges": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double",
						"description": "Packaging charges including taxes"
					}
				},
				"required": [
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Delivery": {
				"properties": {
					"tip": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Tip which has been paid by the customer to hand out to driver. <br>\nMainly used with Online Payments"
					},
					"delivery_fee": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to customer as a service / delivery fee to get the food delivered\nincluding VAT and before discount. <br>\nDiscount or coupon applied to delivery_fee must be added to customer.payment.discount or customer.payment.coupon\nfields respectively."
					},
					"tax": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Tax"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total amount of taxes of delivery fee"
					},
					"location": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CustomerLocation"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "IMPORTANT: This field is REQUIRED for ANY delivery and MUST BE EMPTY for customer pickups. <br>\nie: when provider is one of: vendor_delivery, platform_delivery and partner_delivery"
					},
					"provider": {
						"$ref": "#/components/schemas/ProviderType"
					},
					"packaging_charges": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PackagingCharges"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Packaging Charges, for example container charges, charged to the customer"
					}
				},
				"required": [
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderUpdateSource": {
				"description": "Who triggered the modification: vendor, customer, logistics, customer_contact_center, vendor_contact_center",
				"enum": [
					"vendor",
					"customer",
					"logistics",
					"customer_contact_center",
					"vendor_contact_center"
				],
				"type": "string"
			},
			"JsonPatchOperationType": {
				"description": "*Operation objects MUST have exactly one \"op\" member,\nwhose value indicates the operation to perform.\n\nIts value MUST be one of \"add\", \"remove\", \"replace\"\nother values are errors.\n\nATTENTION: \"move\", \"copy\", or \"test\" are NOT SUPPORTED in current implementation <br>\nAccording RFC-6902 there should be more operations\nhttps://tools.ietf.org/html/rfc6902#page-4\nbut for our business case we do not support operations changing structure of JSON document like:\n'move', 'copy' and 'test'<br",
				"enum": [
					"add",
					"remove",
					"replace"
				],
				"type": "string"
			},
			"JsonPatchOperation": {
				"description": "Tis class represents one JsonPatch operation.\nFollows json_patch standard RFC 6902\nhttp://jsonpatch.com/\nhttps://tools.ietf.org/html/rfc6902",
				"properties": {
					"op": {
						"$ref": "#/components/schemas/JsonPatchOperationType"
					},
					"path": {
						"type": "string",
						"description": "Operation objects MUST have exactly one \"path\" member.\nThat member's value is a string containing a JSON-Pointer value\n[RFC6901] https://tools.ietf.org/html/rfc6901\nthat references a location within the target document\n(the \"target location\") where the operation is performed.\n\nThe target location MUST exist for the operation to be successful."
					},
					"value": {
						"description": "The meanings of other operation object members are defined by operation (op).\nMembers that are not explicitly defined for the operation in question MUST be ignored\n(i.e., the operation will complete as if the undefined member did not appear in the object).\n\n4.1.  add\n\nThe \"add\" operation performs one of the following functions,\ndepending upon what the target location references:\n\no If the target location specifies an array index,\n   a new value is inserted into the array at the specified index.\n\no If the target location specifies an object member that does not already exist,\n   a new member is added to the object.\n\no If the target location specifies an object member that does exist,\n   that member's value is replaced.\n\nThe operation object MUST contain a \"value\" member\nwhose content specifies the value to be added.\n\n4.3.  replace\n\nThe \"replace\" operation replaces the value\nat the target location with a new value.\n\nThe operation object MUST contain a \"value\" member\nwhose content specifies the replacement value."
					}
				},
				"required": [
					"op",
					"path"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderUpdate": {
				"properties": {
					"version": {
						"type": "number",
						"format": "double",
						"description": "First update starts with 1 and increments for every order update."
					},
					"update_timestamp": {
						"type": "string",
						"description": "Timestamp when this order update happened in RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"source": {
						"$ref": "#/components/schemas/OrderUpdateSource"
					},
					"reason": {
						"type": "string",
						"nullable": true,
						"description": "Reason for the order update"
					},
					"revert_changes": {
						"items": {
							"$ref": "#/components/schemas/JsonPatchOperation"
						},
						"type": "array",
						"description": "Json patch operations to revert the changes to the previous version of the order.\nFollows json_patch standard RFC 6902\nhttp://jsonpatch.com/\nhttps://tools.ietf.org/html/rfc6902\n\nA JSON Patch document is a JSON [RFC4627] document that represents an array of objects.\nEach object represents a single operation to be applied to the target JSON document.\n\nThe original document\n```\n{\n   \"baz\": \"qux\",\n   \"foo\": \"bar\"\n}\n```\nThe patch\n```\n[\n   { \"op\": \"replace\", \"path\": \"/baz\", \"value\": \"boo\" },\n   { \"op\": \"add\", \"path\": \"/hello\", \"value\": [\"world\"] },\n   { \"op\": \"remove\", \"path\": \"/foo\" }\n]\n```\nThe result\n```\n{\n   \"baz\": \"boo\",\n   \"hello\": [\"world\"]\n}\n```\n\nAssuming an item is removed from order.\nThe following revert_changes will return the order to its previous version\n\n```\n[\n   {\n     \"op\": \"add\",\n     \"path\": \"/order/items/0\",\n     \"value\": {\n        \"quantity\": 1,\n        \"name\": \"Coconut Drink\",\n        \"id\": \"3497204\",\n        \"unit_price\": 4\n     }\n   },\n   {\n     \"op\": \"replace\",\n     \"path\": \"/order/order_value\",\n     \"value\": 22\n   }\n]\n```"
					}
				},
				"required": [
					"version",
					"update_timestamp",
					"source",
					"revert_changes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderMessage": {
				"properties": {
					"order_id": {
						"type": "string",
						"description": "Id used by customers, vendors and customer care to identify the order. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nIn some platforms also called Order Code. <br>\nMaximum length is 120 characters <br>\nFor foodora/foodpanda countries this field is filled by their \"order_code\", <br>\nthe string value instead of the numeric one"
					},
					"brand_name": {
						"$ref": "#/components/schemas/BrandName",
						"description": "Unique identifier for brand<br>\nUser friendly brand name which was used to place the order (PedidosYa, pizza.de, Talabat, etc.)<br>\nMaximum length is 120 characters"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"locale": {
						"type": "string",
						"nullable": true,
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"place_timestamp": {
						"type": "string",
						"description": "Timestamp when the order was placed in RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the order was placed OR when the order was updated. RFC-3339 format <br>\nDF cannot accept timestamps older than 30 days or newer than 2 minutes in the future. <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"promised_customer_timestamp": {
						"type": "string",
						"description": "Time which was initially promised to the customer when the food could potentially be delivered\nor picked up as UTC ISO-8601\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"currency": {
						"type": "string",
						"description": "The code for the currency in https://de.wikipedia.org/wiki/ISO_4217 <br>\ne.g. <code>EUR</code> for Euro."
					},
					"business_type": {
						"$ref": "#/components/schemas/BusinessType"
					},
					"vendor": {
						"$ref": "#/components/schemas/VendorInOrder"
					},
					"customer": {
						"$ref": "#/components/schemas/Customer"
					},
					"commission": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Commission"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Optional fields, some platforms do not keep this data and therefore cant send to DataFridge"
					},
					"subsidies": {
						"items": {
							"$ref": "#/components/schemas/Subsidy"
						},
						"type": "array",
						"nullable": true,
						"description": "Used to subsidize marketing campaigns like the \"Yellow weeks\" or \"Feast\" and is handled like a voucher. <br>\nUsed when a discount is shared between the vendor and the platform.<br>\nDifferent subsidies might be applied to single order at the same time"
					},
					"order": {
						"$ref": "#/components/schemas/OrderDetails"
					},
					"delivery": {
						"$ref": "#/components/schemas/Delivery"
					},
					"corporate": {
						"type": "boolean",
						"description": "Corporate orders are paid between real customer and the company supporting it. <br>\nFor example, DH corporate orders are supported by DH with 6 € per order. <br>\nSo if you have similar orders, you would need to send corporate=true to be able <br>\nto use allowance_amount in calculations."
					},
					"preorder": {
						"type": "boolean",
						"description": "Order was placed upfront"
					},
					"test_order": {
						"type": "boolean"
					},
					"order_updates": {
						"items": {
							"$ref": "#/components/schemas/OrderUpdate"
						},
						"type": "array",
						"nullable": true,
						"description": "It contains ALL order updates applied to that order\n(ie: if order was updated 3 times then the array should contain 3 elements)"
					},
					"updated_at_local": {
						"type": "string",
						"description": "Event timestamp in ISO-8601 with UTC offset.\nEx: 2021-01-07T10:00:00+02:00"
					},
					"platform_reference_id": {
						"type": "string",
						"nullable": true,
						"description": "ID referencing the entity which exists on the platform side before an order is placed.\nThat entity should have a 1 to 1 relation with the order. <br>\nNot necessary for platforms which already have the order ID before the order is placed. <br>\nEx: if before placing an order, the platform has an entity called Purchase, then the purchase ID should be sent\nas the platform reference ID."
					}
				},
				"required": [
					"order_id",
					"brand_name",
					"global_entity_id",
					"country_code",
					"place_timestamp",
					"timestamp",
					"currency",
					"business_type",
					"vendor",
					"customer",
					"order",
					"delivery",
					"corporate",
					"preorder",
					"test_order"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HistoryOrdersRequest": {
				"properties": {
					"import_id": {
						"type": "string",
						"description": "It is generated id by the client every time a batch from the import request is sent. <br>\nFor example, If you are importing 1000 orders, and you will send 100 per batch (10 batches), <br>\nthen each batch should have the same 'import_id'"
					},
					"orders": {
						"items": {
							"$ref": "#/components/schemas/OrderMessage"
						},
						"type": "array",
						"description": "List of orders needed to be ingested to Fridge"
					}
				},
				"required": [
					"import_id",
					"orders"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorInOrderStatus": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Id which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderStatusType": {
				"description": "<p> <b> TRANSMITTED </b> - (deprecated) order is sent to restaurant (but it isn't accepted/rejected yet).\nTo be used when platform sends orders to restaurants via SMS, fax. </p>\n<p> <b> ACCEPTED </b> - order is accepted by a restaurant, accepted field is required </p>\n<p> <b> EXPIRED </b> - (deprecated) order wasn't accepted by a restaurant and expired. same as RPS </p>\n<p> <b> PICKED_UP </b> - rider picked up an order, PICKED_UP field is required.\nDo not use this status for customer pickup orders. </p>\n<p> <b> DELIVERED </b> - rider delivered food to a customer, DELIVERED field is required.\nDELIVERED must be used also when customer picks up the order when on Order delivery.provider = “pickup” </p>\n<p> <b> CANCELLED </b> - To be used by cancellations coming from customers or Logistics at ANY time.\nCancellations coming from restaurant should happen after order being accepted.\nHowever not all transmission methods differentiate between REJECTED and CANCELLED (RPS does),\nCANCELLED field is required </p>\n<p> <b> REJECTED </b> - (deprecated) it is sent when restaurant rejects order before order being accepted. (same as\nRPS), REJECTED field is required </p>\n<p> <b>  FAILED </b> - (deprecated) happens due to an internal issue with RPS or other other transmission\nsystem/service, FAILED field is required </p>\n<p> <b> DELAYED </b> - restaurant delayed an order\nThe status property also affects other properties. For Ex :\nIf status = \"accepted\" then \"accepted\" property is required,\nDELAYED field is required </p>\n<p> <b>  ORDER_PREPARED </b> - when orders have been marked by vendors as prepared </p>",
				"enum": [
					"TRANSMITTED",
					"ACCEPTED",
					"EXPIRED",
					"PICKED_UP",
					"DELIVERED",
					"CANCELLED",
					"REJECTED",
					"FAILED",
					"DELAYED",
					"SENT_TO_TRANSMISSION",
					"REACHING_TRANSMISSION_FAILED",
					"SENDING_TO_VENDOR",
					"DISPLAYED_AT_VENDOR",
					"COURIER_NEAR_PICK_UP",
					"COURIER_LEFT_PICK_UP",
					"COURIER_NEAR_DROP_OFF",
					"SENT_TO_LOGISTICS",
					"ORDER_PREPARED",
					"COURIER_ACCEPTED_DELIVERY"
				],
				"type": "string"
			},
			"TransmissionMethodType": {
				"description": "Enum value for 'global_transmission_method_id' A1-A6, B1-B8, O1-O8 <br>\ntype | name <br>\n'A1' | RPS RAPP <br>\n'A2' | RPS 9C GO <br>\n'A3' | RPS POS F1 RAPP - note F1 facilitation method in local string (!) <br>\n'A4' | RPS POS F1 9C GO - note F1 facilitation method in local string (!) <br>\n'A5' | RPS POS F2 RAPP <br>\n'A6' | RPS POS F2 9C GO <br>\n'B1' | Local Web/Mobile (2-way) <br>\n'B2' | Local Desktop App (2-way) <br>\n'B3' | POS Integration F1 (Local) - note F1 facilitation method in local string (!) <br>\n'B4' | POS Integration F2 (Local) <br>\n'B5' | GPRS / Box / Printer (2-way) <br>\n'B6' | TTS/Robo-call (2-way) <br>\n'B7' | SMS/MMS (2-way) <br>\n'B8' | Integration with Vendor Online Ordering Platform <br>\n'O1' | Local Web/Mobile/Desktop App (1-way) <br>\n'O2' | TTS/Robo-call (1-way) <br>\n'O3' | TTS/Robo-call (1-way) <br>\n'O4' | Phone <br>\n'O5' | Fax <br>\n'O6' | Email <br>\n'O7' | Email (2-way) <br>\n'O8' | GPRS / Box / Printer (1-way)",
				"enum": [
					"A1",
					"A2",
					"A3",
					"A4",
					"A5",
					"A6",
					"B1",
					"B2",
					"B3",
					"B4",
					"B5",
					"B6",
					"B7",
					"B8",
					"O1",
					"O2",
					"O3",
					"O4",
					"O5",
					"O6",
					"O7",
					"O8"
				],
				"type": "string"
			},
			"TransmittedOrder": {
				"properties": {
					"global_transmission_method_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TransmissionMethodType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"type": {
						"type": "string",
						"nullable": true,
						"description": "String/descriptor for 'global_transmission_method_id' used locally by platforms. <br>\nMaximum length is 120 characters"
					},
					"version": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AcceptedOrderStatusSource": {
				"enum": [
					"PLATFORM",
					"VENDOR_DEVICE",
					"CONTACT_CENTER",
					"CONTACT_CENTER_VENDOR",
					"SHOPPER"
				],
				"type": "string"
			},
			"OrderStatusProviderType": {
				"enum": [
					"RPS",
					"LOCAL",
					"3RD_PARTY"
				],
				"type": "string"
			},
			"OrderStatusTransmissionMethodType": {
				"enum": [
					"APPLICATION_CLIENT",
					"BACKEND",
					"POS_INTEGRATION_DIRECT",
					"POS_INTEGRATION_INDIRECT",
					"HELICOM",
					"TTS_ROBO_CALL",
					"SMS",
					"EMAIL",
					"FAX",
					"PHONE"
				],
				"type": "string"
			},
			"ApplicationClientType": {
				"enum": [
					"ANDROID",
					"WINDOWS",
					"WEB",
					"IOS"
				],
				"type": "string"
			},
			"ClientOSType": {
				"enum": [
					"ANDROID",
					"WINDOWS",
					"IOS",
					"MACOS",
					"LINUX"
				],
				"type": "string"
			},
			"ClientInTransmission": {
				"properties": {
					"os_type": {
						"$ref": "#/components/schemas/ClientOSType"
					},
					"os_version": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 50 characters"
					},
					"app_type": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 50 characters"
					},
					"app_version": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 50 characters"
					},
					"wrapper_type": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 50 characters"
					},
					"wrapper_version": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 50 characters"
					}
				},
				"required": [
					"os_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransmissionInOrderStatus": {
				"properties": {
					"provider": {
						"$ref": "#/components/schemas/OrderStatusProviderType"
					},
					"method": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/OrderStatusTransmissionMethodType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"application_client": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ApplicationClientType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"client": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ClientInTransmission"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptedOrder": {
				"properties": {
					"estimated_delivery_time": {
						"type": "string",
						"description": "Estimated delivery timestamp as UTC ISO-8601. <br>\nValid format: <br>\n2010-02-18T06:22:33Z"
					},
					"source": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/AcceptedOrderStatusSource"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"transmission": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TransmissionInOrderStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					}
				},
				"required": [
					"estimated_delivery_time"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CancelledDetailsStageType": {
				"type": "string",
				"description": "Cancelled Details Stage Type.\nYou can find list of all supported\nCancelledDetailsStageType [here](http://configs.api.thedatafridge.com/v1/order-cancellation.json)"
			},
			"PickedUpOrder": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Pick up timestamp as UTC ISO-8601. <br>\nValid format: <br>\n2010-02-18T06:22:33Z"
					},
					"stage": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CancelledDetailsStageType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeliveredOrder": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Delivery at timestamp as UTC ISO-8601. <br>\nValid format: <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderStatusExpiredReason": {
				"enum": [
					"unreachable",
					"not_accepted_in_time"
				],
				"type": "string"
			},
			"ExpiredOrder": {
				"properties": {
					"reason": {
						"$ref": "#/components/schemas/OrderStatusExpiredReason",
						"description": "Deprecated, more info https://docs.google.com/document/d/1ZKezkory4j6BBVqpjW0vMFhWtgXoUBUpwElRNQqmGJ8/edit"
					}
				},
				"required": [
					"reason"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderStatusDeliveryRejectReason": {
				"description": "reason is DEPRECATED and that is being migrated to \"cancelled.details\".\nAny new use case should support \"cancelled.details\" information",
				"enum": [
					"blacklisted_customer",
					"duplicate_order",
					"outside_delivery_area",
					"too_busy_no_drivers",
					"too_busy_kitchen",
					"incomplete_address",
					"card_reader_not_available",
					"mov_not_reached",
					"other",
					"customer_no_show",
					"customer_left",
					"too_busy",
					"product_unavailable",
					"closed",
					"technical_problem",
					"customer_no_answer",
					"bad_weather",
					"platform_account_problem",
					"cancelled_by_customer",
					"vendor_offline",
					"cancelled_by_vendor",
					"transport_problem",
					"transport_configuration_problem",
					"transport_acknowledgement_timeout",
					"transport_bad_location",
					"transport_outside_delivery_area",
					"transport_billing_problem",
					"transport_driver_accident",
					"transport_outside_service_hours"
				],
				"type": "string"
			},
			"CancelledDetailsOwnerType": {
				"type": "string",
				"description": "Cancelled Details Owner Types.\nYou can find list of all supported\nCancelledDetailsOwnerTypes [here](http://configs.api.thedatafridge.com/v1/order-cancellation.json)\nfor more info please check https://product.deliveryhero.net/global-vendor/documentation/global-fail-reasons-list/"
			},
			"CancelledDetailsReason": {
				"type": "string",
				"description": "Cancelled Details Reason.\nYou can find list of all supported\nCancelledDetailsReason [here](http://configs.api.thedatafridge.com/v1/order-cancellation.json)\nfor more info please check https://product.deliveryhero.net/global-vendor/documentation/global-fail-reasons-list/"
			},
			"CancelledDetailsSource": {
				"type": "string",
				"description": "Cancelled Details Source.\nYou can find list of all supported\nCancelledDetailsSource [here](http://configs.api.thedatafridge.com/v1/order-cancellation.json)\nfor more info please check https://product.deliveryhero.net/global-vendor/documentation/global-fail-reasons-list/"
			},
			"CancelledDetails": {
				"properties": {
					"owner": {
						"$ref": "#/components/schemas/CancelledDetailsOwnerType"
					},
					"reason": {
						"$ref": "#/components/schemas/CancelledDetailsReason"
					},
					"stage": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CancelledDetailsStageType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"source": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CancelledDetailsSource"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"is_compensatable": {
						"type": "boolean",
						"nullable": true
					},
					"is_refundable": {
						"type": "boolean",
						"nullable": true
					}
				},
				"required": [
					"owner",
					"reason"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CancelledOrder": {
				"properties": {
					"reason": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/OrderStatusDeliveryRejectReason"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"details": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CancelledDetails"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"transmission": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TransmissionInOrderStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RejectedOrder": {
				"properties": {
					"reason": {
						"$ref": "#/components/schemas/OrderStatusDeliveryRejectReason"
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					}
				},
				"required": [
					"reason"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderStatusFailedReason": {
				"enum": [
					"transmission_failed"
				],
				"type": "string"
			},
			"FailedOrder": {
				"properties": {
					"global_transmission_method_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TransmissionMethodType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"type": {
						"type": "string",
						"nullable": true,
						"description": "Human readable descriptor for 'global_transmission_method_id' used locally by platforms. <br>\nMaximum length is 120 characters"
					},
					"reason": {
						"$ref": "#/components/schemas/OrderStatusFailedReason"
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 1000 characters"
					}
				},
				"required": [
					"reason"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DelayedOrderStatusSource": {
				"enum": [
					"VENDOR_DEVICE",
					"CONTACT_CENTER",
					"CONTACT_CENTER_VENDOR",
					"LOGISTICS"
				],
				"type": "string"
			},
			"DelayedOrder": {
				"properties": {
					"delay": {
						"type": "number",
						"format": "double",
						"description": "Delay in minutes. Delay should be > 0"
					},
					"estimated_time": {
						"type": "string",
						"description": "New estimated delivery timestamp as UTC ISO-8601. <br>\nValid format: <br>\n2010-02-18T06:22:33Z"
					},
					"stage": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CancelledDetailsStageType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"source": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DelayedOrderStatusSource"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"delay",
					"estimated_time"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SentToTransmissionOrder": {
				"properties": {
					"provider": {
						"$ref": "#/components/schemas/OrderStatusProviderType"
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"short_code": {
						"type": "string",
						"nullable": true,
						"description": "A small identifier assigned to each order which is unique per order per vendor during the day.\nThis is used for easily identifying orders between vendor and logistics/platform.\nSo a driver can just pick up the order number \"15\" of the day. It’s set on the SENT_TO_TRANSMISSION state."
					}
				},
				"required": [
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReachingTransmissionFailedOrder": {
				"properties": {
					"provider": {
						"$ref": "#/components/schemas/OrderStatusProviderType"
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					}
				},
				"required": [
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SendingToVendorOrder": {
				"properties": {
					"transmission": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TransmissionInOrderStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"estimated_delivery_time": {
						"type": "string",
						"nullable": true,
						"description": "Estimated delivery timestamp as UTC ISO-8601. <br>\nValid format: <br>\n2010-02-18T06:22:33Z"
					},
					"committed_pickup_time": {
						"type": "string",
						"nullable": true,
						"description": "Committed pickup timestamp as UTC ISO-8601. <br>\nValid format: <br>\n2010-02-18T06:22:33Z"
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DisplayedAtVendorOrder": {
				"properties": {
					"provider": {
						"$ref": "#/components/schemas/OrderStatusProviderType"
					},
					"method": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/OrderStatusTransmissionMethodType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"application_client": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ApplicationClientType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"client": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ClientInTransmission"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"comment": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					}
				},
				"required": [
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CourierCurrentLocation": {
				"properties": {
					"latitude": {
						"type": "number",
						"format": "double",
						"description": "number <double> Nullable"
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"description": "number <double> Nullable"
					}
				},
				"required": [
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CourierVehicle": {
				"properties": {
					"vehicle_id": {
						"type": "string",
						"description": "ID of the vehicle per Logistics environment\nE.g. \"courier_vehicle_id\":\"3\""
					},
					"name": {
						"type": "string",
						"description": "Name of the vehicle the rider is using during his shift in Logistics (Hurrier).\nVehicles are the combination of vehicle type (walker/car) and vehicle bag type (standard box/big box)\nresults in the vehicle the rider is using. This is the naming convention on Logistics side\nE.g. \"courier_vehicle_name\":\"Bike-Standard Box\","
					}
				},
				"required": [
					"vehicle_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Courier": {
				"properties": {
					"courier_id": {
						"type": "string",
						"description": "User ID of the Courier in Logistics (\"courier_id\":\"tw-357916)"
					},
					"name": {
						"type": "string",
						"description": "Full Name of the Courier. Same name as sent to platforms via order callbacks (\"courier_name\":\"許洳涔 JoeS\")"
					},
					"current_location": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CourierCurrentLocation"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "The current location of the rider when the respective action\n(courier accepted the order, courier picked up the order)\nhas been performed"
					},
					"courier_vehicle": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CourierVehicle"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Object (Courier Vehicle) - Vehicle used by the OD Courier delivering orders globally via Hurrier"
					}
				},
				"required": [
					"courier_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderStatusMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"order_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the order. In some platforms also called Order Code. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters <br>\nFor foodora/foodpanda countries this field is filled by their \"order_code\", <br>\nthe string value instead of the numeric one"
					},
					"vendor": {
						"$ref": "#/components/schemas/VendorInOrderStatus"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when order status event happened as UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nDF cannot accept timestamps older than 30 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"status": {
						"$ref": "#/components/schemas/OrderStatusType"
					},
					"transmitted": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TransmittedOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Deprecated, more info https://docs.google.com/document/d/1ZKezkory4j6BBVqpjW0vMFhWtgXoUBUpwElRNQqmGJ8/edit"
					},
					"accepted": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/AcceptedOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"picked_up": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PickedUpOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"delivered": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DeliveredOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"expired": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ExpiredOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Deprecated, more info https://docs.google.com/document/d/1ZKezkory4j6BBVqpjW0vMFhWtgXoUBUpwElRNQqmGJ8/edit"
					},
					"cancelled": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CancelledOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"rejected": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RejectedOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Deprecated, more info https://docs.google.com/document/d/1ZKezkory4j6BBVqpjW0vMFhWtgXoUBUpwElRNQqmGJ8/edit"
					},
					"failed": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/FailedOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Deprecated, more info https://docs.google.com/document/d/1ZKezkory4j6BBVqpjW0vMFhWtgXoUBUpwElRNQqmGJ8/edit"
					},
					"delayed": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DelayedOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"sent_to_transmission": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SentToTransmissionOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"reaching_transmission_failed": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ReachingTransmissionFailedOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"sending_to_vendor": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SendingToVendorOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"displayed_at_vendor": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DisplayedAtVendorOrder"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"is_billable": {
						"type": "boolean",
						"nullable": true,
						"description": "Defines if Order Status event should be taken into account for billing or not"
					},
					"updated_at_local": {
						"type": "string",
						"description": "Event timestamp in ISO-8601 with UTC offset.\nEx: 2021-01-07T10:00:00+02:00"
					},
					"courier": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Courier"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Object (Courier) - OD Courier delivering orders globally via Hurrier"
					},
					"platform_reference_id": {
						"type": "string",
						"nullable": true,
						"description": "ID referencing the entity which exists on the platform side before an order is placed.\nThat entity should have a 1 to 1 relation with the order. <br>\nNot necessary for platforms which already have the order ID before the order is placed. <br>\nEx: if before placing an order, the platform has an entity called Purchase, then the purchase ID should be sent\nas the platform reference ID."
					}
				},
				"required": [
					"global_entity_id",
					"order_id",
					"vendor",
					"country_code",
					"timestamp",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HistoryOrderStatusesRequest": {
				"properties": {
					"import_id": {
						"type": "string",
						"description": "It is generated id by the client every time a batch from the import request is sent. <br>\nFor example, If you are importing 1000 order statuses, and you will send 100 per batch (10 batches), <br>\nthen each batch should have the same 'import_id'"
					},
					"order_statuses": {
						"items": {
							"$ref": "#/components/schemas/OrderStatusMessage"
						},
						"type": "array",
						"description": "List of order statuses needed to be ingested to Fridge"
					}
				},
				"required": [
					"import_id",
					"order_statuses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedName": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "Maximum length is 300 characters"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedDescriptionInVendor": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VerticalType": {
				"description": "Vertical type of a vendor.<b>\nCourier is a courier services between our users,\nand courier_business is a courier service that we offer to some of our partners,\nthose partners do not appear in the search results of our app,\nbecause they only use the platform for that courier service.\nFor example, Santander, the bank, has a business type courier_business,\nbecause they use the platform to deliver cards to users.\ncourier is a C2C services and courier business is a B2C service.",
				"enum": [
					"restaurants",
					"groceries",
					"flowers",
					"cosmetics",
					"health_supplements",
					"pharmacies",
					"pets",
					"drinks",
					"cross_vertical",
					"electronics",
					"baby_supplies",
					"furniture",
					"bags_and_luggage",
					"toys",
					"optics",
					"courier",
					"coffee",
					"shop",
					"courier_business",
					"cash",
					"darkstores",
					"automotive",
					"bakery",
					"home_and_gifts",
					"party_supplies",
					"stationery",
					"home_based_kitchen",
					"kiosks",
					"delicatessen",
					"snacks",
					"clothing",
					"beauty",
					"confectionery",
					"convenience",
					"fashion",
					"games",
					"health_and_wellness",
					"just_for_adults",
					"mother_and_baby",
					"snacks_and_sweets",
					"sports_and_lifestyle",
					"stationery_and_books",
					"supermarket",
					"tobacco",
					"vehicles",
					"charity",
					"vouchers",
					"caterers",
					"bills_and_services"
				],
				"type": "string"
			},
			"ImageUrlInVendor": {
				"properties": {
					"logo": {
						"type": "string"
					},
					"header": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"logo"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedAttributeName": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "No chars limit"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorAttributeType": {
				"description": "Attribute characteristic",
				"enum": [
					"primary_cuisine",
					"cuisine",
					"characteristic",
					"budget",
					"tag"
				],
				"type": "string"
			},
			"VendorAttribute": {
				"properties": {
					"external_id": {
						"type": "string",
						"description": "Attribute id at the producers/senders end. <br>\nMaximum length is 120 characters"
					},
					"name": {
						"type": "string",
						"description": "Actual value of the attribute. <br>\nMaximum length is 300 characters"
					},
					"names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedAttributeName"
						},
						"type": "array",
						"nullable": true,
						"description": "Attribute names in different locales"
					},
					"type": {
						"$ref": "#/components/schemas/VendorAttributeType"
					},
					"timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp for attribute assignment in UTC ISO-8601. <br>\nValid formats\n2010-02-18T11:22:33Z"
					},
					"subtype": {
						"type": "string",
						"nullable": true,
						"description": "Attribute sub type, used to categorize attributes of the same type, like tag types. <br>\nMaximum length is 50 characters"
					}
				},
				"required": [
					"external_id",
					"name",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorLocation": {
				"properties": {
					"address_text": {
						"type": "string",
						"description": "Concatenation of street, building, zip, and city. <br>\nMaximum length is 1000 characters"
					},
					"rider_instructions": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 500 characters"
					},
					"street": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"street_number": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"building": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"district": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"postal_code": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"city": {
						"type": "string",
						"description": "Maximum length is 300 characters"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"city_id": {
						"type": "string",
						"nullable": true,
						"description": "Backend city_id. Should correspond with the data being passed in the delivery.location.city field. <br />\nMaximum length is 120 characters."
					},
					"area_id": {
						"type": "string",
						"nullable": true,
						"description": "Backend area_id. Should correspond with the data being passed in the content.location.district field. <br />\nMaximum length is 120 characters."
					}
				},
				"required": [
					"address_text",
					"city",
					"country_code"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransmissionMethod": {
				"properties": {
					"global_transmission_method_id": {
						"$ref": "#/components/schemas/TransmissionMethodType"
					},
					"type": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"is_primary": {
						"type": "boolean"
					}
				},
				"required": [
					"global_transmission_method_id",
					"is_primary"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Transmission": {
				"properties": {
					"contact": {
						"type": "string",
						"nullable": true,
						"description": "Phone number used for the entity to call Vendor in case there is an issue with the order. <br>\nUsed by CC for transmission related questions or automatic reminder calls. <br>\nMust be valid phone number, Ex: +49123456789"
					},
					"locale": {
						"type": "string",
						"nullable": true,
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"methods": {
						"items": {
							"$ref": "#/components/schemas/TransmissionMethod"
						},
						"type": "array",
						"nullable": true,
						"description": "Only one method should have is_primary = true"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Owner": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Maximum length is 300 characters"
					},
					"email": {
						"type": "string"
					},
					"owner_id": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerContactInVendor": {
				"properties": {
					"phone": {
						"type": "string",
						"nullable": true,
						"description": "Hotline phone number used by customers to call Vendor. <br>\nMust be valid phone number, Ex: +49123456789"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerType": {
				"description": "It determines the type of the customers this vendor is available.\nPlease notice, both values can be provided. Values:\n1) \"B2C\" - Available to b2c customers\n2) \"B2B\" - Available to corporate customers",
				"enum": [
					"b2c",
					"b2b"
				],
				"type": "string"
			},
			"Joker": {
				"properties": {
					"minimum_promotion_definition_shift_enabled": {
						"type": "boolean",
						"description": "Defines if Vendor’s unsold Jokers are rolled to the next available day.\nThis is done considering given conditions defined by the entity, using Joker service"
					}
				},
				"required": [
					"minimum_promotion_definition_shift_enabled"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChainNames": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nIf your service has a valid locale we reject, please contact us"
					},
					"value": {
						"type": "string",
						"description": "Maximum length is 300 characters"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorTransmissionFlow": {
				"description": "The value of this field represents which type of order transmission flow the vendor is using",
				"enum": [
					"restaurants",
					"groceries"
				],
				"type": "string"
			},
			"VendorMessage": {
				"properties": {
					"vendor_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters <br>\nFor foodora/foodpanda countries this field is filled by their \"vendor_code\", <br>\nthe string value instead of the numeric one"
					},
					"physical_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "The vendor ID of the physical location representing the kitchen from which this vendor operates. <br>\nIt should only be filled for \"virtual\" locations i.e. when many virtual vendors can be located at a single <br>\nphysical kitchen location. A virtual \"concept\" vendor can be listed as a separate cuisine/business <br>\non the platform, but the food is prepared by a normal vendor at their original physical location. <br>\nUnique per platform i.e. within the same global entity ID. <br>\nThis is NOT the kitchen_id from Salesforce."
					},
					"salesforce_id": {
						"type": "string",
						"nullable": true,
						"description": "salesforce_id is the salesforce account id. <br>\nThis is NOT Salesforce grid id. <br>\nMaximum length is 120 characters"
					},
					"chain_id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"chain_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"billing_parent_id": {
						"type": "string",
						"nullable": true,
						"description": "Specified if bills are generated for a group of restaurants, not for a specific one. <br>\nMaximum length is 120 characters"
					},
					"global_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "global_vendor_id is the salesforce grid_id. <br>\nMaximum length is 120 characters"
					},
					"name": {
						"type": "string",
						"description": "Vendor name, for example 'Papa Joe’s Specialists'. <br>\nMaximum length is 300 characters"
					},
					"names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedName"
						},
						"type": "array",
						"nullable": true,
						"description": "Vendor names in different locales, for example 'Papa Joe’s Spezialisten'"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Vendor description, for example 'Best Pizza in the world made by Papa Joe’s'"
					},
					"descriptions": {
						"items": {
							"$ref": "#/components/schemas/LocalizedDescriptionInVendor"
						},
						"type": "array",
						"nullable": true,
						"description": "Vendor description in different locales, for example 'Beste Pizza der Welt'"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"creation_date": {
						"type": "string",
						"description": "Creation Date is when the vendor was created on the platform as UTC ISO-8601. <br>\nValid formats\n2010-02-18T11:22:33Z"
					},
					"new_until_date": {
						"type": "string",
						"nullable": true,
						"description": "Defines date until this vendor is considered as new <br>\nExample: 1999-08-27"
					},
					"business_type": {
						"$ref": "#/components/schemas/BusinessType"
					},
					"vertical_id": {
						"type": "string",
						"nullable": true,
						"description": "Brand specific id to identify the vertical type of a vendor."
					},
					"vertical_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/VerticalType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when Vendor data was updated or was taken from a database\nin UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"currency": {
						"type": "string",
						"description": "The code for the currency in https://de.wikipedia.org/wiki/ISO_4217 format. <br>\ne.g.<code>EUR</code> for Euro"
					},
					"active": {
						"type": "boolean",
						"description": "To be defined as \"false\" if Vendor is inactive or deleted. <br>\nA vendor is active when: a vendor is on-boarded in the platform or a vendor which even\nthough is temporarily offline still has a contract. <br>\nA vendor is inactive when: a vendor does not have a contract with the platform and is off boarded or\na vendor is in test/preview state."
					},
					"key_account": {
						"type": "boolean",
						"nullable": true,
						"description": "A boolean for indicating if the vendor is a key account for the platform"
					},
					"halal": {
						"type": "boolean",
						"nullable": true,
						"description": "A boolean for indicating if the vendor is halal"
					},
					"provides_dine_out_services": {
						"type": "boolean",
						"nullable": true,
						"description": "A boolean for indicating if vendor also provides dine out service or not"
					},
					"test_vendor": {
						"type": "boolean",
						"description": "If this vendor is NOT an actual one"
					},
					"white_label_domain": {
						"type": "string",
						"nullable": true,
						"description": "Only needed if the vendor is in a whitelabel"
					},
					"images_urls": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ImageUrlInVendor"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Used for UI if a restaurant configuration is created in another service (ex global delivery area service)"
					},
					"vendor_detail_page_slug": {
						"type": "string",
						"nullable": true,
						"description": "URL to access the restaurant. <br>\nExample vendor_detail_page_slug https://www.foodora.de/restaurant/s4ft/habba-habba <br>\nMaximum length is 250 characters"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Vendor tags, for example [ \"fast\", \"asian\", \"halal\" ]. <br>\nUsed for search filtering. Are similar to keywords or Labels in JIRA. <br>\nMaximum length is 120 characters for each tag"
					},
					"attributes": {
						"items": {
							"$ref": "#/components/schemas/VendorAttribute"
						},
						"type": "array",
						"nullable": true,
						"description": "Unlike tags, attributes contain external_id and type"
					},
					"delivery_types": {
						"items": {
							"$ref": "#/components/schemas/ProviderType"
						},
						"type": "array"
					},
					"location": {
						"$ref": "#/components/schemas/VendorLocation"
					},
					"transmission": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Transmission"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"owners": {
						"items": {
							"$ref": "#/components/schemas/Owner"
						},
						"type": "array",
						"nullable": true
					},
					"contact": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CustomerContactInVendor"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Contact information used by customer to reach Vendor"
					},
					"accepts_online_payment": {
						"type": "boolean",
						"nullable": true,
						"description": "Represents that restaurant accepts online payment"
					},
					"is_contracted": {
						"type": "boolean",
						"nullable": true,
						"description": "Represents if the company has a contract with the restaurant<br>\nNOTE: the bulk of online restaurants in Korea are is_contracted = FALSE<br>.\nWe've just signed a contract with a Vendor that it will go online on March 1st for 1 year.<br>\nToday on Feb 24th we want to put the vendor live for testing<br>\non Feb 24th the three flags look like: <br>\nactive: TRUE <br>\ntest_vendor: TRUE <br>\nis_contracted: FALSE <br>\non Feb 25th once we're finished testing, they should switch to\nactive: FALSE <br>\ntest_vendor: FALSE <br>\nis_contracted: FALSE<br>\non March 1st, once it really goes live the flags should be\nactive: TRUE <br>\ntest_vendor: FALSE <br\nis_contracted: TRUE <br>"
					},
					"timezone": {
						"type": "string",
						"nullable": true,
						"description": "Timezone of the Vendor"
					},
					"customer_types": {
						"items": {
							"$ref": "#/components/schemas/CustomerType"
						},
						"type": "array",
						"nullable": true
					},
					"joker": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Joker"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Defines Joker properties and configurations for the vendor"
					},
					"activation_date": {
						"type": "string",
						"nullable": true,
						"description": "Activation date is the date at which the vendor was first available\nfor ordering by a customer as UTC ISO-8601. <br>\nThis date should not be equal to creation_date. <br>\nValid formats\n2010-02-18T11:22:33Z"
					},
					"allow_preorder": {
						"type": "boolean",
						"nullable": true,
						"description": "It tells whether vendor supports pre-order or not"
					},
					"min_preorder_time_offset_in_minutes": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum offset when added to current timestamp after which\nvendor will support pre-ordering\nIf current Timestamp is 25/06/2020 18:35:45 and the offset is 25 (minutes)\nthe first time-slot for pre-ordering will be after 25/06/2020 19:00:45"
					},
					"vertical_parent": {
						"type": "string",
						"nullable": true,
						"description": "Indicates which vertical (restaurant, shop, darkstores, etc) the vendor belongs to"
					},
					"chain_names": {
						"items": {
							"$ref": "#/components/schemas/ChainNames"
						},
						"type": "array",
						"nullable": true,
						"description": "Chain names in different locales, for example 'Papa Joe’s Spezialisten'"
					},
					"transmission_flow": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/VendorTransmissionFlow"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"vat_item_enabled": {
						"type": "boolean",
						"nullable": true,
						"description": "Flag that indicates if VAT should be included in calculations"
					},
					"payment_types": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "List of platform specific payment types identifiers assigned to a vendor: e.g. cash_on_delivery"
					}
				},
				"required": [
					"vendor_id",
					"name",
					"global_entity_id",
					"creation_date",
					"business_type",
					"locale",
					"timestamp",
					"currency",
					"active",
					"test_vendor",
					"delivery_types",
					"location"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedNameInProduct": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "There is no restriction on string size."
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedDescriptionInProduct": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "There is no restriction on string size."
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorInProduct": {
				"properties": {
					"vendor_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters <br>\nFor foodora/foodpanda countries this field is filled by their \"vendor_code\", <br>\nthe string value instead of the numeric one"
					},
					"global_catalog_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "Defines the identifier of the vendor from Catalog Service, normally given in uuid format\nMaximum length is 50 characters <br>"
					}
				},
				"required": [
					"vendor_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AttributeType": {
				"description": "Type of Attributes\n\"menu_category\" is deprecated and \"category\" should be use instead\n\"choice\" is deprecated",
				"enum": [
					"cuisine",
					"characteristic",
					"food_type",
					"ingredient",
					"menu_category",
					"category",
					"taste",
					"dietary",
					"preparation_style",
					"choice",
					"master_category"
				],
				"type": "string"
			},
			"ProductAttribute": {
				"properties": {
					"attribute_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"name": {
						"type": "string",
						"description": "Actual value of the attribute"
					},
					"names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedAttributeName"
						},
						"type": "array",
						"nullable": true,
						"description": "Attribute names in different locales"
					},
					"attribute_type": {
						"$ref": "#/components/schemas/AttributeType"
					}
				},
				"required": [
					"attribute_id",
					"name",
					"attribute_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ImageSize": {
				"properties": {
					"width": {
						"type": "number",
						"format": "double",
						"description": "Integer value in pixels"
					},
					"height": {
						"type": "number",
						"format": "double",
						"description": "Integer value in pixels"
					}
				},
				"required": [
					"width",
					"height"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ImageUrlInProduct": {
				"properties": {
					"url": {
						"type": "string"
					},
					"size": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ImageSize"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GlobalTags": {
				"description": "It defines If a product is eligible as featured product",
				"enum": [
					"featured"
				],
				"type": "string"
			},
			"TaxObjectType": {
				"enum": [
					"amount",
					"percent"
				],
				"type": "string"
			},
			"TaxObject": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/TaxObjectType"
					},
					"value": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductOptions": {
				"properties": {
					"product_option_id": {
						"type": "string",
						"description": "Identifier of product option attached to a product. Can be used to create an aggregate of a product with all\noptions which would represent the full picture of a product equivalent to the one visible to a customer."
					}
				},
				"required": [
					"product_option_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductMessage": {
				"properties": {
					"product_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the product. <br>\nShould be same as order.items.*.id field in OrderMessage.<br>\nMaximum length is 120 characters"
					},
					"create_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp when product was created in RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when Product data was updated or was taken from a database\nin UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"active": {
						"type": "boolean",
						"description": "Is product active or not. Product can be 'inactive' if hidden or deleted. <br>\nIt does not get updated if Vendor gets inactive. <br>\nOnly products which specifically get updated and activated/de-activated will change this property"
					},
					"unit_price": {
						"type": "number",
						"format": "double",
						"description": "Unit price"
					},
					"name": {
						"type": "string",
						"description": "There is no restriction on string size.\nThis is the name of the product in the default locale from the platform.\nFor example for Yogiyo  the name would be in this locale `YO_KR`"
					},
					"names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedNameInProduct"
						},
						"type": "array",
						"nullable": true,
						"description": "Product names in different locales."
					},
					"product_parent": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ProductParent"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Product parent information.<br>Used in cases when medium is provided as a product name\ninstead of Pizza Margareta.<br>Or on recommendations side several\ndifferent product variations are recommend instead of parent product."
					},
					"global_catalog_id": {
						"type": "string",
						"nullable": true,
						"description": "Defines the identifier of the product from Catalog Service."
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Product description. <br>\nThere is no restriction on string size."
					},
					"descriptions": {
						"items": {
							"$ref": "#/components/schemas/LocalizedDescriptionInProduct"
						},
						"type": "array",
						"nullable": true,
						"description": "Product description in different locales"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"vendor": {
						"$ref": "#/components/schemas/VendorInProduct"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Product tags, for example [ \"fast\", \"asian\", \"halal\" ]. <br>\nUsed for search filtering. Are similar to keywords or Labels in JIRA. <br>\nMaximum length is 120 characters for each tag"
					},
					"attributes": {
						"items": {
							"$ref": "#/components/schemas/ProductAttribute"
						},
						"type": "array",
						"description": "Unlike tags, attributes contain attribute_id and attribute_type"
					},
					"image_urls": {
						"items": {
							"$ref": "#/components/schemas/ImageUrlInProduct"
						},
						"type": "array",
						"nullable": true
					},
					"currency": {
						"type": "string",
						"nullable": true,
						"description": "The code for the currency in https://de.wikipedia.org/wiki/ISO_4217 <br>\ne.g. <code>EUR</code> for Euro."
					},
					"global_tags": {
						"items": {
							"$ref": "#/components/schemas/GlobalTags"
						},
						"type": "array",
						"nullable": true
					},
					"packaging_charge": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Net value of packaging costs for the product."
					},
					"group_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "List of ids of groups of products the given product\nbelongs to."
					},
					"vat": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TaxObject"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Selling VAT value  for the product."
					},
					"purchase_vat": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TaxObject"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Purchase VAT value for the product."
					},
					"_platform_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "This field is DEPRECATED and will be removed on 06/2021.\nThis field is needed until catalog fixes “vendor_id” field published on Product stream.\nDefines the identifier of the vendor from the platform."
					},
					"owner": {
						"type": "string",
						"nullable": true,
						"description": "The possessor of the product such as dmart, dmart_warehouse or a particular vendor\nExamples: dmart, dmart-warehouse, xyz"
					},
					"pos_id": {
						"type": "string",
						"nullable": true,
						"description": "The unique identifier for the product on the vendor side"
					},
					"product_options": {
						"items": {
							"$ref": "#/components/schemas/ProductOptions"
						},
						"type": "array",
						"nullable": true,
						"description": "Array of attached product option identifiers"
					}
				},
				"required": [
					"product_id",
					"timestamp",
					"active",
					"unit_price",
					"name",
					"global_entity_id",
					"country_code",
					"vendor",
					"attributes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductAvailabilityMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when Vendor Availability was updated last time. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"vendor_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters"
					},
					"product_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the product. <br>\nIt's the same product_id as being used in the Product stream.<br>\nMaximum length is 120 characters"
					},
					"estimated_available_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "To be displayed to end customers. Must be empty if “is_available” is true\nExample: 2016-06-10T21:42:24Z"
					},
					"stock_amount": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"is_available": {
						"type": "boolean",
						"description": "Define if product is available or not. Must be “false” if “stock_amount” is 0.\nIt might be this field is \"false\" even though \"stock_amount\" is greater than 0.\nIf active flag on Product event is false, then regardless of this value, the item is de-activated.\n\"estimated_available_timestamp\" must be empty if “is_available” is true"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"vendor_id",
					"product_id",
					"is_available"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductOptionGroup": {
				"properties": {
					"product_option_group_id": {
						"type": "string",
						"description": "Identifier of product option group"
					},
					"parent_product_option_group_id": {
						"type": "string",
						"nullable": true,
						"description": "Parent product option group. <b>\nId MUST be present in the array if more than 1 group element is there.\nNo cyclical references inside of the array"
					},
					"name": {
						"type": "string",
						"description": "Name of product option group"
					},
					"names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedName"
						},
						"type": "array",
						"nullable": true,
						"description": "Array of names in different languages"
					}
				},
				"required": [
					"product_option_group_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OptionObject": {
				"properties": {
					"option_id": {
						"type": "string",
						"description": "Identifier for selected option. <br>\nThis id is the same as in orders.order.items.options.id -\nthe one which is being added to the cart and used in order. <br>\nMaximum length is 120 characters"
					},
					"position": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Position of option in the list. Is used for sorting when displayed."
					},
					"name": {
						"type": "string",
						"description": "Name of option selection: Assuming ProductOption is “bread”\nAnd there are 2 possible options to choose one for sandwich, then names would be Rye or Wheat. <br>\nMaximum length is 300 characters"
					},
					"unit_price": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Can be positive or negative"
					},
					"default": {
						"type": "boolean",
						"nullable": true,
						"description": "Option is selected by default and can be unselected by customer"
					},
					"readonly": {
						"type": "boolean",
						"nullable": true,
						"description": "Options that the end user can see but cannot change. Default: false"
					},
					"active": {
						"type": "boolean",
						"description": "Whether Option is active"
					},
					"pos_id": {
						"type": "string",
						"nullable": true,
						"description": "The unique identifier for the product on the vendor side. <br>\nMaximum length is 255 characters"
					}
				},
				"required": [
					"option_id",
					"name",
					"active"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductOptionMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when Product option data was created or updated. <br>\nUTC ISO-8601 with AT LEAST millisecond precision"
					},
					"product_option_id": {
						"type": "string",
						"description": "Each product can have multiple options attached.\nEach product option allows you to select a limited number of option selections. <br>\nMaximum length is 120 characters"
					},
					"product_option_groups": {
						"items": {
							"$ref": "#/components/schemas/ProductOptionGroup"
						},
						"type": "array",
						"nullable": true,
						"description": "Product option groups. Contains a group in which product options do belong to and a subgroup if applicable.\nCan be also empty. <br>\nGroup contains only the path to the product options and does not contain sibling groups. <br>\nIf there are 2 groups, the second one should reference the first one in the parent_group_id. <br>\nMaximum depth should be 2. <br>\nTechnically it’s possible to have 3 or more levels of groups but so far no such use case was identified\nand it would make UI very complicated so as for now it is restricted to max 2 levels. <br><br>\nIf 1 group is present it should not have parent group id. <br>\nIf more than 1 group is present (e.g n) then exactly one should not have parent group id\nand n - 1 should have parent group id. <br>\nEach parent id can be referenced only once."
					},
					"name": {
						"type": "string",
						"description": "Product option name. For example “Sources”, “Crust type”, “Extras”, “Color” etc.\nRepresents what customers can (or have to) select. <br>\nMaximum length is 300 characters"
					},
					"names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedName"
						},
						"type": "array",
						"nullable": true,
						"description": "Product option names in different locales."
					},
					"quantity_min": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimal quantity of options to select. Empty means that there is no minimum quantity."
					},
					"quantity_max": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximal quantity of options to select. Empty means no limit."
					},
					"quantity_default": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Default quantity"
					},
					"quantity_add": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Quantity increment. Can be applied if the option is quantitative. <br>\nFor example if an option is about adding specified quantity of extra ingredient\nlike 0, 10, 20, 30, 40 or 50 g of milk to the coffee, then quantity add would be 10."
					},
					"unit_of_measure": {
						"type": "string",
						"nullable": true,
						"description": "Value to display units of measure for quantitative options: can be “g”, “ml”, “oz” “kg” etc."
					},
					"options": {
						"items": {
							"$ref": "#/components/schemas/OptionObject"
						},
						"type": "array",
						"nullable": true,
						"description": "List of options (choices or toppings) to select from. <br>\nIt’s possible to select none, one or multiple based on values of quantity_min and quantity_max. <br>\nEach option CAN have price."
					},
					"position": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Position of ProductOptions inside of product_options_group or a product"
					},
					"pos_id": {
						"type": "string",
						"nullable": true,
						"description": "Unique identifier from POS system. <br>\nMaximum length is 120 characters"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"product_option_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorInSchedule": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TimeRange": {
				"properties": {
					"from": {
						"type": "string",
						"description": "Ex: 23:30, it is Vendor's local time not UTC. <br>\n'from' starts with 00:00, and ends with 23:59. <br>\n00:00 <= from <= 23:59 <br>\n'from' cannot be equal to 24:00 (last minute of the day)"
					},
					"to": {
						"type": "string",
						"description": "Ex: 23:45, it is Vendor's local time not UTC. <br>\nIt should be greater than 'from'. <br>\n'to' starts with 00:01, and ends with 24:00. <br>\n00:01 <= to <= 24:00 <br>\n'to' cannot be equal to 00:00 (first minute of the day)"
					}
				},
				"required": [
					"from",
					"to"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WeekdaySchedule": {
				"properties": {
					"delivery": {
						"items": {
							"$ref": "#/components/schemas/TimeRange"
						},
						"type": "array",
						"nullable": true
					},
					"pickup": {
						"items": {
							"$ref": "#/components/schemas/TimeRange"
						},
						"type": "array",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ScheduleMap": {
				"properties": {
					"monday": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WeekdaySchedule"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"tuesday": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WeekdaySchedule"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"wednesday": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WeekdaySchedule"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"thursday": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WeekdaySchedule"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"friday": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WeekdaySchedule"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"saturday": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WeekdaySchedule"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"sunday": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WeekdaySchedule"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TimeRangeInSpecialDay": {
				"properties": {
					"from": {
						"type": "string",
						"description": "Ex: 23:30, it is Vendor's local time not UTC. <br>\n'from' starts with 00:00, and ends with 23:59. <br>\n00:00 <= from <= 23:59 <br>\n'from' cannot be equal to 24:00 (last minute of the day)"
					},
					"to": {
						"type": "string",
						"description": "Ex: 23:45, it is Vendor's local time not UTC. <br>\nIt should be greater than 'from'. <br>\n'to' starts with 00:01, and ends with 24:00. <br>\n00:01 <= to <= 24:00 <br>\n'to' cannot be equal to 00:00 (first minute of the day)"
					},
					"reason": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					}
				},
				"required": [
					"from",
					"to"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SpecialDay": {
				"properties": {
					"date": {
						"type": "string",
						"description": "Ex: 2010-02-18"
					},
					"delivery": {
						"items": {
							"$ref": "#/components/schemas/TimeRangeInSpecialDay"
						},
						"type": "array",
						"nullable": true
					},
					"pickup": {
						"items": {
							"$ref": "#/components/schemas/TimeRangeInSpecialDay"
						},
						"type": "array",
						"nullable": true,
						"description": "Specified only for a customer pickup"
					}
				},
				"required": [
					"date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorScheduleMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when Vendor Schedule data was updated or was taken from a database\nin UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"vendor": {
						"$ref": "#/components/schemas/VendorInSchedule"
					},
					"time_zone": {
						"type": "string",
						"description": "String representing the timezone of the schedules. <br>\nAs per https://en.wikipedia.org/wiki/List_of_tz_database_time_zones <br>\nex: \"Europe/Berlin\""
					},
					"schedules": {
						"$ref": "#/components/schemas/ScheduleMap",
						"description": "In order to cover the whole day time range should be 00:00 - 24:00"
					},
					"special_days": {
						"items": {
							"$ref": "#/components/schemas/SpecialDay"
						},
						"type": "array",
						"nullable": true,
						"description": "Special days are overriding the schedule for the whole day, like \"14.05.2018\" (Monday) would\noverride `schedules.monday` in JSON structure for 14th of May 2018. It is defining schedule for a specific day,\ninstead of using a weekly one, e.g. for Christmas, New Years Eve, 1st of May. In practice combining\n`schedules.*` and `special_days.*` can be used for display purposes for customer who would be interested\nwhen vendor is open and when is not during the whole year. <br>\nSchedule of vendor is resolved then in following order: <br>\nspecial_days - overrides entire day from “schedules” (e.g. different opening times during Christmas), <br>\nschedules - basic weekly information about opening times. <br>\nIf no delivery or pickup are specified for a special day, vendor is considered as closed. <br>\nIn order to cover the whole day time range should be 00:00 - 24:00"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"vendor",
					"time_zone",
					"schedules"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorInVendorAvailability": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorAvailabilityReason": {
				"description": "Type of VendorAvailabilityReason",
				"enum": [
					"TOO_BUSY_NO_DRIVERS",
					"TOO_BUSY_KITCHEN",
					"UPDATES_IN_MENU",
					"UNREACHABLE",
					"TECHNICAL_PROBLEM",
					"CLOSED",
					"OTHER",
					"TOO_MANY_REJECTED_ORDERS",
					"ORDER_FAILURE",
					"COURIER_DELAYED_AT_PICKUP",
					"RESTRICTED_VISIBILITY",
					"BAD_WEATHER",
					"HOLIDAY_SPECIAL_DAY",
					"ONBOARDING",
					"READY_TO_GO_ONLINE",
					"OFFBOARDING",
					"RETENTION",
					"COMPLIANCE_ISSUES",
					"OWNERSHIP_CHANGE",
					"REFURBISHMENT",
					"FOOD_HYGIENE",
					"FRAUD",
					"RELIGIOUS_OBSERVANCE",
					"CHECK_IN_REQUIRED",
					"CHECK_IN_FAILED",
					"AREA_DISRUPTION"
				],
				"type": "string"
			},
			"Author": {
				"properties": {
					"service": {
						"type": "string",
						"description": "Which app set the service unreachable. <br>\nCould be used for debugging if you have multiple services setting vendor offline. <br>\nFor example 'rps_restaurant_monitor'"
					},
					"version": {
						"type": "string",
						"nullable": true,
						"description": "Version of the service (like the release running), for example 'v1821.0.1'"
					},
					"user": {
						"type": "string",
						"nullable": true,
						"description": "E-mail address of a person setting vendor offline if it was the case. <br>\nLike CC agent email or something like this."
					}
				},
				"required": [
					"service"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UnavailableReason": {
				"properties": {
					"reason": {
						"$ref": "#/components/schemas/VendorAvailabilityReason"
					},
					"start": {
						"type": "string",
						"description": "It follows UTC ISO-8601. <br>\nExample of valid format: 2010-02-18T06:22:33.442Z"
					},
					"end": {
						"type": "string",
						"nullable": true,
						"description": "It follows UTC ISO-8601. <br>\nIt should be greater than 'start'. <br>\nExample of valid format: 2010-02-18T06:22:33.442Z"
					},
					"author": {
						"$ref": "#/components/schemas/Author"
					}
				},
				"required": [
					"reason",
					"start",
					"author"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorAvailabilityMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when Vendor Availability was updated last time. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"vendor": {
						"$ref": "#/components/schemas/VendorInVendorAvailability"
					},
					"unavailable_reasons": {
						"items": {
							"$ref": "#/components/schemas/UnavailableReason"
						},
						"type": "array",
						"nullable": true,
						"description": "Vendor is considered as available if array is empty or not present"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"vendor"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorInVendorDeliveryArea": {
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nIt is required if 'global_vendor_id' is empty\nMaximum length is 120 characters"
					},
					"global_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "global_vendor_id is the salesforce grid_id. <br>\nIt is required if 'id' is empty\nMaximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DeliveryFeeType": {
				"enum": [
					"amount",
					"percentage"
				],
				"type": "string"
			},
			"DeliveryFee": {
				"properties": {
					"value": {
						"type": "number",
						"format": "double",
						"description": "This fields can be configured per Country/Brand with or without taxes, depending on the country setup. <br>\nIf delivery_fee type is \"percentage\", Delivery Area service from Logistics may send values > 100%"
					},
					"type": {
						"$ref": "#/components/schemas/DeliveryFeeType"
					}
				},
				"required": [
					"value",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorDeliveryAreaType": {
				"enum": [
					"geo_json",
					"area_ids"
				],
				"type": "string"
			},
			"ChargeType": {
				"enum": [
					"amount",
					"percentage"
				],
				"type": "string"
			},
			"Charge": {
				"properties": {
					"value": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/ChargeType"
					}
				},
				"required": [
					"value",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Taxes": {
				"properties": {
					"municipality_tax": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Charge"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"tourist_tax": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Charge"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CoverageStatus": {
				"description": "Coverage status is used to control the visibility of vendor's delivery area, where the vendor can\ndecide not to deliver in a specific delivery area by setting the status to \\\"busy\\\" where \\\"open\\\"\nmeans the vendor is ready to accept the orders from that delivery area.<br>\\nNote: this status\nonly applies to a specific vendor delivery area where DeliveryAreaEventSubmit \\\"close\\\"\napplies to a customer location.",
				"enum": [
					"open",
					"busy"
				],
				"type": "string"
			},
			"GeoJsonType": {
				"enum": [
					"Polygon"
				],
				"type": "string"
			},
			"GeoJson": {
				"description": "Only \"Polygon\" type is supported",
				"properties": {
					"type": {
						"$ref": "#/components/schemas/GeoJsonType"
					},
					"coordinates": {
						"items": {
							"items": {
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							},
							"type": "array"
						},
						"type": "array",
						"description": "An array of polygons. Each polygon contains an array of points.\nEach point consists of longitude and latitude. <br>\nLink to GeoJSON: https://tools.ietf.org/html/rfc7946#section-3.1.1 <br>\nCoordinates are stored as \"number[ ][ ][ ]\" <br>\nExamples: <br>\n  \"coordinates\": [ <br>\n  [[30, 10], [40, 40], [20, 40], [10, 20], [30, 10]]<br>\n  ] <br>\n   \"coordinates\": [ <br>\n       [[35, 10], [45, 45], [15, 40], [10, 20], [35, 10]], <br>\n       [[20, 30], [35, 35], [30, 20], [20, 30]] <br>\n  ] <br>"
					}
				},
				"required": [
					"type",
					"coordinates"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeliveryAreaDetails": {
				"properties": {
					"delivery_area_id": {
						"type": "string",
						"nullable": true,
						"description": "Id used by the search and discovery team. Same for a vendor having same delivery_fee and minimum_order_value.\nThere might be multiple items inside 'delivery_area' having same 'delivery_area_id'. <br>\nMaximum length is 120 characters"
					},
					"delivery_area_hash": {
						"type": "string",
						"nullable": true,
						"description": "Hash for recognizing any change made to the shrink or geo_json properties. <br>\nMaximum length is 120 characters"
					},
					"delivery_fee": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DeliveryFee"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"minimum_order_value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "In decimal currency format. <br>\nThis only applies to MOV to delivery areas, additional MOV based on basket size etc might be defined. <br>\ni.e. Delivery Area Service only allows specifying MOV on the delivery area context. <br>\nHowever the platform XYZ might define MOV based on basket size as well."
					},
					"delivery_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Delivery time in minutes. Used as fallback when delivery times are dynamic. <br>\nIt must be greater than 0 if provided."
					},
					"shrinking": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Defines drive time minutes. <br>\nIt is used when activating/deactivating these delivery areas based on shrinking events. <br>\nMore info https://product.deliveryhero.net/global-logistics/documentation/how-does-shrinking-work/ <br>\nExample: ['default', '5', '10', '15', '20', '25']"
					},
					"type": {
						"$ref": "#/components/schemas/VendorDeliveryAreaType"
					},
					"area_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"taxes": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Taxes"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CoverageStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"geo_json": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GeoJson"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorDeliveryAreaMessage": {
				"properties": {
					"global_entity_ids": {
						"items": {
							"$ref": "#/components/schemas/GlobalEntityId"
						},
						"type": "array",
						"description": "DEPRECATED <br />\nAs data producer please send both global_entity_ids (array of one element) and global_entity_id (string)\nAs data consumer please start using global_entity_id field instead"
					},
					"global_entity_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GlobalEntityId"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when VendorDeliveryArea was updated as UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"vendor": {
						"$ref": "#/components/schemas/VendorInVendorDeliveryArea"
					},
					"delivery_areas": {
						"items": {
							"$ref": "#/components/schemas/DeliveryAreaDetails"
						},
						"type": "array",
						"description": "Delivery areas may not be present in case if Vendor switched from delivery to pick up. <br>\nEmpty array value is supported by logistics to delete all delivery areas"
					}
				},
				"required": [
					"global_entity_ids",
					"timestamp",
					"country_code",
					"vendor"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorAdSourcePlacementType": {
				"description": "Place type by source",
				"enum": [
					"premium_placement",
					"banner",
					"featured",
					"product",
					"vip",
					"swimlane"
				],
				"type": "string"
			},
			"VendorAdStatus": {
				"enum": [
					"active",
					"terminated"
				],
				"type": "string"
			},
			"VendorAdEventMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"vendor_id": {
						"type": "string",
						"description": "Unique Id of the vendor"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the advertisement is created or updated. <br>\nTimestamp for attribute assignment in UTC ISO-8601. <br>\nValid formats\n2010-02-18T11:22:33Z"
					},
					"ad_id": {
						"type": "string",
						"description": "Unique Id of the advertisement"
					},
					"ad_area_id": {
						"type": "string"
					},
					"position": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Position of the premium placement on the website"
					},
					"max_spots_per_area": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "How many spots can be booked per area"
					},
					"fee": {
						"type": "number",
						"format": "double",
						"description": "Premium placement fee in local currency"
					},
					"currency": {
						"type": "string",
						"description": "The code for the currency in https://de.wikipedia.org/wiki/ISO_4217 format. <br>\ne.g.<code>EUR</code> for Euro"
					},
					"suggested_fee": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Suggested fee for area in local currency"
					},
					"start_date": {
						"type": "string",
						"nullable": true,
						"description": "Time period in which premium placements were applicable"
					},
					"end_date": {
						"type": "string",
						"nullable": true,
						"description": "Time period in which premium placements were applicable (inclusive)"
					},
					"create_timestamp": {
						"type": "string"
					},
					"source_placement_type": {
						"$ref": "#/components/schemas/VendorAdSourcePlacementType"
					},
					"status": {
						"$ref": "#/components/schemas/VendorAdStatus",
						"description": "Full event is resend if status changes"
					}
				},
				"required": [
					"global_entity_id",
					"vendor_id",
					"timestamp",
					"ad_id",
					"ad_area_id",
					"fee",
					"currency",
					"create_timestamp",
					"source_placement_type",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedText": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "Text value in different language\nMaximum length is 1000 characters"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BannerImageSize": {
				"properties": {
					"width": {
						"type": "number",
						"format": "double",
						"description": "Integer value in pixels"
					},
					"height": {
						"type": "number",
						"format": "double",
						"description": "Integer value in pixels"
					}
				},
				"required": [
					"width",
					"height"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BannerImage": {
				"properties": {
					"url": {
						"type": "string"
					},
					"size": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BannerImageSize"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorCategory": {
				"properties": {
					"category_id": {
						"type": "string",
						"description": "Unique identifier for this category. <br />\nShould match a category identifier in the Product Stream given in the attributes array under attribute_id <br />\nwhere attribute_type equals “category”."
					},
					"category_hash": {
						"type": "string",
						"nullable": true,
						"description": "The fingerprint of a category as defined by its position in the tree plus titles in non-empty locales. <br />\nUsed for deep linking so that a particular identical child category used by many different vendors can be <br />\naccessed by the hash and the vendor id."
					},
					"parent_category_id": {
						"type": "string",
						"nullable": true,
						"description": "Unique identifier for this category’s parent. <br />\nShould match the category_id value of another category if this category has a parent. <br />\nIf this category is a root category and therefore has no parent, this field should not be set or null."
					},
					"name": {
						"type": "string",
						"description": "Category name in the default locale of the platform."
					},
					"names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedName"
						},
						"type": "array",
						"nullable": true,
						"description": "Category names in different locales."
					},
					"description": {
						"type": "string",
						"description": "Category description."
					},
					"descriptions": {
						"items": {
							"$ref": "#/components/schemas/LocalizedText"
						},
						"type": "array",
						"nullable": true,
						"description": "Category description in different locales."
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Category tags, used for search filtering. Are similar to keywords or Labels in JIRA. Array of strings."
					},
					"weight": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Integer to define sort order for this category among its siblings. Expected sort order is descending."
					},
					"banner_image": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BannerImage"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"category_id",
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorCategoryTreeMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when Vendor Category Tree was updated last time. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>"
					},
					"vendor_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters"
					},
					"categories": {
						"items": {
							"$ref": "#/components/schemas/VendorCategory"
						},
						"type": "array"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"vendor_id",
					"categories"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Rating": {
				"properties": {
					"score": {
						"type": "number",
						"format": "double",
						"description": "Range from 0 to 5"
					}
				},
				"required": [
					"score"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RatingMinusOneToOne": {
				"properties": {
					"score": {
						"type": "number",
						"format": "double",
						"description": "Range from -1 to 1"
					}
				},
				"required": [
					"score"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RatingZeroToOne": {
				"properties": {
					"score": {
						"type": "number",
						"format": "double",
						"description": "Range from 0 to 1"
					}
				},
				"required": [
					"score"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Ratings": {
				"properties": {
					"vendor_food": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Rating"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Directly entered by the user (on platforms where the user rates food and platforms\nwith only one rating vector)"
					},
					"vendor_delivery": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Rating"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Directly entered by the user (on platforms where the user rates delivery)"
					},
					"comment_sentiment": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RatingMinusOneToOne"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Taken from Google text analysis API (more details here:\nhttps://cloud.google.com/natural-language/docs/sentiment-tutorial)"
					},
					"review_quality": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RatingZeroToOne"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Measure created for ranking reviews. It's largely based on the amount of text"
					},
					"profanity": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RatingZeroToOne"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Boolean measure of whether the review text contains profanity\n(matches the blacklist for that particular entity)"
					},
					"fraud": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RatingZeroToOne"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Measure created based on an ML model. It's an estimation of the likelihood whether\nthe review was created by the restaurant owner"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GeoLocation": {
				"properties": {
					"lat": {
						"type": "number",
						"format": "double"
					},
					"lon": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lat",
					"lon"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocationInReview": {
				"properties": {
					"postcode": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"geo": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GeoLocation"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ReviewMessage": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country."
					},
					"country_code": {
						"type": "string"
					},
					"order_id": {
						"type": "string",
						"description": "Id which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters <br>\nFor foodora/foodpanda countries this field is filled by their \"order_code\", <br>\nthe string value instead of the numeric one"
					},
					"vendor_id": {
						"type": "string",
						"description": "Id used by customers and customer care to identify the vendor. <br>\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc. <br>\nMaximum length is 120 characters <br>\nFor foodora/foodpanda countries this field is filled by their \"vendor_code\", <br>\nthe string value instead of the numeric one"
					},
					"text": {
						"type": "string",
						"nullable": true
					},
					"language": {
						"type": "string",
						"nullable": true,
						"description": "ISO 639-3 language code (three characters)"
					},
					"user_agent": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"created_at": {
						"type": "string",
						"description": "Valid formats <br>\n2010-02-18T06:22:33Z"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the review was submitted to DataFridge as UTC ISO-8601 <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"ratings": {
						"$ref": "#/components/schemas/Ratings"
					},
					"avg_score": {
						"type": "number",
						"format": "double",
						"description": "Arithmetic mean of the vectors entered by the user (e.g. food, delivery, service, quality).<br>\nRange from 0 to 5"
					},
					"location": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/LocationInReview"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"id",
					"global_entity_id",
					"country_code",
					"order_id",
					"vendor_id",
					"created_at",
					"timestamp",
					"ratings",
					"avg_score"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackResponseFlags": {
				"description": "A collection of flags related to the status of this collection of responses",
				"properties": {
					"is_completed": {
						"type": "boolean",
						"description": "Whether all available prompts have been given responses from the customer"
					},
					"is_rejected": {
						"type": "boolean",
						"description": "Whether this response has been rejected through manual moderation"
					},
					"is_profanity": {
						"type": "boolean",
						"description": "Whether this response contains text matched to the profanity filter"
					},
					"is_fraud": {
						"type": "boolean",
						"description": "Whether this response is likely to have been created by the vendor owner"
					}
				},
				"required": [
					"is_completed",
					"is_rejected",
					"is_profanity",
					"is_fraud"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackPromptText": {
				"description": "A potentially reusable, potentially localizable string",
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "The unique ID for this text. <br>\nMaximum length of 120 characters."
					},
					"locale": {
						"type": "string",
						"nullable": true,
						"description": "The language/country code combination for this particular string. <br>\nOf the format 'xx-YY' where 'xx' is the ISO 639 language code and 'YY' is the ISO 3166 country code. <br>\nMaximum length of 6 characters."
					},
					"value": {
						"type": "string",
						"description": "The actual value given by or to the customer. <br>\nMaximum length of 500 characters."
					}
				},
				"required": [
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackChoiceText": {
				"description": "A potentially reusable, potentially localizable string offered to the user for selection.",
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "The unique ID for this text. <br>\nMaximum length of 120 characters."
					},
					"locale": {
						"type": "string",
						"nullable": true,
						"description": "The language/country code combination for this particular string. <br>\nOf the format 'xx-YY' where 'xx' is the ISO 639 language code and 'YY' is the ISO 3166 country code. <br>\nMaximum length of 6 characters."
					},
					"value": {
						"type": "string",
						"description": "The actual value given by or to the customer. <br>\nMaximum length of 500 characters."
					},
					"selected": {
						"type": "boolean",
						"description": "Whether this choice was selected by the user"
					}
				},
				"required": [
					"value",
					"selected"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackPrompt": {
				"description": "A customer's response to a single question or statement.",
				"properties": {
					"prompt_id": {
						"type": "string",
						"description": "The unique ID for this prompt. <br>\nMaximum length of 120 characters."
					},
					"prompt_response_id": {
						"type": "string",
						"description": "The unique ID for this response to the prompt. <br>\nMaximum length of 120 characters."
					},
					"prompt_text": {
						"$ref": "#/components/schemas/FeedbackPromptText",
						"description": "The text given to the user that prompted this response."
					},
					"response_type": {
						"type": "string"
					},
					"choices": {
						"items": {
							"$ref": "#/components/schemas/FeedbackChoiceText"
						},
						"type": "array",
						"nullable": true,
						"description": "The choices available to the user if the response type is 'select_one', 'select_many', or 'scale'."
					},
					"free_text_input": {
						"type": "string",
						"nullable": true,
						"description": "A free text field for user responses to a 'free_text' type prompt. <br>\nMaximum length of 1000 characters."
					},
					"supplemental_comment": {
						"type": "string",
						"nullable": true,
						"description": "A free text field for user inputs to supplement other input types. <br>\nFor example, if the user selects 'other' and writes in a new tag. <br>\nMaximum length of 1000 characters."
					}
				},
				"required": [
					"prompt_id",
					"prompt_response_id",
					"prompt_text",
					"response_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackResponseMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country."
					},
					"order_id": {
						"type": "string",
						"description": "Unique ID for the order associated with this feedback. <br>\nMaximum length of 120 characters."
					},
					"rider_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Unique ID for the rider(s) associated with this feedback and order. <br>\nEmpty if no rider information is available or if this is a marketplace order. <br>\nEach has maximum length of 120 characters."
					},
					"template_id": {
						"type": "string",
						"description": "Unique ID for the template used to generate the prompts. <br>\nMaximum length of 120 characters."
					},
					"revision_id": {
						"type": "string",
						"description": "Unique ID for the revision of the template used to generate the survey\nMaximum length of 120 characters."
					},
					"survey_id": {
						"type": "string",
						"description": "Unique ID for the survey containing the submitted prompts. <br>\nGenerated from a template + order, though sometimes created without an order.\nMaximum length of 120 characters."
					},
					"timestamp": {
						"type": "string",
						"description": "Last time the response message was updated as UTC ISO-8601. <br>\nFor example, if the message's flags are updated the `updated_at` field is also updated. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"created_at": {
						"type": "string",
						"nullable": true,
						"description": "Time the survey response was first submitted as UTC ISO-8601. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"subject": {
						"type": "string",
						"description": "Category for all of the prompts in this feedback tree.<br>\nMaximum length of 120 characters."
					},
					"flags": {
						"$ref": "#/components/schemas/FeedbackResponseFlags",
						"description": "The flags for this collection of prompt responses"
					},
					"prompts": {
						"items": {
							"$ref": "#/components/schemas/FeedbackPrompt"
						},
						"type": "array",
						"description": "The responses for each prompt in order from earliest to latest. <br>\nDepending on user inputs, the prompts may be different for the same template. <br>\nFor example, a negative customer review may not contain a \"compliments\" prompt but <br>\ninstead a \"what went wrong\" prompt."
					}
				},
				"required": [
					"global_entity_id",
					"order_id",
					"template_id",
					"revision_id",
					"survey_id",
					"timestamp",
					"subject",
					"flags",
					"prompts"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SurveyResponseType": {
				"enum": [
					"AFTER_CONTACT",
					"AFTER_ORDER"
				],
				"type": "string"
			},
			"Salesforce": {
				"properties": {
					"case_id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"owner_id": {
						"type": "string",
						"nullable": true,
						"description": "Salesforce identifier of CMX employee who takes care of the survey. <br>\nMaximum length is 120 characters"
					},
					"account_id": {
						"type": "string",
						"nullable": true,
						"description": "Id required when target_group is vendor, identifies the vendor on Salesforce. <br>\nMaximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TargetGroupType": {
				"description": "It defines if survey target is a vendor or customer",
				"enum": [
					"vendor",
					"customer"
				],
				"type": "string"
			},
			"CaseReason": {
				"properties": {
					"level_1": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"level_2": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"level_3": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AfterContactUser": {
				"properties": {
					"dwh_analytical_user_id": {
						"type": "string",
						"nullable": true,
						"description": "Analytical user ID calculated on data warehouse. <br>\nMaximum length is 120 characters"
					},
					"channel": {
						"type": "string",
						"nullable": true,
						"description": "Contact channel, for example \"phone\", it comes from Salesforce. <br>\nMaximum length is 120 characters"
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "Defines the contact email, it might differ from the recipient_email, comes from Salesforce"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Stats": {
				"properties": {
					"sum": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of responses which have \"satisfied\" or \"very satisfied\" in option questions"
					},
					"option_responses_sum": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of responses for option questions"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AnswerType": {
				"enum": [
					"text",
					"option"
				],
				"type": "string"
			},
			"Answer": {
				"properties": {
					"question_id": {
						"type": "string",
						"description": "Identifier of question. <br>\nMaximum length is 120 characters"
					},
					"import_id": {
						"type": "string",
						"description": "Identifier of imported question. <br>\nMaximum length is 120 characters"
					},
					"answer_type": {
						"$ref": "#/components/schemas/AnswerType"
					},
					"option_id": {
						"type": "string",
						"nullable": true,
						"description": "Identifier of of survey response. Required if type is \"option\". <br>\nMaximum length is 120 characters"
					},
					"answer": {
						"type": "string",
						"nullable": true,
						"description": "Required if type is \"text\". <br>\nMaximum length is 120 characters"
					}
				},
				"required": [
					"question_id",
					"import_id",
					"answer_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResponseInSurvery": {
				"properties": {
					"response_id": {
						"type": "string",
						"description": "Identifier of survey response. <br>\nMaximum length is 120 characters"
					},
					"stats": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Stats"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"answers": {
						"items": {
							"$ref": "#/components/schemas/Answer"
						},
						"type": "array"
					}
				},
				"required": [
					"response_id",
					"answers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AfterContactResponse": {
				"properties": {
					"start_date": {
						"type": "string",
						"description": "Timestamp when person starts the survey, when it is open in browser happened as UTC ISO-8601. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"end_date": {
						"type": "string",
						"description": "end_date: <br>\nsubmission date of the survey. <br>\nlast activity of the user. <br>\nin some cases start_date = end_date when\nthe survey was started (link clicked in email), but browser never opened<br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"finished": {
						"type": "boolean",
						"description": "It should be true only if survey was submitted"
					},
					"response": {
						"$ref": "#/components/schemas/ResponseInSurvery"
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "Customer's email or email from vendor receiving survey\nit can be null when Surveys are  sent using an anonymous link and sent from Braze (CRM tool) <br>\nfor instance - Recipient Email is not pushed through in that case. <br>\nThe surveys response data is managed by Qualtrics."
					},
					"salesforce": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Salesforce"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"target_group": {
						"$ref": "#/components/schemas/TargetGroupType"
					},
					"case_reason": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CaseReason"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"user": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/AfterContactUser"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"start_date",
					"end_date",
					"finished",
					"response",
					"target_group"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AfterOrderUser": {
				"properties": {
					"dwh_analytical_user_id": {
						"type": "string",
						"nullable": true,
						"description": "Analytical user ID calculated on data warehouse. <br>\nMaximum length is 120 characters"
					},
					"channel": {
						"type": "string",
						"nullable": true,
						"description": "Contact channel, for example \"phone\", it comes from Salesforce. <br>\nMaximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AfterOrderResponse": {
				"properties": {
					"start_date": {
						"type": "string",
						"description": "Timestamp when person starts the survey, when it is open in browser happened as UTC ISO-8601. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"end_date": {
						"type": "string",
						"description": "end_date: <br>\nsubmission date of the survey. <br>\nlast activity of the user. <br>\nin some cases start_date = end_date when\nthe survey was started (link clicked in email), but browser never opened<br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"finished": {
						"type": "boolean",
						"description": "It should be true only if survey was submitted"
					},
					"response": {
						"$ref": "#/components/schemas/ResponseInSurvery"
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "Customer's email\nit can be null when Surveys are  sent using an anonymous link and sent from Braze (CRM tool) <br>\nfor instance - Recipient Email is not pushed through in that case. <br>\nThe surveys response data is managed by Qualtrics."
					},
					"order_id": {
						"type": "string",
						"description": "order_id which triggered the survey. The order_id that relates to the survey. <br>\nMaximum length is 120 characters <br>\nFor foodora/foodpanda countries this field is filled by their \"order_code\", <br>\nthe string value instead of the numeric one"
					},
					"user": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/AfterOrderUser"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"segment_loyalty": {
						"type": "string",
						"nullable": true
					},
					"vertical": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"start_date",
					"end_date",
					"finished",
					"response",
					"order_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SurveyResponseMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Last time the survey was edited as UTC ISO-8601. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"survey_id": {
						"type": "string"
					},
					"survey_response_type": {
						"$ref": "#/components/schemas/SurveyResponseType"
					},
					"after_contact_response": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/AfterContactResponse"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"after_order_response": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/AfterOrderResponse"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"survey_id",
					"survey_response_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeliveryAreaEventAction": {
				"description": "Action \\\"close\\\" on apply to customer location where \\\"lockdown\\\" action close an area for both customer <br>\nand vendor location so that no rider has to enter that area (neither for pickup nor for drop off)\"",
				"enum": [
					"close",
					"shrink",
					"delay",
					"lockdown"
				],
				"type": "string"
			},
			"LocalizedMessage": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"locale",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorAttributeInDeliveryAreaEvent": {
				"properties": {
					"halal": {
						"type": "boolean",
						"nullable": true
					},
					"vertical_types": {
						"items": {
							"$ref": "#/components/schemas/VerticalType"
						},
						"type": "array",
						"nullable": true
					},
					"chain_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Vendor tags to apply events to a specific subset of vendor attributes. <br>\nMaximum length is 120 characters for each tag"
					},
					"delivery_types": {
						"items": {
							"$ref": "#/components/schemas/ProviderType"
						},
						"type": "array",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Filter": {
				"properties": {
					"shape": {
						"$ref": "#/components/schemas/GeoJson"
					},
					"vendor_attributes": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/VendorAttributeInDeliveryAreaEvent"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"vendor_filters": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"shape"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeliveryAreaEventMessage": {
				"properties": {
					"global_entity_ids": {
						"items": {
							"$ref": "#/components/schemas/GlobalEntityId"
						},
						"type": "array"
					},
					"event_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"active": {
						"type": "boolean",
						"description": "Determines if delivery area event was activated"
					},
					"action": {
						"$ref": "#/components/schemas/DeliveryAreaEventAction"
					},
					"value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Required only if “action” is “shrink” or “delay”. <br>\nIf \"action\" is \"shrink\" represents minutes of drive time. <br>\nIf \"action\" is \"delay\" represents minutes of delay"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/LocalizedMessage"
						},
						"type": "array",
						"nullable": true
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when delivery area was updated as UTC ISO-8601 with AT LEAST millisecond precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"filter": {
						"$ref": "#/components/schemas/Filter"
					}
				},
				"required": [
					"global_entity_ids",
					"event_id",
					"active",
					"action",
					"timestamp",
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforcePlatformName": {
				"enum": [
					"Burger King",
					"domicilios.com",
					"hungryhouse",
					"LieferheldDE",
					"Netkellner",
					"Not in Auction",
					"Not in G-Market",
					"OnlinePizza",
					"Otlob",
					"PizzaDE",
					"PizzaOnline",
					"Talabat",
					"Talabat Egypt",
					"Yogiyo",
					"Foodora",
					"PedidosYa",
					"BDT",
					"limadelivery.com",
					"Mjam",
					"PizzaPortal",
					"Not in G9",
					"Butakhae",
					"clickdelivery.com.pe",
					"adomicilioYa.com",
					"Mjam App",
					"Mat24",
					"FoodOnClick",
					"Netpincer",
					"Foodpanda",
					"Damejidlo",
					"Hungerstation"
				],
				"type": "string"
			},
			"SalesforceAccountPlatform": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"name": {
						"$ref": "#/components/schemas/SalesforcePlatformName"
					},
					"account": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"status": {
						"type": "string",
						"nullable": true,
						"description": "Vendor status. <br>\nPossible values: New, Active, Terminated, Pending Activation <br>\nMaximum length is 120 characters"
					}
				},
				"required": [
					"id",
					"name",
					"account"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAccountType": {
				"enum": [
					"Group",
					"Brand",
					"Branch",
					"Franchise",
					"Regional / Global HQ",
					"Holding",
					"Crosslisted",
					"Branch - Virtual Restaurant",
					"Branch - Concept Restaurant",
					"Branch - Main",
					"Branch - Express",
					"Branch - Kitchen Restaurant",
					"DH Concept"
				],
				"type": "string"
			},
			"SalesforceParentAccount": {
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"grid": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceFranchiseAccount": {
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"grid": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceFacilityAccount": {
				"properties": {
					"grid": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAccountFinanceSpecifications": {
				"enum": [
					"Bill rejected",
					"Basket Size Calculation",
					"Order Size Calculation"
				],
				"type": "string"
			},
			"SalesforceBankAccountType": {
				"enum": [
					"Savings Account",
					"Current Account",
					"Bank Giro",
					"Plus Giro",
					"Bank Account",
					"Vista Account",
					"Personal Bank Account",
					"Business Bank Account"
				],
				"type": "string"
			},
			"SalesforceAccountBankInfo": {
				"properties": {
					"name": {
						"type": "string",
						"nullable": true,
						"description": "Bank name. <br>\nMaximum length is 120 characters"
					},
					"account_number": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"iban": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"account_owner": {
						"type": "string",
						"nullable": true,
						"description": "Name of the owner of the Bank Account. <br>\nMaximum length is 300 characters"
					},
					"swift_code_bic": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"bank_account_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceBankAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Indicates the type of the bank account"
					},
					"bank_activation_date": {
						"type": "string",
						"nullable": true,
						"description": "Indicates the date of activation of bank account"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAccountVertical": {
				"enum": [
					"Restaurant",
					"Shop"
				],
				"type": "string"
			},
			"SalesforceAccountVerticalSegment": {
				"enum": [
					"Coffee",
					"Drinks",
					"Flowers",
					"Groceries",
					"Pets",
					"Pharmacy",
					"Regular Restaurant",
					"Home & Gifts",
					"Bakery",
					"Party Supplies",
					"Stationery",
					"Supplements",
					"Baby",
					"Healthcare & Beauty",
					"restaurants",
					"groceries",
					"flowers",
					"cosmetics",
					"health_supplements",
					"pharmacies",
					"pets",
					"drinks",
					"cross_vertical",
					"electronics",
					"baby_supplies",
					"furniture",
					"bags_and_luggage",
					"toys",
					"optics",
					"courier",
					"coffee",
					"shop",
					"courier_business",
					"cash",
					"darkstores",
					"automotive",
					"bakery",
					"home_and_gifts",
					"party_supplies",
					"stationery",
					"home_based_kitchen",
					"kiosks",
					"delicatessen",
					"snacks",
					"clothing",
					"beauty",
					"confectionery",
					"convenience",
					"fashion",
					"games",
					"health_and_wellness",
					"just_for_adults",
					"mother_and_baby",
					"snacks_and_sweets",
					"sports_and_lifestyle",
					"stationery_and_books",
					"supermarket",
					"tobacco",
					"vehicles",
					"charity",
					"vouchers",
					"caterers"
				],
				"type": "string"
			},
			"SalesforceCourierService": {
				"enum": [
					"B2B",
					"B2C"
				],
				"type": "string"
			},
			"SalesforceAccountStatus": {
				"enum": [
					"New",
					"Negotiation",
					"Collecting Documents",
					"Quality Check",
					"Menu processing",
					"Onboarding",
					"Active",
					"Terminated",
					"Lost",
					"Partially Online",
					"Win Back failed",
					"Active - Temp. Unavailable"
				],
				"type": "string"
			},
			"SalesforceAccount": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"name": {
						"type": "string",
						"description": "Maximum length is 300 characters"
					},
					"parent_account": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceParentAccount"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"franchise_account": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceFranchiseAccount"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"facility_account": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceFacilityAccount"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Facility Account"
					},
					"account_facility_capex": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Facility Account Capex Number Field"
					},
					"account_facility_opex_non_rent": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Facility Account Opex Non Rent Number Field"
					},
					"account_facility_opex_rent": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Facility Account Opex Rent Number Field"
					},
					"account_facility_rental_expiration_date": {
						"type": "string",
						"nullable": true,
						"description": "Facility Account Rental Expiration Date Field"
					},
					"account_facility_stalls_occupied": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Facility Account Stalls Occupied Number Field"
					},
					"account_facility_surface_area": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Facility Account Surface Area Number Field"
					},
					"account_facility_total_stalls": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Facility Total Stalls Number Field"
					},
					"account_finance_specifications": {
						"items": {
							"$ref": "#/components/schemas/SalesforceAccountFinanceSpecifications"
						},
						"type": "array",
						"nullable": true,
						"description": "Account Specification Multipicklist field"
					},
					"vendor_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"delivery_service_pick_list": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"payment_method": {
						"type": "string",
						"nullable": true
					},
					"tax_number": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"legal_form": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"business_office": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"registration_office": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"trade_register_number": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"menu_tax_information": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 40 characters"
					},
					"owner_email": {
						"type": "string",
						"nullable": true,
						"description": "This field is not validated, so it can contain invalid emails."
					},
					"mark_for_testing_training": {
						"type": "boolean",
						"nullable": true
					},
					"key_vip_account": {
						"type": "boolean",
						"nullable": true
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "Email of the Restaurant(Account) <br>\nThis field is not validated, so it can contain invalid emails."
					},
					"bank_info": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountBankInfo"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Contains information about Active bank account details"
					},
					"legal_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Maximum length is 120 characters"
					},
					"shared_menu_grid": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"account_vertical": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountVertical"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Maximum length is 255 characters"
					},
					"account_vertical_segment": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountVerticalSegment"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Maximum length is 255 characters. <br>\nSalesforce will only use the snake_case (lower case) values for new rollouts. <br>\nThe human readable values (starting with Upper case and having spaces are deprecated and will be removed."
					},
					"courier_service": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceCourierService"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Depreciated. Indicates if a partner is using Courier and how"
					},
					"courier_services": {
						"items": {
							"$ref": "#/components/schemas/SalesforceCourierService"
						},
						"type": "array",
						"nullable": true,
						"description": "Indicates if a partner is using Courier and how"
					},
					"commission_base": {
						"type": "string",
						"nullable": true,
						"description": "Used to track finance specifications (gross/net) in Sweden and Finland"
					},
					"account_status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Indicates the status of the Account"
					},
					"source": {
						"type": "string",
						"nullable": true,
						"description": "Indicates the source of the Account"
					},
					"billing_token": {
						"type": "string",
						"nullable": true,
						"description": "Used to track billing information for Netpincer"
					},
					"food_license_number": {
						"type": "string",
						"nullable": true,
						"description": "Used to track food licence number fo PY Uruguay"
					},
					"nrc": {
						"type": "string",
						"nullable": true,
						"description": "Used to track tax information for El Salvador"
					},
					"special_characteristics": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Used to track the lead generation process"
					},
					"account_description": {
						"type": "string",
						"nullable": true,
						"description": "Used for the vendor description"
					},
					"account_minimum_order_value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum order value of the account"
					},
					"account_vendor_grade": {
						"type": "string",
						"nullable": true,
						"description": "Vendor Grade"
					},
					"account_target_partner": {
						"type": "string",
						"nullable": true,
						"description": "Target partner"
					},
					"account_key_account_sub_category": {
						"type": "string",
						"nullable": true,
						"description": "Subcategory of the key account"
					},
					"account_number_of_outlets_per_chain": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of outlets per chain"
					},
					"account_mark_up": {
						"type": "string",
						"nullable": true,
						"description": "Mark up"
					},
					"account_mark_up_value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Mark up value"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceContactRole": {
				"enum": [
					"Owner",
					"Billing Manager",
					"Co-owner",
					"Manager",
					"Employee",
					"Franchise Contact",
					"Previous Owner",
					"Ex-employee",
					"Marketing Manager",
					"Restaurant Operations",
					"Customer Contact"
				],
				"type": "string"
			},
			"SalesforceContactInAccountCreation": {
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"salutation": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"first_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"last_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"middle_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"suffix": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"mobile_phone": {
						"type": "string",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"role": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceContactRole"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters <br>\nThis field is not validated, so it can contain invalid emails."
					},
					"hotline": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAddress": {
				"properties": {
					"address_text": {
						"type": "string",
						"nullable": true,
						"description": "This field has no maximum length limitation"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"country": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"postcode": {
						"type": "string",
						"nullable": true
					},
					"street_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"street_number": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					},
					"area": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 300 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAddressDetails": {
				"properties": {
					"formatted_address": {
						"type": "string"
					},
					"global_city_label": {
						"type": "string",
						"nullable": true
					},
					"global_country_code": {
						"type": "string",
						"nullable": true
					},
					"global_country_label": {
						"type": "string",
						"nullable": true
					},
					"global_postal_code": {
						"type": "string",
						"nullable": true
					},
					"global_state_province_code": {
						"type": "string",
						"nullable": true
					},
					"global_street_number_code": {
						"type": "string",
						"nullable": true
					},
					"global_street_label": {
						"type": "string",
						"nullable": true
					},
					"global_state_province_label": {
						"type": "string",
						"nullable": true
					},
					"global_city_code": {
						"type": "string",
						"nullable": true
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"type": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"translate_street_name": {
						"type": "string",
						"nullable": true
					},
					"translate_city_name": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"formatted_address",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceBankAccountStatus": {
				"enum": [
					"Active",
					"Inactive",
					"Approval Pending",
					"Rejected",
					"Approved",
					"New",
					"Scheduled Update Failed"
				],
				"type": "string"
			},
			"SalesforceBankAccountInfo": {
				"properties": {
					"account_number": {
						"type": "string",
						"nullable": true
					},
					"account_owner": {
						"type": "string",
						"nullable": true
					},
					"account_owner_id": {
						"type": "string",
						"nullable": true
					},
					"activation_date": {
						"type": "string",
						"nullable": true
					},
					"account_name": {
						"type": "string",
						"nullable": true
					},
					"account_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceBankAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"is_direct_debit": {
						"type": "boolean",
						"nullable": true
					},
					"bank_name": {
						"type": "string",
						"nullable": true
					},
					"sort_code": {
						"type": "string",
						"nullable": true
					},
					"iban": {
						"type": "string",
						"nullable": true
					},
					"payment_method": {
						"type": "string",
						"nullable": true
					},
					"swift_code_bic": {
						"type": "string",
						"nullable": true
					},
					"bank_office_number": {
						"type": "string",
						"nullable": true
					},
					"status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceBankAccountStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"account_number",
					"bank_office_number"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAccountContact": {
				"properties": {
					"id": {
						"type": "string"
					},
					"salutation": {
						"type": "string",
						"nullable": true
					},
					"first_name": {
						"type": "string",
						"nullable": true
					},
					"last_name": {
						"type": "string"
					},
					"middle_name": {
						"type": "string",
						"nullable": true
					},
					"suffix": {
						"type": "string"
					},
					"mobile_phone": {
						"type": "string"
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"role": {
						"type": "string"
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"hotline": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"last_name",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceRecordType": {
				"enum": [
					"AT_Account",
					"CD_Account",
					"DE_Account",
					"DH_AU_Account",
					"FI_Account",
					"PY_Account",
					"Salesforce_Default",
					"SE_Account",
					"Talabat_Account",
					"UK_Account",
					"Yogiyo_Account",
					"AT_Contact",
					"CD_Contact",
					"DE_Contact",
					"DH_AU_Contact",
					"FI_Contact",
					"PY_Contact",
					"SE_Contact",
					"Talabat_Contact",
					"UK_Contact",
					"Yogiyo_Contact",
					"AT_Contract",
					"CD_Contract",
					"DE_Contract",
					"DH_AU_Contract",
					"FI_Contract",
					"PY_Contract",
					"SE_Contract",
					"Talabat_Contract",
					"UK_Contract",
					"Yogiyo_Contract",
					"AT_Additional_Charges",
					"CD_Additional_Charges",
					"DE_Additional_Charges",
					" DH_AU_Additional_Charges",
					"FI_Additional_Charges",
					"PY_Additional_Charges",
					"SE_Additional_Charges",
					"Talabat_Additional_Charges",
					"Yogiyo_Additional_Charges",
					"TEST_INSTRUMENTATION_VA",
					"HU_Account",
					"HU_Contact",
					"HU_Contract",
					"HU_Additional_Charges",
					"FP_Account",
					"FP_Contact",
					"FP_Contract",
					"FP_Additional_Charges",
					"CZ_Account",
					"CZ_Contact",
					"CZ_Contract",
					"CZ_Additional_Charges",
					"RO_Account",
					"RO_Contact",
					"RO_Contract",
					"RO_Additional_Charges",
					"MENA_Account",
					"MENA_Contact",
					"MENA_Contract",
					"MENA_Additional_Charges",
					"Nordics_Account",
					"Nordics_Contact",
					"Nordics_Contract",
					"Nordics_Additional_Charges"
				],
				"type": "string"
			},
			"SalesforceEventType": {
				"enum": [
					"AccountCreation",
					"Account",
					"AddressDetail",
					"CaseUpdate",
					"Contact",
					"BillingContact",
					"Commission",
					"CommissionUpdate",
					"CommissionTerminate",
					"AddCharge",
					"AddChargeUpdate",
					"AddChargeTerminate",
					"VendorStatusChange",
					"BankAccountInfo"
				],
				"type": "string"
			},
			"SalesforceAccountCreationMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"new": {
						"type": "boolean"
					},
					"industry": {
						"type": "string",
						"nullable": true,
						"description": "This is the industry where the account is selling like restaurant or Pharmacy <br>\nMaximum length is 120 characters"
					},
					"platforms": {
						"items": {
							"$ref": "#/components/schemas/SalesforceAccountPlatform"
						},
						"type": "array",
						"nullable": true
					},
					"account": {
						"$ref": "#/components/schemas/SalesforceAccount"
					},
					"contact": {
						"$ref": "#/components/schemas/SalesforceContactInAccountCreation"
					},
					"address": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAddress"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"invoice_type": {
						"type": "string",
						"nullable": true,
						"description": "Identifies the type of invoice that the Restaurant should use,\ndepending on the number of employees the Invoice Type will vary."
					},
					"giro": {
						"type": "string",
						"nullable": true,
						"description": "Identifies the categorization of the business, which will affect the payment of taxes."
					},
					"addresses": {
						"items": {
							"$ref": "#/components/schemas/SalesforceAddressDetails"
						},
						"type": "array",
						"nullable": true,
						"description": "String Has a JSON Array with the same format as Account_Platform__c"
					},
					"bank_details": {
						"items": {
							"$ref": "#/components/schemas/SalesforceBankAccountInfo"
						},
						"type": "array",
						"nullable": true,
						"description": "String has a JSON Array with all the bank account information related to the Account"
					},
					"account_translated_name": {
						"type": "string",
						"description": "This is a translation of the client name into a local language"
					},
					"account_categories": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "These are multiple categories from the account"
					},
					"account_price_range": {
						"type": "string",
						"nullable": true,
						"description": "This is the price range of the Account, with respect to the market"
					},
					"account_special_characteristics": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "special characteristics of a restaurant. Those attributes are local"
					},
					"dietary_information": {
						"type": "string",
						"nullable": true,
						"description": "this field is to differentiate if the account has a specific Dietary information"
					},
					"invoice_frequency": {
						"type": "string",
						"nullable": true,
						"description": "This is the time frequency of the invoice. <br>\nThis should be Weekly, Bi-monthly, Monthly, Bi-weekly or Quint-Monthly"
					},
					"contacts": {
						"items": {
							"$ref": "#/components/schemas/SalesforceAccountContact"
						},
						"type": "array",
						"nullable": true,
						"description": "String Has a JSON Array with the same format as Account_Platform__c"
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"new",
					"account"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAdditionalChargeStatus": {
				"enum": [
					"Active",
					"Terminated",
					"Pending Activation"
				],
				"type": "string"
			},
			"SalesforceAdditionalChargeMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_backend_id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"account_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"salesforce_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAdditionalChargeStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"list_price": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"start_date": {
						"type": "string",
						"nullable": true,
						"description": "Valid formats: <br>\n2010-02-18"
					},
					"end_date": {
						"type": "string",
						"nullable": true,
						"description": "Valid formats: <br>\n2010-02-18"
					},
					"product": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"product_group": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"installments": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"discount": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"address_postcode": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 250 characters"
					},
					"budget": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum amount a customer can spend on cpc/cpn products monthly"
					},
					"total": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"payment_method": {
						"type": "string",
						"nullable": true
					},
					"termination_reason": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 100 characters"
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"salesforce_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceAddChargeUpdateMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_backend_id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"account_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"salesforce_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAdditionalChargeStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"list_price": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"start_date": {
						"type": "string",
						"nullable": true,
						"description": "Valid formats: <br>\n2010-02-18"
					},
					"end_date": {
						"type": "string",
						"nullable": true,
						"description": "Valid formats: <br>\n2010-02-18"
					},
					"product": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"product_group": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"installments": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"discount": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"address_postcode": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 250 characters"
					},
					"budget": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum amount a customer can spend on cpc/cpn products monthly"
					},
					"total": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"payment_method": {
						"type": "string",
						"nullable": true
					},
					"account_country": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"salesforce_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceCommissionStatus": {
				"enum": [
					"Activated",
					"Expired",
					"Terminated"
				],
				"type": "string"
			},
			"SalesforceCommissionType": {
				"enum": [
					"Commission Fee",
					"Online Payment Fee",
					"Debit Card Payment Fee",
					"Credit Card Payment Fee",
					"Logistics Fee",
					"Delivery Fee",
					"SZÉP Card Payment Fee",
					"Bank Card Payment Fee",
					"Take Away Commission Fee",
					"Additional Menu Fee",
					"Courier Fee",
					"Deal Subscription Fee",
					"Complementary Logistics Fee"
				],
				"type": "string"
			},
			"SalesforceCommissionBasedOn": {
				"enum": [
					"Monetary Amounts",
					"Orders"
				],
				"type": "string"
			},
			"Tier": {
				"properties": {
					"min": {
						"type": "number",
						"format": "double"
					},
					"max": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"commission_value": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"min",
					"commission_value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceCommissionValueType": {
				"enum": [
					"Percentage",
					"Per Order"
				],
				"type": "string"
			},
			"SalesforceCommissionMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_backend_id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"account_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceAccountType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"salesforce_id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"tariff_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"start_date": {
						"type": "string",
						"nullable": true,
						"description": "Valid formats: <br>\n2010-02-18"
					},
					"end_date": {
						"type": "string",
						"nullable": true,
						"description": "Valid formats: <br>\n2010-02-18"
					},
					"status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceCommissionStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceCommissionType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"value": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"based_on": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceCommissionBasedOn"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"tiers": {
						"items": {
							"$ref": "#/components/schemas/Tier"
						},
						"type": "array",
						"nullable": true
					},
					"value_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceCommissionValueType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceUpdateAccountMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account": {
						"$ref": "#/components/schemas/SalesforceAccount"
					},
					"industry": {
						"type": "string",
						"nullable": true,
						"description": "This is the industry where the account is selling like restaurant or Pharmacy <br>\nMaximum length is 120 characters"
					},
					"invoice_type": {
						"type": "string",
						"nullable": true,
						"description": "Identifies the type of invoice that the Restaurant should use,\ndepending on the number of employees the Invoice Type will vary."
					},
					"giro": {
						"type": "string",
						"nullable": true,
						"description": "Identifies the categorization of the business, which will affect the payment of taxes."
					},
					"addresses": {
						"items": {
							"$ref": "#/components/schemas/SalesforceAddressDetails"
						},
						"type": "array",
						"nullable": true,
						"description": "String Has a JSON Array with the same format as Account_Platform__c"
					},
					"bank_details": {
						"items": {
							"$ref": "#/components/schemas/SalesforceBankAccountInfo"
						},
						"type": "array",
						"nullable": true,
						"description": "String has a JSON Array with all the bank account information related to the Account"
					},
					"account_translated_name": {
						"type": "string",
						"nullable": true,
						"description": "This is a translation of the client name into a local language"
					},
					"account_categories": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "These are multiple categories from the account"
					},
					"account_price_range": {
						"type": "string",
						"nullable": true,
						"description": "This is the price range of the Account, with respect to the market"
					},
					"account_special_characteristics": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "special characteristics of a restaurant. Those attributes are local"
					},
					"dietary_information": {
						"type": "string",
						"nullable": true,
						"description": "this field is to differentiate if the account has a specific Dietary information"
					},
					"invoice_frequency": {
						"type": "string",
						"nullable": true,
						"description": "This is the time frequency of the invoice. <br>\nThis should be Weekly, Bi-monthly, Monthly, Bi-weekly or Quint-Monthly"
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"account"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceUpdateAddressMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"address": {
						"$ref": "#/components/schemas/SalesforceAddress"
					},
					"addresses": {
						"items": {
							"$ref": "#/components/schemas/SalesforceAddressDetails"
						},
						"type": "array",
						"nullable": true,
						"description": "String Has a JSON Array with the same format as Account_Platform__c"
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"account_id",
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceBankAccountInfoUpdateMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"bank_details": {
						"items": {
							"$ref": "#/components/schemas/SalesforceBankAccountInfo"
						},
						"type": "array",
						"nullable": true,
						"description": "String Has a JSON Array with the same format as Account_Platform__c"
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"account_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceContact": {
				"properties": {
					"id": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"salutation": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"first_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"last_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"middle_name": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"suffix": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"mobile_phone": {
						"type": "string",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters"
					},
					"role": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceContactRole"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "Maximum length is 120 characters <br>\nThis field is not validated, so it can contain invalid emails."
					},
					"hotline": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceUpdateBillingContactMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"contact": {
						"$ref": "#/components/schemas/SalesforceContact"
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"account_id",
					"contact"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceCaseEventType": {
				"enum": [
					"Create",
					"Update"
				],
				"type": "string"
			},
			"SalesforceCaseStatus": {
				"enum": [
					"New",
					"In Progress",
					"Waiting for Answer",
					"Resolved",
					"Closed",
					"New Answer"
				],
				"type": "string"
			},
			"SalesforceCaseType": {
				"description": "Type field on Case object; possible values are 'Customer' or 'Partner'",
				"enum": [
					"Customer",
					"Partner"
				],
				"type": "string"
			},
			"SalesforceUpdateCaseMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Populated by the salesforce when the event is delivered to subscriber.\nRefers to the position of the event in the event stream.\nexample : 111"
					},
					"action": {
						"$ref": "#/components/schemas/SalesforceCaseEventType",
						"description": "Denotes the type of case action, whether the case is created or updated.\nexample : Create"
					},
					"case_id": {
						"type": "string",
						"description": "Unique identifier for salesforce case.\nexample : 5005E000006BuEgQAK"
					},
					"origin": {
						"type": "string",
						"nullable": true,
						"description": "Origin of the inbound communication that creates a case in salesforce.\nexample : HelpCenter"
					},
					"old_status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceCaseStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Previous status of salesforce case. Null if the case is being created.\nexample : Waiting for Answer"
					},
					"new_status": {
						"$ref": "#/components/schemas/SalesforceCaseStatus",
						"description": "Updated status of the case.\nexample : Resolved"
					},
					"timestamp": {
						"type": "string",
						"description": "LastModified datetime for the salesforce case record.\nexample : 2020-10-18T06:22:33Z"
					},
					"modified_salesforce_user_id": {
						"type": "string",
						"description": "Salesforce user who modified the case.\nexample : 0051w000003qRsWAAU"
					},
					"customer_id": {
						"type": "string",
						"nullable": true,
						"description": "Customer Id - Unique customer identifier.\nexample : tw_234587"
					},
					"braze_id": {
						"type": "string",
						"nullable": true,
						"description": "Braze Id - Unique customer identifier used for sending push notifications.\nexample : tw_345689"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Entity-Country based unique identifier to denote the country and entity the case belongs to.\nexample : FP_HK"
					},
					"alan_internal_identifier": {
						"type": "string",
						"nullable": true,
						"description": "ALAN_Identifier__c field on Case record\nUnique Identifier sent for records (Case/Chat) created in Salesforce by HelpCenter/Alan"
					},
					"order_id": {
						"type": "string",
						"nullable": true,
						"description": "Order_Number__c field on Case record\nUnique Identifier for orders made by customers"
					},
					"case_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SalesforceCaseType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"required": [
					"replay_id",
					"action",
					"case_id",
					"new_status",
					"timestamp",
					"modified_salesforce_user_id",
					"global_entity_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceUpdateContactMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"contact": {
						"$ref": "#/components/schemas/SalesforceContact"
					},
					"contacts": {
						"items": {
							"$ref": "#/components/schemas/SalesforceAccountContact"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"account_id",
					"contact"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SalesforceVendorStatus": {
				"enum": [
					"New",
					"Active",
					"Terminated",
					"Pending Activation"
				],
				"type": "string"
			},
			"SalesforceVendorStatusChangeMessage": {
				"properties": {
					"replay_id": {
						"type": "number",
						"format": "double",
						"description": "Salesforce contain timestamp but without millisecond precision.<br>\nIn order to solve concurrency issues they should use replay_id"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when receiving Salesforce event as UTC ISO-8601. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"account_grid": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"record_type": {
						"$ref": "#/components/schemas/SalesforceRecordType"
					},
					"account_country_code": {
						"type": "string",
						"description": "Mapped from `Account_Country_Code__c` <br>\nCountry code as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"event_type": {
						"$ref": "#/components/schemas/SalesforceEventType"
					},
					"account_backend_id": {
						"type": "string",
						"description": "Maximum length is 120 characters"
					},
					"vendor_status": {
						"$ref": "#/components/schemas/SalesforceVendorStatus"
					},
					"platform_name": {
						"$ref": "#/components/schemas/SalesforcePlatformName"
					}
				},
				"required": [
					"replay_id",
					"timestamp",
					"account_grid",
					"record_type",
					"account_country_code",
					"event_type",
					"account_backend_id",
					"vendor_status",
					"platform_name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Initiator": {
				"properties": {
					"name": {
						"type": "string",
						"nullable": true,
						"description": "The name of the person initiating the deployment."
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "The email of the person initiating the deployment"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DeploymentEnvironment": {
				"description": "This refers to the deployment environment. <br>\nExample: Production, staging, etc.",
				"enum": [
					"staging",
					"production",
					"development",
					"test"
				],
				"type": "string"
			},
			"DeploymentType": {
				"description": "This refers to the type of deployment. <br>\nExample: Regular, hotfix, rollback",
				"enum": [
					"regular",
					"hotfix",
					"rollback"
				],
				"type": "string"
			},
			"DeploymentEventMessage": {
				"properties": {
					"entity": {
						"type": "string",
						"description": "This is the brand for which deployment is done <br>\nExample : DHSE, Pandora, Talabat, etc"
					},
					"tribe": {
						"type": "string",
						"description": "This refers to the team. <br>\nExample: DataFridge, RPD Vendor Monitor, etc"
					},
					"timestamp": {
						"type": "string",
						"description": "This is the time at which deployment is initiated.\nExample: 2016-06-10T21:42:24Z"
					},
					"initiator": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Initiator"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "This is the details of the person who initiated the deployment."
					},
					"product": {
						"type": "string",
						"description": "This is the product for which deployment is done. <br>\nExample: Hurrier, DataFridge, Polygon"
					},
					"application": {
						"type": "string",
						"description": "This is the subsystem of the product for which deployment is initiated <br>\nExample: IOs Mobile App, Fridge API Ingester, Hurrier Algorithm, etc"
					},
					"environment": {
						"$ref": "#/components/schemas/DeploymentEnvironment"
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DeploymentType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"regions": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "This refers to the region in which deployment is done. <br>\nExample: AWS regions, GCP regions."
					},
					"tag": {
						"type": "string",
						"description": "This refers to the tag associated with the deployment. <br>\nMaximum length is 120 characters"
					},
					"release_notes": {
						"type": "string",
						"description": "This refers to the official release notes, or concatenation of commit messages, <br>\ndescribing the changes going out in this deploy <br>"
					},
					"ticket_references": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "This refers to the array of ticket URLs going out in this deploy."
					},
					"commits": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "This refers to the array of commit URLs (repo+hash) going out in this deploy."
					},
					"global_entity_ids": {
						"items": {
							"$ref": "#/components/schemas/GlobalEntityId"
						},
						"type": "array",
						"nullable": true,
						"description": "Represents entities for which this deploy was done."
					}
				},
				"required": [
					"entity",
					"tribe",
					"timestamp",
					"product",
					"application",
					"environment",
					"tag",
					"release_notes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerAddressInCustomerAddressEvent": {
				"properties": {
					"customer_address_id": {
						"type": "string",
						"description": "Identifier of the address from platform sid"
					},
					"type": {
						"type": "string",
						"nullable": true,
						"description": "Ex: Home, work, etc."
					},
					"active": {
						"type": "boolean"
					},
					"street": {
						"type": "string",
						"nullable": true
					},
					"street_number": {
						"type": "string",
						"nullable": true
					},
					"building": {
						"type": "string",
						"nullable": true
					},
					"floor": {
						"type": "string",
						"nullable": true
					},
					"unit": {
						"type": "string",
						"nullable": true
					},
					"district": {
						"type": "string",
						"nullable": true
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Free text field for customers to give extra details for the address"
					},
					"postal_code": {
						"type": "string",
						"nullable": true
					},
					"city": {
						"type": "string",
						"nullable": true
					},
					"block": {
						"type": "string",
						"nullable": true
					},
					"city_id": {
						"type": "string",
						"nullable": true,
						"description": "Backend city_id. It should be same as city_id sent to Order."
					},
					"area_id": {
						"type": "string",
						"nullable": true,
						"description": "Backend area_id. It should be same as area_id sent to Order."
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"geohash": {
						"type": "string",
						"nullable": true
					},
					"platform_reason": {
						"type": "string",
						"nullable": true,
						"description": "Enum to justify the reason behind sending this event to DF.\nUsually will be associated with active = false"
					}
				},
				"required": [
					"customer_address_id",
					"active"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerAddressEventMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "When the location update happened,  <br>\nwith at least ms precision It can be used by data consumers  <br>\nto discard old messages if they come out of order. Ex: 2010-02-18T06:22:33.442Z <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"customer_id": {
						"type": "string",
						"description": "This is same as customer_id value from Order message and described in order.customer.customer_id"
					},
					"location_change_meters": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Defines amount in meters of location"
					},
					"customer_address": {
						"$ref": "#/components/schemas/CustomerAddressInCustomerAddressEvent"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"customer_id",
					"customer_address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Gender": {
				"description": "This is the gender of the customer.",
				"enum": [
					"m",
					"f",
					"x"
				],
				"type": "string"
			},
			"CustomerEventMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"customer_id": {
						"type": "string",
						"description": "This is same as customer_id value from Order message and described in order.customer.customer_id"
					},
					"braze_id": {
						"type": "string",
						"description": "This is the Customer id on the Braze platform"
					},
					"active": {
						"type": "boolean",
						"description": "This defines if customer is able to login and place orders on the platform. <br>\nAnonymized customers should be defined as “active: false”. <br>\nCustomers banned by platform should be also defined as “active: false”"
					},
					"timestamp": {
						"type": "string",
						"description": "This is the timestamp of the customer update. <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"registration_timestamp": {
						"type": "string",
						"description": "This is the timestamp when customer joined the platform <br>\nExample: 2016-06-10T21:42:24Z"
					},
					"entity_inactive_reason": {
						"type": "string",
						"nullable": true,
						"description": "This is the reason for which entity is inactive"
					},
					"anonymized": {
						"type": "boolean",
						"nullable": true,
						"description": "This will let you know whether record is anonymised or not."
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "This is the email of the customer.\nPlease notice we are not validating emails for this field because\nplatforms do not have proper validations in place.\nHaving validation will mean many customers from Talabat, will not be on Data Fridge.\nHaving email is required in order to randomize Personal Information in EU now\nand in other countries in the future as well."
					},
					"phone": {
						"type": "string",
						"nullable": true,
						"description": "This is the phone number of the customer.\nFor Korea it's allowed to push a hashed number because of privacy."
					},
					"first_name": {
						"type": "string",
						"nullable": true,
						"description": "This is the first name of the customer."
					},
					"last_name": {
						"type": "string",
						"nullable": true,
						"description": "This is the last name of the customer."
					},
					"gender": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Gender"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"new_registration": {
						"type": "boolean",
						"nullable": true,
						"description": "True for a new customer registration\nFalse for any other case the event is published"
					},
					"date_of_birth": {
						"type": "string",
						"nullable": true,
						"description": "This is the birth date of the customer, it can not be in the future <br>\nExample: 1999-08-27"
					},
					"is_phone_number_verified": {
						"type": "boolean",
						"nullable": true,
						"description": "Flag indicating if the phone number of the customer is verified or not."
					}
				},
				"required": [
					"global_entity_id",
					"customer_id",
					"braze_id",
					"active",
					"timestamp",
					"registration_timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EmailOptIn": {
				"enum": [
					"EXPLICIT_OPT_OUT",
					"IMPLICIT_OPT_OUT",
					"EXPLICIT_OPT_IN",
					"IMPLICIT_OPT_IN"
				],
				"type": "string"
			},
			"EmailOptSubscription": {
				"properties": {
					"email_opt_in": {
						"$ref": "#/components/schemas/EmailOptIn"
					},
					"unsubscribe_link": {
						"type": "string",
						"description": "Backends that are the source of newsletter optin status truth must have this data."
					}
				},
				"required": [
					"email_opt_in",
					"unsubscribe_link"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SmsOrPushOptIn": {
				"enum": [
					"OPT_OUT",
					"EXPLICIT_OPT_IN",
					"IMPLICIT_OPT_IN"
				],
				"type": "string"
			},
			"SMSOptSubscription": {
				"properties": {
					"phone": {
						"type": "string",
						"description": "This is the phone number of the customer."
					},
					"sms_opt_in": {
						"$ref": "#/components/schemas/SmsOrPushOptIn"
					}
				},
				"required": [
					"phone",
					"sms_opt_in"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PushOptSubscription": {
				"properties": {
					"push_opt_in": {
						"$ref": "#/components/schemas/SmsOrPushOptIn"
					},
					"push_tokens": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"push_opt_in"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NotificationsInCustomerOptInStatusEvent": {
				"properties": {
					"email_subscription": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EmailOptSubscription"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"sms_subscription": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SMSOptSubscription"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"push_subscription": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PushOptSubscription"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerOptInStatusEventMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"customer_id": {
						"type": "string",
						"nullable": true,
						"description": "Identifier of the customer in the platform. Mandatory if this is a registered customer."
					},
					"braze_id": {
						"type": "string",
						"nullable": true,
						"description": "Identifier of subscription in Braze"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp of the customer subscription change event.<br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"notifications": {
						"$ref": "#/components/schemas/NotificationsInCustomerOptInStatusEvent"
					},
					"email": {
						"type": "string",
						"description": "This is the email of the customer.\nPlease notice we are not validating emails for this field because\nplatforms do not have proper validations in place.\nHaving validation will mean many customers from Talabat, will not be on Data Fridge.\nHaving email is required in order to randomize Personal Information in EU now\nand in other countries in the future as well."
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"notifications",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JokerPromotionDefinitionMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp for attribute assignment RFC-3339 format. With at least ms precision <br>\nValid formats\n2014-07-30T10:43:17Z"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timezone": {
						"type": "string",
						"description": "String representing the timezone of the promotion. <br>\nAs per https://en.wikipedia.org/wiki/List_of_tz_database_time_zones <br>\nex: \"Europe/Berlin\""
					},
					"promotion_definition_id": {
						"type": "string",
						"description": "Unique Id of the promotion definition"
					},
					"is_active": {
						"type": "boolean",
						"description": "Promotion definition status\nDetermines if promotion defintion is activate or not"
					},
					"day_of_week": {
						"type": "string",
						"description": "Which day of the week is it"
					},
					"start_time_local": {
						"type": "string",
						"description": "Start time for the promotion definition\nISO 8601 24-hour time format HH:MM:[SS][.FFF], e.g. 14:55:01.672."
					},
					"end_time_local": {
						"type": "string",
						"description": "End time for the promotion definition\nISO 8601 24-hour time format HH:MM:[SS][.FFF], e.g. 14:55:01.672."
					},
					"sale_limit": {
						"type": "number",
						"format": "double",
						"description": "Count of Joker that the restaurant can sell"
					},
					"vendor_id": {
						"type": "string",
						"description": "Unique Id of the vendor\nSame as vendor_id on Order Event.\nIt identifies vendor from the Global Entity Id side. It is also used by RPS, Logistics etc."
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"timezone",
					"promotion_definition_id",
					"is_active",
					"day_of_week",
					"start_time_local",
					"end_time_local",
					"sale_limit",
					"vendor_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JokerPromotionTransferType": {
				"enum": [
					"no_action",
					"minimum_definition_shift",
					"weekly_rolling_option",
					"monthly_rolling_option",
					"daily_rolling_option"
				],
				"type": "string"
			},
			"JokerPromotionMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp for attribute assignment RFC-3339 format. With at least ms precision <br>\nValid formats\n2014-07-30T10:43:17Z"
					},
					"timezone": {
						"type": "string",
						"description": "String representing the timezone of the promotion. <br>\nAs per https://en.wikipedia.org/wiki/List_of_tz_database_time_zones <br>\nex: \"Europe/Berlin\""
					},
					"start_timestamp": {
						"type": "string",
						"description": "Timestamp when the joker promotion starts in ISO-8601 with second precision <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"end_timestamp": {
						"type": "string",
						"description": "Timestamp when the joker promotion ends in ISO-8601 with second precision <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"promotion_id": {
						"type": "string",
						"description": "Unique Id of the joker promotion"
					},
					"is_active": {
						"type": "boolean",
						"description": "Promotion definition status\nDetermines if joker promotion is activate or not"
					},
					"vendor_id": {
						"type": "string",
						"description": "Unique Id of the vendor\nSame as vendor_id on Order Event.\nIt identifies vendor from the Global Entity Id side. It is also used by RPS, Logistics etc."
					},
					"sale_limit": {
						"type": "number",
						"format": "double",
						"description": "Count of Joker that the restaurant can sell"
					},
					"is_rolled": {
						"type": "boolean",
						"description": "It indicates whether the sale limit was transferred from the day before\nOR was actually the limit of the particular day"
					},
					"transfer_type": {
						"$ref": "#/components/schemas/JokerPromotionTransferType",
						"description": "Transfer type of the sale limit if it was transferred from the day."
					}
				},
				"required": [
					"timestamp",
					"timezone",
					"start_timestamp",
					"end_timestamp",
					"global_entity_id",
					"promotion_id",
					"is_active",
					"vendor_id",
					"sale_limit",
					"is_rolled",
					"transfer_type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JokerOfferStatus": {
				"enum": [
					"offered",
					"accepted",
					"rejected",
					"completed_joker",
					"expired"
				],
				"type": "string"
			},
			"JokerOfferCustomer": {
				"properties": {
					"customer_id": {
						"type": "string",
						"nullable": true,
						"description": "Unique identifier send by entities to identify a customer.\nThis value can either be a guid or email.\nFor entities sending guid, “customer_id” field is kept as guid. e.g. For Pandora the value is \"sgfab7gg\".\nFor entities sending mail, “customer_id” field is kept as null."
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "For entities sending mail info, “email” field is kept as email.\ne.g. For Talabat the value is \"xx@talabat.com\".\nFor entities sending guid, “email” field is kept as null."
					},
					"channel": {
						"type": "string",
						"description": "Channel used by customer provided by entities."
					}
				},
				"required": [
					"channel"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JokerReservationStatus": {
				"enum": [
					"reserved",
					"accepted",
					"rejected",
					"completed_joker",
					"expired",
					"not_selected"
				],
				"type": "string"
			},
			"JokerOfferReservation": {
				"properties": {
					"reservation_id": {
						"type": "string",
						"description": "Identifier of the reservation."
					},
					"vendor_id": {
						"type": "string",
						"description": "Same as vendor_id on Order Event.\nIt identifies vendor from the Global Entity Id side.\nIt is also used by RPS, Logistics etc."
					},
					"promotion_id": {
						"type": "string",
						"description": "Unique identifier of the restaurant’s promotion that reservation is created for offer."
					},
					"reservation_status": {
						"$ref": "#/components/schemas/JokerReservationStatus",
						"description": "reserved:        When a new offer is created, the reservation status is “reserved”\n                  for all restaurants within the offer.\n\naccepted:        When the user accepts one of the restaurants within the offer,\n                  the reservation status is “accepted” for that restaurant.\n                  In that case, the reservation status is “not_selected”  for the rest of the restaurants.\n\nrejected:        1 - If the user rejects the offer, the reservation status is “rejected”\n                      for all restaurants within the offer.\n                  2 - If the user accepts one of the restaurants within the offer and then rejected,\n                      the reservation status is “rejected” for that restaurant.\n                      In that case, the reservation status is “not_selected” for the rest of the restaurants.\n\ncompleted_joker: If there is an active offer of the user with the given restaurant\n                  and user places order from that restaurant, reservation status is “completed_joker”.\n                  In that case, the reservation status is “not_selected” for the rest of the restaurants.\n\nexpired:         When the offer expires,reservation status is “expired” for all restaurants within the offer."
					},
					"rank": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"reservation_id",
					"vendor_id",
					"promotion_id",
					"reservation_status",
					"rank"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JokerOfferMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp for attribute assignment in UTC ISO-8601. <br>\nValid formats\n2010-02-18T11:22:33Z"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"offer_id": {
						"type": "string",
						"description": "Unique Id of the offer"
					},
					"offer_status": {
						"$ref": "#/components/schemas/JokerOfferStatus",
						"description": "Status of the offer.\n\noffered :         When a new offer is created, the offer status is “offered”.\n\naccepted :        When the user accepts the offer, the offer status is “accepted”.\n\nrejected :        1 - If the user rejects the offer , the offer status is “rejected”.\n                   2 - If the user accepts the offer and then rejected ,the offer status is “rejected”.\n\ncompleted_joker : If there is an active offer of the user with the given restaurant\n                   and user places order from that restaurant, the offer status is “completed_joker”.\n\nexpired :         When the offer expires, the offer status is “expired”."
					},
					"timezone": {
						"type": "string",
						"description": "String representing the timezone of the schedules. <br>\nAs per https://en.wikipedia.org/wiki/List_of_tz_database_time_zones <br>\nex: \"Europe/Berlin\""
					},
					"customer": {
						"$ref": "#/components/schemas/JokerOfferCustomer",
						"description": "Customer who received joker offer.\n\nUnique identifier send by entities to identify a customer.\nThis value can either be a guid or email.\nFor entities sending guid, “customer_id” field is kept as guid. e.g. For Pandora the value is \"sgfab7gg\".\nFor entities sending mail, “customer_id” field is kept as null.\nFor entities sending mail info, “customer_email” field is kept as email.\ne.g. For Talabat the value is \"xx@talabat.com\".\nFor entities sending guid, “customer_email” field is kept as null."
					},
					"reservations": {
						"items": {
							"$ref": "#/components/schemas/JokerOfferReservation"
						},
						"type": "array",
						"nullable": true,
						"description": "This array contains all reservations for every joker offer status update."
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"offer_id",
					"offer_status",
					"timezone",
					"customer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JokerOrderMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp for attribute assignment RFC-3339 format. With at least ms precision <br>\nValid formats\n2014-07-30T10:43:17Z"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"order_id": {
						"type": "string",
						"description": "Unique Id of the order\nSame as order_id on Order Event.\nId which is used already by other services such as RPS, Salesforce, Hurrier (logistics) etc."
					},
					"offer_id": {
						"type": "string",
						"description": "Unique Id of the offer"
					},
					"vendor_id": {
						"type": "string",
						"description": "Unique Id of the vendor\nSame as vendor_id on Order Event.\nIt identifies vendor from the Global Entity Id side. It is also used by RPS, Logistics etc."
					},
					"promotion_id": {
						"type": "string",
						"description": "Unique Id of the promotion"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"order_id",
					"offer_id",
					"vendor_id",
					"promotion_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedParagraph": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "No chars limit for paragraph"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyBadgeStatus": {
				"enum": [
					"active",
					"inactive"
				],
				"type": "string"
			},
			"LoyaltyBadgeMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"badge_id": {
						"type": "string",
						"description": "Identifier of the badge."
					},
					"internal_name": {
						"type": "string",
						"description": "This is a unique internal name for each badge"
					},
					"display_name": {
						"items": {
							"$ref": "#/components/schemas/LocalizedAttributeName"
						},
						"type": "array",
						"description": "Badge display names in different locales for the customers"
					},
					"description": {
						"items": {
							"$ref": "#/components/schemas/LocalizedParagraph"
						},
						"type": "array",
						"nullable": true,
						"description": "Badge description in different locales for the customers",
						"default": []
					},
					"status": {
						"$ref": "#/components/schemas/LoyaltyBadgeStatus",
						"description": "Status of the badge\nactive:          badge is active\n\ninactive:        badge is inactive for the customers"
					},
					"active_image_url": {
						"type": "string",
						"description": "Badge url is the colourful badge url to show\nUser see this badge image if they have won the badge"
					},
					"animated_image_url": {
						"type": "string",
						"nullable": true,
						"description": "This is a animated badge url with some animations\nUser see this badge image if they have won the badge"
					},
					"inactive_image_url": {
						"type": "string",
						"nullable": true,
						"description": "This is a inactive image url(to show when a customer did not earn the badge) for the badge"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the badge updated in RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"global_entity_id",
					"badge_id",
					"internal_name",
					"display_name",
					"status",
					"active_image_url",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyChallengeStatus": {
				"enum": [
					"inactive",
					"active",
					"ended",
					"expired"
				],
				"type": "string"
			},
			"LoyaltyChallengeRewardType": {
				"enum": [
					"badge",
					"points",
					"voucher"
				],
				"type": "string"
			},
			"LoyaltyChallengeReward": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/LoyaltyChallengeRewardType",
						"description": "type of the reward"
					},
					"reward_id": {
						"type": "string",
						"nullable": true,
						"description": "Identifier of the reward."
					},
					"amount": {
						"type": "number",
						"format": "double",
						"description": "Amount of the rewards\nif reward type is badge it will be count of badge like 1\nif reward type is points it will points to be awarded like 50"
					}
				},
				"required": [
					"type",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyChallengeActionType": {
				"enum": [
					"order"
				],
				"type": "string"
			},
			"LoyaltyChallengeAction": {
				"properties": {
					"action_id": {
						"type": "string",
						"description": "Identifier of the action."
					},
					"type": {
						"$ref": "#/components/schemas/LoyaltyChallengeActionType",
						"description": "type of the action"
					},
					"name": {
						"items": {
							"$ref": "#/components/schemas/LocalizedAttributeName"
						},
						"type": "array",
						"description": "action name in different locales for the customers"
					},
					"task_count": {
						"type": "number",
						"format": "double",
						"description": "number of times action need to be done"
					}
				},
				"required": [
					"action_id",
					"type",
					"name",
					"task_count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyChallengeMessage": {
				"properties": {
					"challenge_id": {
						"type": "string",
						"description": "Identifier of the challenge."
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"internal_name": {
						"type": "string",
						"description": "This is a unique internal name for each challenge"
					},
					"display_name": {
						"items": {
							"$ref": "#/components/schemas/LocalizedAttributeName"
						},
						"type": "array",
						"description": "Challenge display names in different locales for the customers"
					},
					"description": {
						"items": {
							"$ref": "#/components/schemas/LocalizedParagraph"
						},
						"type": "array",
						"nullable": true,
						"description": "Challenge description names in different locales for the customers"
					},
					"status": {
						"$ref": "#/components/schemas/LoyaltyChallengeStatus",
						"description": "Status of the challenge\nInactive:    status is in case of challenge was never activated\n\nactive:      status when challenge should be active if want to show it to users\n\nended:       status challenge is being mark ended by the marketing team\n\nexpired      status when challenge is being mark expired once its end time is past the current time\n              this status is usually marked by some system jobs"
					},
					"featured": {
						"type": "boolean",
						"nullable": true,
						"description": "is challenge a featured challenge\nfeatured challenge are shown to the user above normal challenge in listing"
					},
					"start_time": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp when the challenge start in ISO-8601 with second precision <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"end_time": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp when the challenge end in ISO-8601 with second precision <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"background_image_url": {
						"type": "string",
						"nullable": true,
						"description": "this is challenge background image url"
					},
					"term_and_condition": {
						"items": {
							"$ref": "#/components/schemas/LocalizedParagraph"
						},
						"type": "array",
						"nullable": true,
						"description": "Challenge term and condition in different locales for the customers"
					},
					"rewards": {
						"items": {
							"$ref": "#/components/schemas/LoyaltyChallengeReward"
						},
						"type": "array",
						"description": "rewards to be awarded to customer if customer complete the challenge successfully"
					},
					"actions": {
						"items": {
							"$ref": "#/components/schemas/LoyaltyChallengeAction"
						},
						"type": "array",
						"description": "actions need to be done by customer in order to complete the challenge"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the challenge updated in RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"challenge_id",
					"global_entity_id",
					"internal_name",
					"display_name",
					"status",
					"rewards",
					"actions",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyCustomerBadgeMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"customer_id": {
						"type": "string",
						"description": "Identifier of the customer regardless whether is a guest or registered one."
					},
					"badge_id": {
						"type": "string",
						"description": "Identifier of the badge."
					},
					"count": {
						"type": "number",
						"format": "double",
						"description": "count of badge customer have"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the badge updated in RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"global_entity_id",
					"customer_id",
					"badge_id",
					"count",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyCustomerChallengeStatus": {
				"enum": [
					"in_progress",
					"completed",
					"rewarded",
					"expired"
				],
				"type": "string"
			},
			"LoyaltyCustomerChallengeActionStatus": {
				"enum": [
					"pending",
					"completed",
					"cancelled"
				],
				"type": "string"
			},
			"LoyaltyCustomerChallengeAction": {
				"properties": {
					"action_id": {
						"type": "string",
						"description": "Identifier of the action."
					},
					"status": {
						"$ref": "#/components/schemas/LoyaltyCustomerChallengeActionStatus",
						"description": "Status of the customer challenge Action\npending:     status when customer did some action but not completed yet like\n              order placed but order not delivered yet\n\ncancelled:   status when customer cancelled the action done by customer\n\ncompleted:   status when customer completed the action"
					},
					"order_id": {
						"type": "string",
						"nullable": true,
						"description": "Identifier of the order."
					}
				},
				"required": [
					"action_id",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyCustomerChallengeMessage": {
				"properties": {
					"customer_challenge_id": {
						"type": "string",
						"description": "Identifier of the customer challenge."
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"customer_id": {
						"type": "string",
						"description": "Identifier of the customer regardless whether is a guest or registered one."
					},
					"status": {
						"$ref": "#/components/schemas/LoyaltyCustomerChallengeStatus",
						"description": "Status of the customer challenge\nin_progress:     status is in case of customer started customer participate in challenge\n\ncompleted:       status when customer have completed the challenge\n\nrewarded:        status when customer has completed challenge and has been rewarded\n\nexpired:         when customer challenge is being mark expired once its end time is past the current time\n                  this status is usually marked by some system jobs"
					},
					"challenge_id": {
						"type": "string",
						"description": "Identifier of the challenge."
					},
					"events": {
						"items": {
							"$ref": "#/components/schemas/LoyaltyCustomerChallengeAction"
						},
						"type": "array",
						"description": "action event done by customer in order to complete the challenge"
					},
					"rewards": {
						"items": {
							"$ref": "#/components/schemas/LoyaltyChallengeReward"
						},
						"type": "array",
						"nullable": true,
						"description": "rewards to be awarded to customer if customer complete the challenge successfully"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the challenge updated in RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"customer_challenge_id",
					"global_entity_id",
					"customer_id",
					"status",
					"challenge_id",
					"events",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyPointTransactionMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"point_transaction_id": {
						"type": "string",
						"description": "Identifier of the point transaction."
					},
					"customer_id": {
						"type": "string",
						"description": "Identifier of the customer regardless whether is a guest or registered one."
					},
					"amount": {
						"type": "number",
						"format": "double",
						"description": "Amount Awarded or deducted for the transaction this\nIf it is positive, this is a point earning\nIf it is negative, this is a point deduction"
					},
					"balance": {
						"type": "number",
						"format": "double",
						"description": "The points balance after the transaction was made"
					},
					"trigger_type": {
						"type": "string",
						"nullable": true,
						"description": "The type of the original event that triggered this point transaction, for back tracking purposes.\nIe: challenge_complete, scratch_card_purchase"
					},
					"trigger_id": {
						"type": "string",
						"nullable": true,
						"description": "The id of the original event that triggered this point transaction.\ntrigger_type and trigger_id together create a unique identifier for the transaction"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the record was added in ISO-8601 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"global_entity_id",
					"point_transaction_id",
					"customer_id",
					"amount",
					"balance",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyIncentiveCategory": {
				"description": "Category of the incentive",
				"enum": [
					"voucher"
				],
				"type": "string"
			},
			"LoyaltyIncentiveType": {
				"description": "This is the type of incentive.\namount: incentive will have some fixed amount\ndelivery_fee: incentive will make free delivery for the order\npercentage: incentive will give user discount for some percentage",
				"enum": [
					"amount",
					"delivery_fee",
					"percentage"
				],
				"type": "string"
			},
			"LocalizedTitle": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "The display name in such locale"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalizedDescription": {
				"properties": {
					"locale": {
						"type": "string",
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"value": {
						"type": "string",
						"description": "The description in such locale"
					}
				},
				"required": [
					"locale",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SponsorshipRatioParty": {
				"description": "Platform = Ratio of incentive paid by platform\nVendor = Ratio of incentive paid by vendor",
				"enum": [
					"platform",
					"vendor",
					"third_party"
				],
				"type": "string"
			},
			"SponsorshipRatio": {
				"properties": {
					"party": {
						"$ref": "#/components/schemas/SponsorshipRatioParty"
					},
					"value": {
						"type": "number",
						"format": "double",
						"description": "incentive ratio paid by different party"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Short description explaining (if available) about which party was responsible for paying this.\nFor example, name of restaurant or name of 3rd party"
					}
				},
				"required": [
					"party",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RulesVendorType": {
				"description": "VENDOR_ID = List of vendor ids that the incentive can be used\nCHAIN_ID = List of chain ids that the incentive can be used\nVERTICAL_TYPE = List of verticals that the incentive can be used",
				"enum": [
					"vendor_id",
					"chain_id",
					"vertical_type"
				],
				"type": "string"
			},
			"RulesVendorCondition": {
				"description": "INCLUDE = is a condition to include all the values while applying vendor type rules.\nEXCLUDE = is a condition to exclude all the values while applying vendor type rules.",
				"enum": [
					"include",
					"exclude"
				],
				"type": "string"
			},
			"RulesVendor": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/RulesVendorType"
					},
					"condition": {
						"$ref": "#/components/schemas/RulesVendorCondition"
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "For VERTICAL_TYPE, list would be enums:\n\"restaurants\" \"groceries\" \"flowers\" \"cosmetics\" \"health_supplements\" \"pharmacies\" \"pets\"\n\"drinks\" \"cross_vertical\" \"electronics\" \"baby_supplies\" \"furniture\" \"bags_and_luggage\"\n\"toys\" \"optics\" \"courier\" \"coffee\" \"shop\" \"courier_business\" \"cash\" \"darkstores\" \"automotive\"\n\"bakery\" \"home_and_gifts\" \"party_supplies\" \"stationery\" \"home_based_kitchen\" \"kiosks\" \"delicatessen\"\n\nThe above verticals are for Pandora platform but new vertical types can be added."
					}
				},
				"required": [
					"type",
					"condition",
					"values"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyIncentiveRules": {
				"properties": {
					"vendors": {
						"items": {
							"$ref": "#/components/schemas/RulesVendor"
						},
						"type": "array",
						"nullable": true,
						"description": "Sames as customer incentive vendor rules"
					},
					"min_order_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum order amount accepted to use this incentive whether MOV including VAT or not based vendor configuration"
					},
					"max_order_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum order amount accepted to use incentive, this should be greater than rules.min_amount"
					},
					"max_discount_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum discount amount e.g. you discount 10% with a max of 8€. People can still order for 10000€,\nbut the discount applied will be 8€ and not the 10% of 10000€"
					},
					"time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Validity duration of the incentive in seconds from the time it is actually created for the customer\nExample: 86400"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyIncentiveTemplateMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "The timestamp of the event, in UTC ISO-8601 with millisecond precision.\nValid formats: 2010-02-18T06:22:33.442Z"
					},
					"incentive_template_id": {
						"type": "string",
						"description": "ID of the incentive template\nMaximum length is 120 characters"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"internal_name": {
						"type": "string",
						"description": "The name that uniquely identifies the incentive template in the loyalty system globally.\nThis is only for internal use, customer doesn’t see this name"
					},
					"incentive_category": {
						"$ref": "#/components/schemas/LoyaltyIncentiveCategory"
					},
					"incentive_type": {
						"$ref": "#/components/schemas/LoyaltyIncentiveType"
					},
					"titles": {
						"items": {
							"$ref": "#/components/schemas/LocalizedTitle"
						},
						"type": "array",
						"description": "Title of the incentive, in different locales.\nCustomer will see this name in the UI after if customer won a incentive while scratching the card"
					},
					"descriptions": {
						"items": {
							"$ref": "#/components/schemas/LocalizedDescription"
						},
						"type": "array",
						"nullable": true,
						"description": "Description of the incentive, in different locales."
					},
					"image_url": {
						"type": "string",
						"nullable": true,
						"description": "Image url of the incentive to be shown to user when user will win it"
					},
					"sponsorship_ratios": {
						"items": {
							"$ref": "#/components/schemas/SponsorshipRatio"
						},
						"type": "array",
						"description": "Ratio of the incentives paid by different parties\nSum of all sponsorship_ratio.value in the list should be 1.0"
					},
					"rules": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/LoyaltyIncentiveRules"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "This will be the value of the incentive.\nIf voucher type is fixed_amount this will be the amount voucher in local currency.\nIf voucher type is percentage then this will be the percentage of the order value discount."
					}
				},
				"required": [
					"timestamp",
					"incentive_template_id",
					"global_entity_id",
					"internal_name",
					"incentive_category",
					"incentive_type",
					"titles",
					"sponsorship_ratios"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyCustomerScratchCardMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "The timestamp of the event, in UTC ISO-8601 with millisecond precision.\nValid formats: 2010-02-18T06:22:33.442Z"
					},
					"customer_scratch_card_id": {
						"type": "string",
						"description": "ID of the customer scratch card"
					},
					"customer_id": {
						"type": "string",
						"description": "Identifier of the customer regardless whether is a guest or registered one.\nNote: The identifier used here should be the same as identifier used in customer_id field for other existing\nDataFridge event"
					},
					"points": {
						"type": "number",
						"format": "double",
						"description": "Number of points customer redeemed to buy this scratch card"
					},
					"scratch_card_id": {
						"type": "string",
						"description": "ID of the scratch card that user purchased"
					},
					"incentive_template_id": {
						"type": "string",
						"description": "incentive_id won by the user by purchasing scratch card"
					},
					"customer_incentive_id": {
						"type": "string",
						"nullable": true,
						"description": "This will be customer incentive_id generated by the offers team in case of incentive_type is voucher"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"customer_scratch_card_id",
					"customer_id",
					"points",
					"scratch_card_id",
					"incentive_template_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyScratchCardStatus": {
				"description": "The status of the scratch card\n\nactive:   Will be shown in UI if scratch card is active\n           and start date and end date is within the local current time\n\ninactive: Not shown in UI at all\n\nexpired : if marked expired it will be no longer shown in the UI",
				"enum": [
					"active",
					"inactive",
					"expired"
				],
				"type": "string"
			},
			"LoyaltyScratchCardReward": {
				"properties": {
					"incentive_template_id": {
						"type": "string",
						"description": "This is the id of the rewards for the scratch card\nThis will be the id from the incentive template event\nMaximum length is 120 characters"
					},
					"percentage": {
						"type": "number",
						"format": "double",
						"description": "What are the % distribution of the reward"
					}
				},
				"required": [
					"incentive_template_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoyaltyScratchCardMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"scratch_card_id": {
						"type": "string",
						"description": "ID of the scratch card"
					},
					"internal_name": {
						"type": "string",
						"description": "The name that uniquely identify the scratch card"
					},
					"display_names": {
						"items": {
							"$ref": "#/components/schemas/LocalizedAttributeName"
						},
						"type": "array",
						"description": "Scratch Card display names in different locales for the customers"
					},
					"highlights": {
						"items": {
							"$ref": "#/components/schemas/LocalizedParagraph"
						},
						"type": "array",
						"nullable": true,
						"description": "Highlight of the scratch card, with translation"
					},
					"descriptions": {
						"items": {
							"$ref": "#/components/schemas/LocalizedParagraph"
						},
						"type": "array",
						"nullable": true,
						"description": "Description of the scratch card, with translation"
					},
					"status": {
						"$ref": "#/components/schemas/LoyaltyScratchCardStatus",
						"description": "The status of the scratch card\n\nactive:   Will be shown in UI if scratch card is active\n           and start date and end date is within the local current time\n\ninactive: Not shown in UI at all\n\nexpired : if marked expired it will be no longer shown in the UI"
					},
					"image_url": {
						"type": "string",
						"description": "The image URL for the scratch card"
					},
					"start_time": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp of the scratch card in ISO-8601 with second precision <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"end_time": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp of the scratch card in ISO-8601 with second precision <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"points": {
						"type": "number",
						"format": "double",
						"description": "Number of point that will be redeemed when user will purchase this scratch card"
					},
					"rewards": {
						"items": {
							"$ref": "#/components/schemas/LoyaltyScratchCardReward"
						},
						"type": "array",
						"description": "The list of rewards a user can win by purchasing scratch card"
					},
					"timestamp": {
						"type": "string",
						"description": "The timestamp of the event in UTC ISO-8601 with millisecond precision. <br>\nValid formats <br>\n2010-02-18T06:22:33.442Z"
					}
				},
				"required": [
					"global_entity_id",
					"scratch_card_id",
					"internal_name",
					"display_names",
					"status",
					"points",
					"rewards",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BulkProductsRequest": {
				"properties": {
					"import_id": {
						"type": "string",
						"description": "It is generated id by the client every time a batch from the import request is sent. <br>\nFor example, If you are importing 1000 products, and you will send 100 per batch (10 batches), <br>\nthen each batch should have the same 'import_id'"
					},
					"products": {
						"items": {
							"$ref": "#/components/schemas/ProductMessage"
						},
						"type": "array",
						"description": "List of products needed to be uploaded to Fridge"
					}
				},
				"required": [
					"import_id",
					"products"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResponseInRiderSurvey": {
				"properties": {
					"response_id": {
						"type": "string",
						"description": "Identifier of survey response. <br>\nMaximum length is 120 characters"
					},
					"answers": {
						"items": {
							"$ref": "#/components/schemas/Answer"
						},
						"type": "array"
					}
				},
				"required": [
					"response_id",
					"answers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RiderSurveyResponse": {
				"properties": {
					"start_date": {
						"type": "string"
					},
					"end_date": {
						"type": "string"
					},
					"finished": {
						"type": "boolean"
					},
					"response": {
						"$ref": "#/components/schemas/ResponseInRiderSurvey"
					},
					"rider_id": {
						"type": "string"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"city_name": {
						"type": "string",
						"nullable": true
					},
					"locale": {
						"type": "string",
						"nullable": true,
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					},
					"email": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"start_date",
					"end_date",
					"finished",
					"response",
					"rider_id",
					"country_code"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RiderSurveyMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Last time the survey was edited as UTC ISO-8601. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"survey_id": {
						"type": "string"
					},
					"survey_response": {
						"$ref": "#/components/schemas/RiderSurveyResponse"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"survey_id",
					"survey_response"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RiderBaseResponse": {
				"properties": {
					"start_date": {
						"type": "string"
					},
					"end_date": {
						"type": "string"
					},
					"finished": {
						"type": "boolean"
					},
					"response": {
						"$ref": "#/components/schemas/ResponseInRiderSurvey"
					},
					"rider_id": {
						"type": "string"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"city_name": {
						"type": "string",
						"nullable": true
					},
					"locale": {
						"type": "string",
						"nullable": true,
						"description": "Using IETF language tag standard: https://en.wikipedia.org/wiki/IETF_language_tag <br>\nWe validate that the first 2 letters belong to a language code from ISO_639-1 <br>\nMake sure you use \"-\" to divide subtags as defined in https://en.wikipedia.org/wiki/IETF_language_tag <br>\nExamples: en-US, en-GB"
					}
				},
				"required": [
					"start_date",
					"end_date",
					"finished",
					"response",
					"rider_id",
					"country_code"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NewRiderSurveyMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Last time the survey was edited as UTC ISO-8601. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"survey_id": {
						"type": "string"
					},
					"survey_response": {
						"$ref": "#/components/schemas/RiderBaseResponse"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"survey_id",
					"survey_response"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorInSurvey": {
				"properties": {
					"vendor_id": {
						"type": "string",
						"description": "Identifier for vendor\nMax length is 120 chars"
					},
					"name": {
						"type": "string",
						"nullable": true,
						"description": "Name of vendor\nMax length is 300 chars\nOptional field"
					},
					"activation_date": {
						"type": "string",
						"nullable": true,
						"description": "Activation date for vendor <br>\nAssignment in UTC ISO-8601.\nValid formats\n2010-02-18T11:22:33Z"
					},
					"commission": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Commission for vendor <br>\nAssignment to be done in number or decimal"
					},
					"account_number": {
						"type": "string",
						"nullable": true,
						"description": "Account number for vendor <br>\nMax length is 300 chars"
					}
				},
				"required": [
					"vendor_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResponseInVendorSurvey": {
				"properties": {
					"response_id": {
						"type": "string",
						"description": "Identifier of survey response. <br>\nMaximum length is 120 characters"
					},
					"answers": {
						"items": {
							"$ref": "#/components/schemas/Answer"
						},
						"type": "array"
					}
				},
				"required": [
					"response_id",
					"answers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorSurveyResponse": {
				"properties": {
					"vendor": {
						"$ref": "#/components/schemas/VendorInSurvey",
						"description": "Vendor filling the survey <br>\nDifferent from existing vendor model as doesn't uphold all mandatory fields"
					},
					"start_date": {
						"type": "string",
						"description": "Timestamp for survey start <br>\nAssignment in UTC ISO-8601.\nValid formats\n2010-02-18T11:22:33Z"
					},
					"end_date": {
						"type": "string",
						"description": "Timestamp for survey end <br>\nAssignment in UTC ISO-8601.\nValid formats\n2010-02-18T11:22:33Z"
					},
					"finished": {
						"type": "boolean",
						"description": "Boolean indicates survey completion"
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"response": {
						"$ref": "#/components/schemas/ResponseInVendorSurvey"
					}
				},
				"required": [
					"vendor",
					"start_date",
					"end_date",
					"finished",
					"response"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorSurveyMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Last time the survey was edited as UTC ISO-8601. <br>\nDF cannot accept timestamps older than 6 days or newer than 2 minutes in the future. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z"
					},
					"survey_id": {
						"type": "string",
						"description": "Identifier used for surveys"
					},
					"is_new_vendor": {
						"type": "boolean"
					},
					"survey_response": {
						"$ref": "#/components/schemas/VendorSurveyResponse"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"survey_id",
					"is_new_vendor",
					"survey_response"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerSubscriptionStatus": {
				"description": "Possible values for Customer Subscription Status\nIt defines the current status of customer_subscription for a particular customer",
				"enum": [
					"subscription_requested",
					"payment_requested",
					"payment_failed",
					"enabled",
					"renewal_requested",
					"cancelled"
				],
				"type": "string"
			},
			"FreeDeliveryBenefit": {
				"properties": {
					"is_unlimited": {
						"type": "boolean",
						"nullable": true,
						"description": "It defines whether customer is given unlimited free deliveries or not\nIf true then there is no limit on number of free deliveries"
					},
					"max_count": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the number of free delivery offered by customer subscription"
					},
					"used_count": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the number of free delivery used from a customer_subscription"
					},
					"remaining_count": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the number of free delivery remaining from a customer_subscription"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerIncentiveType": {
				"description": "AMOUNT =  is used for fixed amount based incentive\nPERCENTAGE = is used for percentage based incentives. percentage is based on order’s Subtotal\nFREE_DELIVERY = is used for providing free delivery for order.\nFREE_GIFT = is used for giving free gift items from vendors.\nBXGY = refers Buy X items and Get Y items incentive.\nFor example, if you buy 2 burger, you would get one coke free",
				"enum": [
					"amount",
					"percentage",
					"delivery_fee",
					"free_gift",
					"bxgy"
				],
				"type": "string"
			},
			"Timing": {
				"properties": {
					"start_date": {
						"type": "string",
						"nullable": true,
						"description": "It defines the starting date for voucher incentive\nMaximum length is 40 characters"
					},
					"end_date": {
						"type": "string",
						"nullable": true,
						"description": "It defines the ending date for voucher incentive\nMaximum length is 40 characters"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IncentiveRules": {
				"properties": {
					"max_incentive": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum incentive value allowed on order or purchase"
					},
					"min_order_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum order value after which only this incentive is applicable"
					},
					"delivery_types": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "List of expedition where you can use these incentives. E.g. delivery/pickup\nMaximum length is 40 characters"
					},
					"parent_vertical": {
						"type": "string",
						"nullable": true,
						"description": "Parent vertical type of the voucher. E.g. shops/restaurants\nMaximum length is 40 characters"
					},
					"vertical_types": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "List of vertical types where this voucher is valid\nMaximum length is 40 characters"
					},
					"timing": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Timing"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Timing defines from when to when this incentive is valid"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerIncentives": {
				"properties": {
					"incentive_category": {
						"type": "string",
						"nullable": true,
						"description": "What kind of incentive this is discount or voucher\nMaximum length is 40 characters"
					},
					"is_stackable": {
						"type": "boolean",
						"nullable": true,
						"description": "If value is false it means it's an exclusive discount else it's an additional discount"
					},
					"is_recurring": {
						"type": "boolean",
						"nullable": true,
						"description": "If true it means it's a monthly voucher that will be given to user whenever\nthey renew the subscription next month else it's only for first month of subscription"
					},
					"incentive_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CustomerIncentiveType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "What kind of discount it is. E.g. amount/percentage/free-delivery\nMaximum length is 40 characters"
					},
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "What is the value of this discount offered to user if the incentive is amount"
					},
					"percentage": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "What is the value of this discount offered to user if the incentive is percentage"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines number of voucher give to user on subscription"
					},
					"rules": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IncentiveRules"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "It defines the set of rules applicable on the incentive"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DineInBenefit": {
				"properties": {
					"max": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the number of dine-in benefits offered by customer subscription"
					},
					"is_unlimited": {
						"type": "boolean",
						"nullable": true,
						"description": "It defines whether customer is given unlimited dine-in benefit or not\nIf true then there is no limit on number of dine-in benefit but can be restricted\non the basis of other rules"
					},
					"max_per_vendor": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the maximum number of dine-in benefits offered by customer subscription\non per vendor level"
					},
					"max_per_period": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the maximum number of dine-in benefits offered by customer subscription\non per time interval level at any vendor"
					},
					"limit_period_in_hours": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Only after this period only dine-in benefit can be redeemed again"
					},
					"max_per_vendor_period": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the maximum number of dine-in benefits offered by customer subscription\non one specific vendor in a certain interval of time"
					},
					"limit_vendor_period_in_hours": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Only after this period only you can redeem the dine-in benefit at this specific vendor again"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerSubscriptionBenefits": {
				"properties": {
					"free_delivery": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/FreeDeliveryBenefit"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Free delivery is one of the benefits given to customer for a customer_subscription.\nIt describes the current state of the benefit"
					},
					"customer_incentives": {
						"items": {
							"$ref": "#/components/schemas/CustomerIncentives"
						},
						"type": "array",
						"nullable": true,
						"description": "Customer incentives are discount/vouchers given to customer for a customer_subscription.\nIt describes the current state of that benefit"
					},
					"dine_in": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DineInBenefit"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Dine-In is one of the benefits given to customer for a customer_subscription.\nIt describes the current state of that benefit"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerSubscriptionMessage": {
				"properties": {
					"subscription_id": {
						"type": "string",
						"description": "Unique Identification of a customer_subscription\nMaximum length is 40 characters"
					},
					"customer_id": {
						"type": "string",
						"description": "Unique Identification of a customer\nMaximum length is 40 characters"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"plan_id": {
						"type": "string",
						"description": "Unique Identification of a plan selected from list of subscriptions for a country\nMaximum length is 40 characters"
					},
					"subscription_status": {
						"$ref": "#/components/schemas/CustomerSubscriptionStatus"
					},
					"benefits": {
						"$ref": "#/components/schemas/CustomerSubscriptionBenefits",
						"description": "It defines the benefits offered to customer by the customer_subscription"
					},
					"subscription_period_start_timestamp": {
						"type": "string",
						"description": "The time when the customer_subscription is made available.\nValid formats\n2020-04-08T10:43:17Z"
					},
					"subscription_period_end_timestamp": {
						"type": "string",
						"description": "The time till when customer_subscription is valid. After this no benefits can be gained from it\nValid formats\n2020-04-08T10:43:17Z"
					},
					"last_payment_reference": {
						"type": "string",
						"nullable": true,
						"description": "Reference to the last payment received for the customer_subscription\nIt is generated by the payment service provider (in our case midas)"
					},
					"subscription_creation_timestamp": {
						"type": "string",
						"description": "The time when the customer_subscription was availed\nValid formats\n2020-04-08T10:43:17Z"
					},
					"timestamp": {
						"type": "string",
						"description": "The time when the customer_subscription information was last updated\nValid formats\n2020-04-08T10:43:17Z"
					}
				},
				"required": [
					"subscription_id",
					"customer_id",
					"global_entity_id",
					"plan_id",
					"subscription_status",
					"benefits",
					"subscription_period_start_timestamp",
					"subscription_period_end_timestamp",
					"subscription_creation_timestamp",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerIncentiveCategory": {
				"description": "Discount - incentive which does not require code and which is not associated with the customer account.\nPrice reduction is applied automatically before checkout.<br>\nVoucher - incentive associated with a code customer needs to enter during checkout\nOR which can be associated with a customer account (voucher wallet feature). Can be generic or user-specific.\nThose unique codes can be associated to a user or to a campaign.<br>\nWallet -  if a customer uses payment from DH as part of a wallet payment.",
				"enum": [
					"discount",
					"voucher",
					"wallet"
				],
				"type": "string"
			},
			"CustomerIncentiveUseCase": {
				"enum": [
					"First order",
					"Second Order",
					"New restaurant",
					"New occasion",
					"New vertical",
					"New payment method",
					"1st time app",
					"New cuisine",
					"Promo",
					"Restaurant recommendation",
					"Special day/occasion",
					"Come back",
					"Replace order",
					"Apology with urgency",
					"General apology",
					"WOW moment",
					"Abandoned cart"
				],
				"type": "string"
			},
			"RulesCustomerIdType": {
				"description": "CUSTOMER_ID = identifier of customer from platform. Same as customer_id on Order and other events\n\nQUBIK_SEGMENT_ID = refers to a customer's qubik segment such as cohort so that incentive can be applied\nfor a certain customer’s qubik segment.",
				"enum": [
					"customer_id",
					"qubik_segment_id"
				],
				"type": "string"
			},
			"RulesCustomerIds": {
				"properties": {
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesCustomerIdType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Qubik Segment ID is defined and stored in DataFridge by the Customer Profiling team\n\nYou can find more information on the qubik segment id here:\nhttps://confluence.deliveryhero.com/display/GLOBAL/Customer+Profiling+Service"
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RulesCustomer": {
				"properties": {
					"ids": {
						"items": {
							"$ref": "#/components/schemas/RulesCustomerIds"
						},
						"type": "array",
						"nullable": true
					},
					"first_order_only": {
						"type": "boolean",
						"nullable": true,
						"description": "Indicates that whether this incentive is only applicable for first order per customer account only.\nFirst order is decided based on the customer’s order history, and is true only\nwhen the customer hasn’t placed any orders on the platform with this account yet.\nIn Pandora it matches the definition of field “new_customer_only”."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RulesLocationType": {
				"description": "CITY_ID = for which city, this incentive is applicable\n\nAREA_ID = for which area, this incentive is applicable",
				"enum": [
					"city_id",
					"area_id"
				],
				"type": "string"
			},
			"RulesLocation": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/RulesLocationType",
						"description": "Values should be same as the ones specified on the SubmitOrderMessage\nhttp://docs.api.thedatafridge.com/#operation/SubmitOrderMessage\ndelivery -> location -> city_id / area_id accordingly"
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Values contain the corresponding values"
					}
				},
				"required": [
					"type",
					"values"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RulesProductIdType": {
				"description": "CATEGORY_ID = refers to category of the product\nPRODUCT_PARENT_ID = refers to a product in a certain category used when products have a hierarchical structure\nsuch as Pandora platform in which one main Product can have subsequent entities.\nCustomers cannot add parent products into the basket\nPRODUCT_ID= refers to variance of product ID used by customers and customer care to identify the product.",
				"enum": [
					"category_id",
					"product_parent_id",
					"product_id"
				],
				"type": "string"
			},
			"RulesProductId": {
				"properties": {
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesProductIdType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RulesProductBxgyBuy": {
				"properties": {
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesProductIdType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Values contains the list of items that customer needs to buy in order to get the Y items"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of items the customer needs to buy"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RulesProductBxgyGetType": {
				"description": "CATEGORY_ID = refers to category of the product\nPRODUCT_PARENT_ID = refers to a product in a certain category used when products have a hierarchical structure\nsuch as Pandora platform in which one main Product can have subsequent entities.\nCustomers cannot add parent products into the basket\nPRODUCT_ID= refers to variance of product ID used by customers and customer care to identify the product.\nAMOUNT = if bxgy is amount based, the actual amount would reflect in the amount field",
				"enum": [
					"category_id",
					"product_parent_id",
					"product_id",
					"amount"
				],
				"type": "string"
			},
			"RulesProductBxgyGet": {
				"properties": {
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesProductBxgyGetType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "Values contains the list of items that customer needs to buy in order to get the Y items"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of items the customer will get for free"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RulesProductBxgy": {
				"properties": {
					"buy": {
						"items": {
							"$ref": "#/components/schemas/RulesProductBxgyBuy"
						},
						"type": "array",
						"nullable": true,
						"description": "List of items that customer needs to buy"
					},
					"get": {
						"items": {
							"$ref": "#/components/schemas/RulesProductBxgyGet"
						},
						"type": "array",
						"nullable": true,
						"description": "List of items that customer will get"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RulesProduct": {
				"properties": {
					"ids": {
						"items": {
							"$ref": "#/components/schemas/RulesProductId"
						},
						"type": "array",
						"nullable": true
					},
					"discount_only_min_order_amount": {
						"type": "boolean",
						"nullable": true,
						"description": "This field is used to indicate that Minimun Order Value is only applicable on discounted products"
					},
					"bxgy": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesProductBxgy"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "BXGY stands for Buy X items Get Y items."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RuleUsageLimitsType": {
				"description": "This limit type is used for incentive  limits.\nTOTAL= refers to times that this incentive can be used. For example this voucher can be used 1000 times.\nDAILY = refers to daily limit of incentives that can be used.\nWEEKLY = refers to weekly limit of incentives that can be used\nMONTHLY = refers to monthly limit of incentives that can be used\nUSER_TOTAL = refers to how many times a customer can use this voucher overall.\nUSER_DAILY = refers to daily limit of incentives that can be used by a customer\nUSER_WEEKLY = refers to weekly limit of incentives that can be used by a customer\nUSER_MONTHLY =   refers to monthly limit of incentives that can be used by a customer",
				"enum": [
					"total",
					"daily",
					"weekly",
					"monthly",
					"user_total",
					"user_daily",
					"user_weekly",
					"user_monthly"
				],
				"type": "string"
			},
			"RulesUsageLimitsLimit": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/RuleUsageLimitsType"
					},
					"limit": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type",
					"limit"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RulesUsageLimits": {
				"properties": {
					"limits": {
						"items": {
							"$ref": "#/components/schemas/RulesUsageLimitsLimit"
						},
						"type": "array",
						"nullable": true
					},
					"is_unlimited": {
						"type": "boolean",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RulesPaymentType": {
				"description": "PAYMENT_METHOD = List of payment types that the incentive can be used, sames as in the Order\nPAYMENT_BIN = List of payment BINS. BIN is used for identifying banks.\nYou can find more information here: https://www.investopedia.com/terms/b/bank-identification-number.asp",
				"enum": [
					"payment_method",
					"payment_bin"
				],
				"type": "string"
			},
			"RulesPayment": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/RulesPaymentType"
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"type",
					"values"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RulesPlatformType": {
				"description": "CLIENT = refers to which platform client this incentives is applicable , for example web, ios\ndelivery_type = refers to expedition type such as delivery or pickup",
				"enum": [
					"client",
					"delivery_type"
				],
				"type": "string"
			},
			"RulesPlatform": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/RulesPlatformType"
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"type",
					"values"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Weekday": {
				"enum": [
					"monday",
					"tuesday",
					"wednesday",
					"thursday",
					"friday",
					"saturday",
					"sunday"
				],
				"type": "string"
			},
			"RulesTimeSchedule": {
				"properties": {
					"day": {
						"$ref": "#/components/schemas/Weekday"
					},
					"start_time": {
						"type": "string",
						"nullable": true,
						"description": "Start of schedule for specific day\nStart time is based on the time zone defined, If not provided = start of the day"
					},
					"end_time": {
						"type": "string",
						"nullable": true,
						"description": "End of schedule for specific day\nEnd time is based on the time zone defined, If not provided = end of the day"
					}
				},
				"required": [
					"day"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RulesTime": {
				"properties": {
					"start_timestamp": {
						"type": "string",
						"description": "Incentive start timestamp"
					},
					"expire_timestamp": {
						"type": "string",
						"description": "Incentive expiration timestamp"
					},
					"schedules": {
						"items": {
							"$ref": "#/components/schemas/RulesTimeSchedule"
						},
						"type": "array",
						"nullable": true,
						"description": "Day of the week with optional time range"
					}
				},
				"required": [
					"start_timestamp",
					"expire_timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RulesMembership": {
				"properties": {
					"members_only": {
						"type": "boolean",
						"description": "used to indicate that this incentive is for membership customers only"
					},
					"min_order_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "MOV for membership users"
					},
					"max_discount_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum discount amount accepted to use incentive, this should be greater than rules.min_amount"
					},
					"additional_discount_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "additional discount amount membership customer will get"
					},
					"additional_discount_percentage": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "additional discount percentage membership user will get"
					}
				},
				"required": [
					"members_only"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Rules": {
				"properties": {
					"customer": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesCustomer"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Rules and conditions with restrictions on customer level"
					},
					"location": {
						"items": {
							"$ref": "#/components/schemas/RulesLocation"
						},
						"type": "array",
						"nullable": true,
						"description": "Rules and conditions with restrictions on location level"
					},
					"vendors": {
						"items": {
							"$ref": "#/components/schemas/RulesVendor"
						},
						"type": "array",
						"nullable": true,
						"description": "Rules and conditions with restrictions on vendor level"
					},
					"product": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesProduct"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"usage_limits": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesUsageLimits"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Rules and conditions with restrictions on usage limits"
					},
					"payments": {
						"items": {
							"$ref": "#/components/schemas/RulesPayment"
						},
						"type": "array",
						"nullable": true
					},
					"platforms": {
						"items": {
							"$ref": "#/components/schemas/RulesPlatform"
						},
						"type": "array",
						"nullable": true
					},
					"time": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesTime"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"membership": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RulesMembership"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Rules that are applicable exclusively for platform memberships"
					},
					"min_order_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum order amount accepted to use this incentive whether MOV including VAT or not based vendor configuration"
					},
					"max_order_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum order amount accepted to use incentive, this should be greater than rules.min_amount"
					},
					"max_discount_amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum order amount accepted to use incentive, this should be greater than rules.min_amount.<br>\nApplies to any type of incentives (vouchers, discounts, etc). <br>\nCaps maximal applicable amount for percentage types of discount to a fixed value. <br>\nAllows limiting marketing budget for percentage incentives. <br>\nExample: Incentive is \"20% off\", max_discount_value is \"$20.00\".<br>\nIn case order is below $100.00 discount will be applied accordingly.<br>\nIn case of order value over $100.00 applied amount will be always $20.00.<br>\nExample: order value $50.00 -> discounted amount = $10.00. Order value $200.00 -> discounted amount = $20.00."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerIncentiveMessage": {
				"properties": {
					"customer_incentive_id": {
						"type": "string",
						"description": "Identifier for the incentive. Typically same as braze_campaign_id when the customer incentive <br>\nis created for many customers and braze is used. This field is used to be joined with customer <br>\nincentive transaction and identify popular incentives. A customer incentive must be unique within <br>\nsame global entity id. A customer incentive with same customer_incentive_id and global_entity_id <br>\nmust share the same rules otherwise it relates to a different incentive. A customer_incentive_id <br>\nis what defines the scope of the incentive (not the actual usage which is defined in totally different <br>\nevent \"Customer Incentive Transaction\". This is different from voucher code."
					},
					"incentive_type": {
						"$ref": "#/components/schemas/CustomerIncentiveType",
						"description": "Incentive type"
					},
					"code_required": {
						"type": "boolean",
						"description": "defines whether incentive code is required.\nIf true, incentive_code is required."
					},
					"incentive_category": {
						"$ref": "#/components/schemas/CustomerIncentiveCategory"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"currency": {
						"type": "string",
						"description": "currency type which is used for this incentive in ISO 4217 format"
					},
					"active": {
						"type": "boolean",
						"description": "Active field indicates that whether this incentive is active or inactive"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when incentive is created OR updated e.g. \"2014-07-30T10:43:17Z\". With at least ms precision"
					},
					"create_user_id": {
						"type": "string",
						"nullable": true,
						"description": "user ID of the request used to create the incentive.\nIncentive can be created by application/service which may or may not contain user role,\nif application has user role, user_id and source_id(application) are used for\ncreate_user_id and create_source_id. If an application does not have user_role,\nonly application_id is used for create_source_id."
					},
					"create_source": {
						"type": "string",
						"nullable": true,
						"description": "The source application / request application used to create the Incentive."
					},
					"update_user_id": {
						"type": "string",
						"nullable": true,
						"description": "Id of the backend user who created the Incentive"
					},
					"update_source": {
						"type": "string",
						"nullable": true,
						"description": "The source application / request application used to update the Incentive."
					},
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Incentive discount amount"
					},
					"percentage": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Incentive discount percentage"
					},
					"purpose": {
						"type": "string",
						"description": "This field should contain the reason, why this incentive was given to customer as per\n[DH Tracking & Naming Convention]\n(https://docs.google.com/spreadsheets/d/13xIDajf1JA-prvTuV9jHkAoIGScehwbSPdx6HZQTgQM/edit#gid=165228180)\n<br>"
					},
					"customer_use_case": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CustomerIncentiveUseCase"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Similar to the purpose, but taking a customer centric perspective of describing the use case\nfrom the customers’ point of view"
					},
					"auto_apply": {
						"type": "boolean",
						"nullable": true,
						"description": "There is an auto apply feature for incentives that gets applied on the cart\nwithout having to enter the voucher code. Usually this voucher is customer specific.\nIf true, this incentive is eligible for auto apply feature"
					},
					"incentive_code": {
						"type": "string",
						"nullable": true,
						"description": "Incentive code showed to the user. Not applicable for discount."
					},
					"is_code_template": {
						"type": "boolean",
						"nullable": true,
						"description": "If true, this incentive_code is an expression code.\nFor example in Pandora’s platform the “incentive_code” is VVT@@@@, @@@@ is replaced by alphanumeric characters,\nWhich results into VVTe3ty, VVTuc2l. In order to match the incentive transaction to incentive object,\nuse customer_incentive_id because incentive code can be either fixed or expression"
					},
					"free_gift_texts": {
						"items": {
							"$ref": "#/components/schemas/LocalizedText"
						},
						"type": "array",
						"nullable": true,
						"description": "Free text string that can be configured for a free_gift type incentive,\nwhere this text is sent to the vendor to add a free ‘gift’ item in the order."
					},
					"timezone": {
						"type": "string",
						"description": "String representing the timezone of the promotion. <br>\nAs per https://en.wikipedia.org/wiki/List_of_tz_database_time_zones <br>\nex: \"Europe/Berlin\""
					},
					"titles": {
						"items": {
							"$ref": "#/components/schemas/LocalizedText"
						},
						"type": "array",
						"description": "Incentive title"
					},
					"descriptions": {
						"items": {
							"$ref": "#/components/schemas/LocalizedText"
						},
						"type": "array",
						"nullable": true,
						"description": "Incentive description"
					},
					"sponsorship_ratios": {
						"items": {
							"$ref": "#/components/schemas/SponsorshipRatio"
						},
						"type": "array",
						"description": "Ratio of the incentives paid by different parties\nSum of all sponsorship_ratio.value in the list should be 1.0"
					},
					"is_stackable": {
						"type": "boolean",
						"description": "If an incentive is stackable with other incentives or not."
					},
					"rules": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Rules"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Rules that could be applied on the order"
					},
					"braze_campaign_id": {
						"type": "string",
						"nullable": true,
						"description": "Braze campaign_id of the Campaign used to communicate the incentive."
					},
					"braze_canvas_id": {
						"type": "string",
						"nullable": true,
						"description": "Braze canvas_id of the Canvas used to communicate the incentive."
					},
					"marketing_campaign_name": {
						"type": "string",
						"nullable": true,
						"description": "Name of the campaign, compliant with the marketing naming convention from DH central marketing team."
					},
					"create_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp when customer incentive was created without millisecond\nin RFC-3339 format <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"customer_incentive_id",
					"incentive_type",
					"code_required",
					"incentive_category",
					"global_entity_id",
					"currency",
					"active",
					"timestamp",
					"purpose",
					"timezone",
					"titles",
					"sponsorship_ratios",
					"is_stackable"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerIncentiveTransactionType": {
				"description": "CONSUMED= when incentive is consumed for a specific order\nREVERTED = when order is cancelled, corresponding incentive is reverted",
				"enum": [
					"consumed",
					"reverted"
				],
				"type": "string"
			},
			"IncentiveApplied": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Monetary amount used from incentive including tax.\n\nExcept for the free gift incentive type, all the other incentive types have monetary values.\nFor an amount based voucher, it's the used incentive amount.\n\nIf the voucher total is greater than the order total, then the lower value should be passed.\n\nFor a percentage based incentive, it is the percentage multiplied by the basket that it applied to,\nto give the monetary amount\n\nFor a free-delivery incentive, delivery charge is the amount value.\nFor BXGY's incentive, it is the item value(s)."
					},
					"amount_tax": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Monetary tax amount used from incentive.\nI.e. the tax element of incentive_applied.amount"
					},
					"items": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "For BXGY incentives, customers would get Y no of products,\nso we are making the products(Y) as part of the transaction."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerIncentiveTransactionCancellationReason": {
				"description": "Reason why the incentive was reverted\nOnly required when type is REVERT",
				"enum": [
					"logistics_cancellation",
					"customer_cancellation",
					"vendor_cancellation"
				],
				"type": "string"
			},
			"CustomerIncentiveTransactionMessage": {
				"properties": {
					"incentive_code": {
						"type": "string",
						"nullable": true,
						"description": "Incentive code showed to the user"
					},
					"customer_incentive_id": {
						"type": "string",
						"description": "Incentive identifier. Every incentive, be it a voucher or discount,\nhas a unique identifier which is used to identify the incentive object.\nThis is different from voucher code."
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when incentive transaction type is changed. ie: consume / revert action was done, RFC-3339 format.\nWith at least ms precision <br>\nValid formats\n2014-07-30T10:43:17.123Z"
					},
					"customer_id": {
						"type": "string",
						"nullable": true,
						"description": "Customer that used the Incentive"
					},
					"type": {
						"$ref": "#/components/schemas/CustomerIncentiveTransactionType"
					},
					"order_id": {
						"type": "string",
						"description": "Order Id that the incentive was used in"
					},
					"incentive_applied": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IncentiveApplied"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"cancellation_reason": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CustomerIncentiveTransactionCancellationReason"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"create_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp when customer incentive transaction was created without millisecond in RFC-3339 format. <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"customer_incentive_id",
					"global_entity_id",
					"timestamp",
					"type",
					"order_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EntityType": {
				"enum": [
					"vendor",
					"rider",
					"customer",
					"product"
				],
				"type": "string"
			},
			"Topic": {
				"enum": [
					"restaurant_food",
					"packaging",
					"rider",
					"punctuality",
					"delivery_time",
					"overall"
				],
				"type": "string"
			},
			"RatingEntry": {
				"properties": {
					"topic": {
						"$ref": "#/components/schemas/Topic",
						"description": "One of predefined topics [restaurant_food, packaging, rider, punctuality, delivery_time, overall]"
					},
					"rating": {
						"type": "number",
						"format": "double",
						"description": "The average value for all provided ratings."
					},
					"rating_count": {
						"type": "number",
						"format": "double",
						"description": "Number of ratings."
					}
				},
				"required": [
					"topic",
					"rating",
					"rating_count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AggregatedRatingUpdateMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"entity_id": {
						"type": "string",
						"description": "Entity Id for which rating has been updated"
					},
					"entity_type": {
						"$ref": "#/components/schemas/EntityType",
						"description": "Entity type"
					},
					"ratings": {
						"items": {
							"$ref": "#/components/schemas/RatingEntry"
						},
						"type": "array",
						"description": "Aggregated ratings for different topics"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when rating has been calculated.\nRFC-3339 format with millisecond precision.\nValid formats:\n2010-02-18T06:22:33.123Z"
					}
				},
				"required": [
					"global_entity_id",
					"entity_id",
					"entity_type",
					"ratings",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BrazeProfile": {
				"properties": {
					"braze_external_id": {
						"type": "string",
						"nullable": true,
						"description": "It might contain PII.\nA unique Braze profile identifier for customer (unique *per Braze App Group*!) that is set by the platforms\nin the call to initialise the Braze SDK (in the app or in the web).\nIt is usually the backend customer ID except in Mjam and Talabat where it is email."
					},
					"braze_internal_id": {
						"type": "string",
						"description": "The unique Braze profile identifier. This is the internal Braze Primary Key. Present in all profiles.\nIt *may* be globally unique. A unique user identifier pulled for existing Braze users"
					}
				},
				"required": [
					"braze_internal_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CRMCustomerIncentiveRules": {
				"properties": {
					"vendors": {
						"items": {
							"$ref": "#/components/schemas/RulesVendor"
						},
						"type": "array",
						"nullable": true,
						"description": "Rules and conditions with restrictions on vendor level\nSame as vendors filter on customer incentive"
					},
					"platforms": {
						"items": {
							"$ref": "#/components/schemas/RulesPlatform"
						},
						"type": "array",
						"nullable": true
					},
					"payments": {
						"items": {
							"$ref": "#/components/schemas/RulesPayment"
						},
						"type": "array",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CRMCustomerIncentive": {
				"properties": {
					"customer_incentive_id": {
						"type": "string",
						"nullable": true,
						"description": "Incentive identifier from the Customer Incentive Stream.\nEvery offer, be it a voucher or discount, has a unique identifier which is used to identify the offer object.\nThis is different from voucher code."
					},
					"type": {
						"$ref": "#/components/schemas/CustomerIncentiveType",
						"description": "Incentive type"
					},
					"category": {
						"$ref": "#/components/schemas/CustomerIncentiveCategory"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "The text of the offer that is communicated to the customer"
					},
					"end_date": {
						"type": "string",
						"nullable": true,
						"description": "Date till when the offer can be used. Format YYYY-MM-DD"
					},
					"value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Voucher value in local currency or percentage of discount or cashback"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of vouchers, discount coupons or free deliveries offered"
					},
					"mov": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum order value needed to use the deal"
					},
					"currency": {
						"type": "string",
						"nullable": true,
						"description": "Currency the deal offered in. Format ISO_4217"
					},
					"rules": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CRMCustomerIncentiveRules"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Rules that state where the incentive is used"
					}
				},
				"required": [
					"type",
					"category"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CRMCustomerCommunicationMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the request was taken as UTC RFC-3339<br>\nValid formats\n2014-07-30T10:43:17Z\n2014-07-30T10:43:17.123Z"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify the brand and country where the communication is sent"
					},
					"braze_profile": {
						"$ref": "#/components/schemas/BrazeProfile"
					},
					"campaign_name": {
						"type": "string",
						"nullable": true,
						"description": "The name of the campaign in Braze where the communication is sent to the customer.\nWill be populated only when the communication is triggered from the campaign"
					},
					"campaign_id": {
						"type": "string",
						"nullable": true,
						"description": "The id of the campaign in Braze where the communication is sent to the customer.\nWill be populated only when the communication is triggered from the campaign"
					},
					"canvas_name": {
						"type": "string",
						"nullable": true,
						"description": "The name of the canvas in Braze where the communication will be sent to the customer.\nWill be populated only when the communication is triggered from a canvas."
					},
					"canvas_id": {
						"type": "string",
						"nullable": true,
						"description": "The id of the canvas in Braze where the communication is sent to the customer.\nWill be populated only when the communication is triggered from a canvas."
					},
					"step_name": {
						"type": "string",
						"nullable": true,
						"description": "The name of the step in canvas where the API is triggered.\nWill be populated only when the communication is triggered from a canvas."
					},
					"step_id": {
						"type": "string",
						"nullable": true,
						"description": "The name of the step in canvas where the API is triggered.\nWill be populated only when the communication is triggered from a canvas."
					},
					"send_id": {
						"type": "string",
						"nullable": true,
						"description": "The send id to be populated if messages are triggered programmatically without campaign creation"
					},
					"variant": {
						"type": "string",
						"nullable": true,
						"description": "The name of the variant in the canvas or campaign"
					},
					"channels": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "The channel where the message is communicated to the customer such as In-Ap, Email, iOS Push."
					},
					"message_type": {
						"type": "string",
						"description": "The type of communication sent to the customer such as Preferred Vendor Deal, Restaurant Recommendation"
					},
					"purpose": {
						"type": "string",
						"description": "The intent for the communication such as\nreactivation, churn prevention, cross-sell, increase in frequency, reminder"
					},
					"customer_incentives": {
						"items": {
							"$ref": "#/components/schemas/CRMCustomerIncentive"
						},
						"type": "array",
						"nullable": true,
						"description": "Defines the customer incentives communicated to the customer"
					},
					"vendor_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "These are the vendors communicated to customer"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"braze_profile",
					"channels",
					"message_type",
					"purpose"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GroupOrderOption": {
				"properties": {
					"option_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"option_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GroupOrderItem": {
				"properties": {
					"item_id": {
						"type": "string",
						"description": "Represents id of participant's product item"
					},
					"name": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"options": {
						"items": {
							"$ref": "#/components/schemas/GroupOrderOption"
						},
						"type": "array",
						"nullable": true,
						"description": "An array of topping objects."
					}
				},
				"required": [
					"item_id",
					"name",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GroupOrderParticipant": {
				"properties": {
					"customer_id": {
						"type": "string",
						"description": "Represents id of customer"
					},
					"is_host": {
						"type": "boolean",
						"description": "If participant is a host of the group order. A group order can only have a single host"
					},
					"cart_creation_timestamp": {
						"type": "string"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/GroupOrderItem"
						},
						"type": "array",
						"nullable": true,
						"description": "An array of product objects."
					}
				},
				"required": [
					"customer_id",
					"is_host",
					"cart_creation_timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GroupOrderMessage": {
				"properties": {
					"group_order_id": {
						"type": "string",
						"description": "This represents UUID of a Group Order"
					},
					"order_id": {
						"type": "string",
						"description": "This represents order_code of an Order"
					},
					"vendor_id": {
						"type": "string"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with second precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when location reverse geocoding event was sent. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z <br>"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"participants": {
						"items": {
							"$ref": "#/components/schemas/GroupOrderParticipant"
						},
						"type": "array",
						"description": "An array of participant objects. At least one participant must have items attribute filled."
					}
				},
				"required": [
					"group_order_id",
					"order_id",
					"vendor_id",
					"timestamp",
					"global_entity_id",
					"participants"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorCatalogImportCommandMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp of the catalog change. rfc 3339 with at least ms precision."
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Delivery Hero wide, unique identifier of the delivery platform."
					},
					"vendor_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Set of unique identifiers of vendors on Delivery Platforms that this catalog should be used by. <br>\nSame as “vendor_id” defined on Vendor Event from DF."
					},
					"version": {
						"type": "string",
						"description": "Unique identifier of the catalog version."
					},
					"catalog_url": {
						"type": "string",
						"description": "Url to a json file that contains the catalog data . It should always be the full catalog."
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"vendor_ids",
					"version",
					"catalog_url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorCatalogImportStatus": {
				"enum": [
					"in_progress",
					"done_with_errors",
					"done",
					"failed"
				],
				"type": "string"
			},
			"LogEntryLevel": {
				"enum": [
					"info",
					"warn",
					"error"
				],
				"type": "string"
			},
			"VendorCatalogImportLogEntry": {
				"properties": {
					"message": {
						"type": "string",
						"description": "*\nThe log message"
					},
					"level": {
						"$ref": "#/components/schemas/LogEntryLevel",
						"description": "Verbose level"
					},
					"timestamp": {
						"type": "string",
						"description": "timestamp of the log entry. rfc 3339 with at least ms precision."
					}
				},
				"required": [
					"message",
					"level",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorCatalogImportInfoEventMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp of the catalog change. rfc 3339 with at least ms precision."
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Delivery Hero wide, unique identifier of the delivery platform."
					},
					"vendor_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Set of unique identifiers of vendors on Delivery Platforms that this catalog should be used by. <br>\nSame as “vendor_id” defined on Vendor Event from DF."
					},
					"version": {
						"type": "string",
						"description": "Unique identifier of the catalog version."
					},
					"status": {
						"$ref": "#/components/schemas/VendorCatalogImportStatus",
						"description": "The current status of the catalog import"
					},
					"logs": {
						"items": {
							"$ref": "#/components/schemas/VendorCatalogImportLogEntry"
						},
						"type": "array",
						"nullable": true,
						"description": "Detailed informations about the current state"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"vendor_ids",
					"version",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CourierDeliveryZoneGeoJson": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/GeoJsonType",
						"description": "Type of the GeoJson feature. Must be \"Polygon\""
					},
					"coordinates": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Coordinates of the GeoJson polygon"
					}
				},
				"required": [
					"type",
					"coordinates"
				],
				"type": "object",
				"additionalProperties": false
			},
			"City": {
				"properties": {
					"city_id": {
						"type": "string",
						"description": "Identifier of the city that a courier zone belongs to."
					},
					"city_name": {
						"type": "string",
						"description": "The name of the city that a courier zone belongs to."
					}
				},
				"required": [
					"city_id",
					"city_name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CourierDeliveryZoneMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"hurrier_instance_id": {
						"type": "string",
						"description": "Identifier of Hurrier instance (<hurrier_instance_id>.usehurrier.com)"
					},
					"zone_id": {
						"type": "string",
						"description": "Identifier of a courier zone"
					},
					"name": {
						"type": "string",
						"description": "Name of a courier zone"
					},
					"active": {
						"type": "boolean",
						"description": "The status of a courier zone (false = soft delete)"
					},
					"geojson": {
						"$ref": "#/components/schemas/CourierDeliveryZoneGeoJson",
						"description": "Polygon of a courier zone in GeoJson format"
					},
					"city": {
						"$ref": "#/components/schemas/City",
						"description": "City that a zone belongs to."
					},
					"fleet_id": {
						"type": "string",
						"description": "Identifier of a courier fleet that operates in a courier zone."
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with second precision. <br>\nValid formats <br>\n2010-02-18T06:22:33Z"
					}
				},
				"required": [
					"global_entity_id",
					"hurrier_instance_id",
					"zone_id",
					"name",
					"active",
					"geojson",
					"city",
					"fleet_id",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QcommerceInvoiceStatus": {
				"description": "Status of the invoice.<b>",
				"enum": [
					"created",
					"please_review",
					"captured_mismatch",
					"captured_rejected",
					"captured_approved"
				],
				"type": "string"
			},
			"QcommerceInvoiceLine": {
				"properties": {
					"line_id": {
						"type": "string",
						"description": "Unique identifier"
					},
					"sku": {
						"type": "string",
						"description": "SKU of the product in the line of the invoice."
					},
					"trade_cost": {
						"type": "number",
						"format": "double",
						"description": "Trade cost value of the product in the line."
					},
					"gross_cost": {
						"type": "number",
						"format": "double",
						"description": "Gross value of the line (once discounts and taxation are factored in),\nmultiplied by the quantity of skus charged by supplier."
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"description": "Quantity of the products in the line."
					},
					"vat_value": {
						"type": "number",
						"format": "double",
						"description": "Vat value of the product in the line expressed not as a rate, but monetary value."
					},
					"vat_rate": {
						"type": "number",
						"format": "double",
						"description": "Vat percentile value of the product in the line."
					},
					"extra_vat_value": {
						"type": "number",
						"format": "double",
						"description": "Extra vat percentile value of the product in the line."
					},
					"extra_vat_rate": {
						"type": "number",
						"format": "double",
						"description": "Extra vat value of the product in the line, expressed not as a rate, but monetary value."
					},
					"fixed_discount": {
						"type": "number",
						"format": "double",
						"description": "Fixed discount value as applied in the invoice."
					},
					"extra_discount": {
						"type": "number",
						"format": "double",
						"description": "Extra discount value as applied in the invoice."
					},
					"revision": {
						"type": "number",
						"format": "double",
						"description": "Keeps track of all the changes that take place in the line of the document."
					},
					"is_active": {
						"type": "boolean",
						"description": "Describes whether the line is actually active\n(based on the changes that can take place in the lines of the document)."
					},
					"applicant_email": {
						"type": "string",
						"nullable": true,
						"description": "Describes who has requested/applied the change in the line."
					},
					"approver_email": {
						"type": "string",
						"nullable": true,
						"description": "Describes who has approved the change in the line."
					},
					"create_timestamp": {
						"type": "string",
						"description": "RFC-3339 format with millisecond precision. The time this entity has been created"
					},
					"update_timestamp": {
						"type": "string",
						"description": "RFC-3339 format with millisecond precision. The latest time this entity has been updated"
					}
				},
				"required": [
					"line_id",
					"sku",
					"trade_cost",
					"gross_cost",
					"quantity",
					"vat_value",
					"vat_rate",
					"extra_vat_value",
					"extra_vat_rate",
					"fixed_discount",
					"extra_discount",
					"revision",
					"is_active",
					"create_timestamp",
					"update_timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QcommerceInvoiceMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId"
					},
					"timestamp": {
						"type": "string",
						"description": "RFC-3339 format with millisecond precision. The latest timestamp this entity has been updated/created"
					},
					"qcommerce_invoice_id": {
						"type": "string",
						"description": "Unique identifier"
					},
					"supplier_id": {
						"type": "string",
						"description": "Id of the supplier of the invoice in the DMart tech stack"
					},
					"supplier_finance_id": {
						"type": "string",
						"description": "Id of the supplier in SAP."
					},
					"purchase_order_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "List of Identifiers for the orders that the invoice is referring to."
					},
					"supplier_invoice_number": {
						"type": "string",
						"description": "Number of the invoice as provided by the supplier."
					},
					"invoice_date": {
						"type": "string",
						"description": "Date that the invoice has been created. Format : YYYY-MM-DD."
					},
					"invoice_status": {
						"$ref": "#/components/schemas/QcommerceInvoiceStatus"
					},
					"invoice_total_gross_value": {
						"type": "number",
						"format": "double",
						"description": "Total gross value of the captured invoice. With taxation included."
					},
					"invoice_rounding_value": {
						"type": "number",
						"format": "double",
						"description": "Total rounding value that has been applied to the invoice during the 3-way-matching process."
					},
					"invoice_currency": {
						"type": "string",
						"description": "Currency of the invoice in https://de.wikipedia.org/wiki/ISO_4217 e.g. EUR for Euro."
					},
					"store_id": {
						"type": "string",
						"description": "Id of the store that the invoice is referring to.\nThis is basically DMart store_id that we’re getting from inventory management."
					},
					"create_timestamp": {
						"type": "string",
						"description": "RFC-3339 format with millisecond precision. The time this entity has been created"
					},
					"invoice_lines": {
						"items": {
							"$ref": "#/components/schemas/QcommerceInvoiceLine"
						},
						"type": "array",
						"description": "Describes the required details of each line that is included in the respective document."
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"qcommerce_invoice_id",
					"supplier_id",
					"supplier_finance_id",
					"purchase_order_ids",
					"supplier_invoice_number",
					"invoice_date",
					"invoice_status",
					"invoice_total_gross_value",
					"invoice_rounding_value",
					"invoice_currency",
					"store_id",
					"create_timestamp",
					"invoice_lines"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReceiptLine": {
				"properties": {
					"sku": {
						"type": "string",
						"description": "SKU of the product in the line of the receipt."
					},
					"trade_cost": {
						"type": "number",
						"format": "double",
						"description": "Trade cost value of the product in the line."
					},
					"gross_cost": {
						"type": "number",
						"format": "double",
						"description": "Gross value of the line."
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"description": "Quantity of the products in the line."
					},
					"vat_rate": {
						"type": "number",
						"format": "double",
						"description": "Vat of the product in the line."
					},
					"extra_vat_rate": {
						"type": "number",
						"format": "double",
						"description": "Extra vat of the product in the line."
					},
					"fixed_discount": {
						"type": "number",
						"format": "double",
						"description": "Fixed discount as applied in the receipt. Without taxes"
					},
					"extra_discount": {
						"type": "number",
						"format": "double",
						"description": "Extra discount as applied in the invoice. Without taxes"
					},
					"create_timestamp": {
						"type": "string",
						"description": "RFC-3339 format. The time this entity has been created. Without milliseconds"
					}
				},
				"required": [
					"sku",
					"trade_cost",
					"gross_cost",
					"quantity",
					"vat_rate",
					"extra_vat_rate",
					"fixed_discount",
					"extra_discount",
					"create_timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QcommerceDeliveryReceiptMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId"
					},
					"timestamp": {
						"type": "string",
						"description": "RFC-3339 format with millisecond precision. The latest timestamp this entity has been updated/created"
					},
					"delivery_receipt_id": {
						"type": "string",
						"description": "Unique identifier. It’s a UUID."
					},
					"supplier_id": {
						"type": "string",
						"description": "Id of the supplier of the invoice in the DMart tech stack"
					},
					"purchase_order_id": {
						"type": "string",
						"description": "The identifier to the respective purchase order."
					},
					"total_gross_value": {
						"type": "number",
						"format": "double",
						"description": "Total gross value of the delivered purchase order."
					},
					"currency": {
						"type": "string",
						"description": "Currency of the values in the receipt. The code for the currency in https://de.wikipedia.org/wiki/ISO_4217\ne.g. EUR for Euro."
					},
					"store_id": {
						"type": "string",
						"description": "Id of the store that this purchase order delivered at their door steps.\nThis is basically DMart store_id that we’re getting from inventory management."
					},
					"create_timestamp": {
						"type": "string",
						"description": "RFC-3339 format. The time we’ve created this entity.Without milliseconds"
					},
					"receipt_lines": {
						"items": {
							"$ref": "#/components/schemas/ReceiptLine"
						},
						"type": "array",
						"description": "Describes the required details of each line that is included in the respective document."
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"delivery_receipt_id",
					"supplier_id",
					"purchase_order_id",
					"total_gross_value",
					"currency",
					"store_id",
					"create_timestamp",
					"receipt_lines"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReturnStatus": {
				"description": "Status of the Supplier Return. An “in_progress” return can become “done” or “cancelled”,\nno further status change is possible after that.",
				"enum": [
					"in_progress",
					"done",
					"cancelled"
				],
				"type": "string"
			},
			"ReturnReason": {
				"description": "Reason for the creation of the Supplier Return",
				"enum": [
					"store_expired",
					"store_damaged",
					"fixing_order",
					"return_to_suppliers",
					"others"
				],
				"type": "string"
			},
			"ReturnLineDetail": {
				"properties": {
					"sku": {
						"type": "string",
						"description": "SKU of the returned product in the line."
					},
					"line_id": {
						"type": "string",
						"description": "Return line identifier"
					},
					"global_catalog_id": {
						"type": "string",
						"description": "Unique product identifier."
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"description": "Returned quantity."
					}
				},
				"required": [
					"sku",
					"line_id",
					"global_catalog_id",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QcommerceSupplierReturnMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId"
					},
					"timestamp": {
						"type": "string",
						"description": "RFC-3339 format with millisecond precision. The latest timestamp this entity has been updated/created"
					},
					"supplier_return_id": {
						"type": "string",
						"description": "Unique return identifier."
					},
					"supplier_reference_number": {
						"type": "string",
						"description": "Return reference. Unique by global_entity_id"
					},
					"purchase_order_id": {
						"type": "string",
						"description": "Purchase Order reference"
					},
					"return_status": {
						"$ref": "#/components/schemas/ReturnStatus"
					},
					"return_reason": {
						"$ref": "#/components/schemas/ReturnReason"
					},
					"return_line_details": {
						"items": {
							"$ref": "#/components/schemas/ReturnLineDetail"
						},
						"type": "array",
						"description": "Describes the required details of each line that is included in the Purchase Order."
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"supplier_return_id",
					"supplier_reference_number",
					"purchase_order_id",
					"return_status",
					"return_reason",
					"return_line_details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaymentTransactionType": {
				"description": "The type of payment i.e. <br>\nAuthorization,<br>\nCapture,<br>\nPayment (incoming payments),<br>\nRefund,<br>\nPreauthorization,<br>\nReversal (invalidate a pending payment),<br>\nCredit (outgoing payments. unrelated to refunds),<br>\nExternalPayment (e.g. peya topups)",
				"enum": [
					"Authorization",
					"Capture",
					"Payment",
					"Refund",
					"Preauthorization",
					"Reversal",
					"Credit",
					"ExternalPayment"
				],
				"type": "string"
			},
			"PaymentTransactionOwner": {
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of business object that the payment is for.\nThis is defined by the object for which the payment is created.\nFor example for a food order the type will be ‘order’ and the accompanying ID will be the order code.\nSome payment owners will be for objects internal to Alfred which do not have an “external” id.\nAs such, the IDs for these types will be IDs specific to the Alfred Wallet/Payment service.\nPossible values include but are not limited to: Eg: <br>\norder <br>\ndonation <br>\nsubscription <br>\ntopup"
					},
					"id": {
						"type": "string",
						"description": "The ID of the associated owner_type"
					}
				},
				"required": [
					"type",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaymentTransactionAmount": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double",
						"description": "The amount of the payment. This value must be rounded to actual currency units before JSON serialization\nto avoid complications of storing currency as a double."
					},
					"currency": {
						"type": "string",
						"description": "The currency for the payment in ISO 4217"
					}
				},
				"required": [
					"amount",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaymentTransactionStatus": {
				"description": "The status of the payment",
				"enum": [
					"created",
					"pending",
					"unknown",
					"failure",
					"success"
				],
				"type": "string"
			},
			"PaymentTransactionMetadata": {
				"properties": {
					"key": {
						"type": "string",
						"description": "A string that represents the name of the key for the corresponding value. Eg. retrieval_reference_number"
					},
					"value": {
						"type": "string",
						"description": "The value of the corresponding key"
					}
				},
				"required": [
					"key",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaymentTransactionMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId"
					},
					"timestamp": {
						"type": "string",
						"description": "RFC-3339 format with millisecond precision. The latest timestamp this entity has been updated/created"
					},
					"country_code": {
						"type": "string",
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"payment_id": {
						"type": "string",
						"description": "The ID of the payment from the Payment Service (i.e. Alfred payment transaction id).<br>\nEvery payment attempt is considered as separate payment and therefore it will have new payment_id."
					},
					"payment_type": {
						"$ref": "#/components/schemas/PaymentTransactionType"
					},
					"payment_owner": {
						"$ref": "#/components/schemas/PaymentTransactionOwner"
					},
					"amount": {
						"$ref": "#/components/schemas/PaymentTransactionAmount",
						"description": "Object containing the amount details"
					},
					"status": {
						"$ref": "#/components/schemas/PaymentTransactionStatus"
					},
					"parent_payment_id": {
						"type": "string",
						"nullable": true,
						"description": "The reference to the original payment.\nExample: used to for payment_type=refund to explain which original payment is refunded"
					},
					"payment_method": {
						"type": "string",
						"description": "Name of the payment method"
					},
					"payment_service_provider": {
						"type": "string",
						"description": "Name of the payment service provider and/or gateway"
					},
					"payment_metadata": {
						"items": {
							"$ref": "#/components/schemas/PaymentTransactionMetadata"
						},
						"type": "array",
						"nullable": true,
						"description": "Array containing additional payment identifiers in a key:value structure.<br>\nThe key in the array represents the name of the parameter and the value is the value.<br>\nThis provides a flexible way to store reference numbers for different payment methods\nwhich may have different names and values."
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"country_code",
					"payment_id",
					"payment_type",
					"payment_owner",
					"amount",
					"status",
					"payment_method",
					"payment_service_provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlatformPerseusId": {
				"properties": {
					"perseus_id": {
						"type": "string",
						"nullable": true,
						"description": "Each assigned perseus Id for the user"
					},
					"perseus_id_platform": {
						"type": "string",
						"nullable": true,
						"description": "Platform for each assigned perseus_id"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Perseus": {
				"properties": {
					"perseus_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus id"
					},
					"platform_perseus_ids": {
						"items": {
							"$ref": "#/components/schemas/PlatformPerseusId"
						},
						"type": "array",
						"nullable": true,
						"description": "Array contains each perseus_Id assigned to user as an array, complemented by platform"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SubscriberStatus": {
				"description": "Whether the user is an active subscriber, cancelled-subscriber or non-subscriber (never subscribed).\nValues are ‘subscriber’, ‘churned-subscriber’ and ‘non-subscriber’,\nrespectively. Subscription refers to monthly subscription programmes\nthat allows users to receive exclusive discounts and privileges on orders, such as PandaPro.",
				"enum": [
					"subscriber",
					"churned-subscriber",
					"non-subscriber"
				],
				"type": "string"
			},
			"AnalyticsCustomer": {
				"properties": {
					"product_analytics_id": {
						"type": "string",
						"description": "Unique customer identifier that has been generated from the global product analytics team. More information"
					},
					"customer_id": {
						"type": "string",
						"nullable": true,
						"description": "customer id that Data Fridge is using"
					},
					"customer_mapping_id": {
						"type": "string",
						"nullable": true,
						"description": "Customer identifier for third parties integration"
					},
					"guest": {
						"type": "boolean",
						"description": "If the customer is registered or not"
					},
					"active_last_2_weeks": {
						"type": "boolean",
						"description": "Whether customer placed one order in the last 2 weeks or not"
					},
					"perseus": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Perseus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Perseus User Identifier. <br>\nThe field is only populated in products where Perseus is implemented\nhttps://confluence.deliveryhero.com/display/DA/Perseus"
					},
					"subscriber_status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SubscriberStatus"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"saved_credit_card": {
						"type": "boolean",
						"nullable": true,
						"description": "Whether the user has saved credit card/s or not."
					},
					"is_corporate": {
						"type": "boolean",
						"nullable": true,
						"description": "Whether the account of the user is corporate  or not, defined by the platform."
					}
				},
				"required": [
					"product_analytics_id",
					"guest",
					"active_last_2_weeks"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlatformDevice": {
				"description": "Platform visited by customer",
				"enum": [
					"iOS",
					"Android",
					"Web",
					"mWeb"
				],
				"type": "string"
			},
			"VerticalsVisitsRatesLast4Weeks": {
				"properties": {
					"vertical": {
						"type": "string",
						"nullable": true,
						"description": "Vertical name (darkstores, restaurants, etc.)"
					},
					"value": {
						"type": "number",
						"format": "double",
						"description": "Visit rate of the vertical"
					}
				},
				"required": [
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VisitAttributes": {
				"properties": {
					"first_platform_device": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PlatformDevice"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"last_platform_device": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PlatformDevice"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"total_visits": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of visits in customer lifetime ( check Google Analytics definition of\nsession https://support.google.com/analytics/answer/2731565?hl=en)"
					},
					"last_visit_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp of the last visit for the customer"
					},
					"unique_platform_device_last_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of unique platforms (device) used in the last 84 days"
					},
					"visits_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of visits in the last 28 days (4 weeks)"
					},
					"visits_last_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of visits in the last 84 days (12 weeks)"
					},
					"unique_vendors_viewed_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of unique vendor detail pages the customer acceded in last 28 days"
					},
					"avg_unique_vendors_available_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average number of unique vendors available per visit for the customer  in the last 28 days (4weeks)"
					},
					"avg_vendors_open_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average number of OPEN unique vendors available per visit for the customer in the last 28 days"
					},
					"unique_addresses_used_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of different (unique) addresses used in the last 4 weeks"
					},
					"non_restaurants_vertical_visit_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of visits where verticals visited in the last 28 days"
					},
					"session_duration_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Sum of time spent in the sessions within last 4 weeks by the customer (in seconds)"
					},
					"avg_interaction_speed_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average interaction speed in the sessions within last 4 weeks (interaction speed is defined\nas median of time differences between given interactions)"
					},
					"abandoned_cart_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of visits by customer in the last 4 weeks where items added to the cart but never transacted"
					},
					"search_fail_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of visits by customer in the last 4 weeks where at least once search returned 0 results"
					},
					"close_vendor_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of visits by customer in the last 4 weeks where at least once visited vendor was closed"
					},
					"voucher_error_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of visits by customer in the last 4 weeks where at least once error occurred while voucher usage"
					},
					"verticals_visit_rates_last_4_weeks": {
						"items": {
							"$ref": "#/components/schemas/VerticalsVisitsRatesLast4Weeks"
						},
						"type": "array",
						"nullable": true,
						"description": "Array containing user’s visit rates within verticals in the last 4 weeks."
					},
					"acquisition_funnel_last_4_weeks": {
						"type": "string",
						"nullable": true,
						"description": "11 binary digits referring to how far the user in the acquisition funnel in the last 4 weeks. Digits\nrefer respectively to app, home, shop list, address for vendors, shop details, add to cart,\npayment method, checkout loaded, registration started, registration completed, address for delivery, transaction.\nExample: 11010000110 i.e.\nthe user installed the app, visited homepage, added the address, start and complete registration."
					},
					"first_visit_channel": {
						"type": "string",
						"nullable": true,
						"description": "The channel of the user when he first visited the platform."
					},
					"last_visit_channel": {
						"type": "string",
						"nullable": true,
						"description": "The channel of the user when he visited the platform last time."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Intention": {
				"properties": {
					"group": {
						"type": "string",
						"nullable": true,
						"description": "Intention segment of the customer"
					},
					"score": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Prediction score from 0.0 (no intention) to 1.0 (intention) from classification model."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Engagement": {
				"properties": {
					"group": {
						"type": "string",
						"nullable": true,
						"description": "Engagement segment of the customer"
					},
					"score": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Engagement score, ranging from 0.0 (no engagement) to 1.0 (engagement)"
					},
					"unique_interactions_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of unique key interactions in the last 28 days"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"VendorSelection": {
				"properties": {
					"group": {
						"type": "string",
						"nullable": true,
						"description": "Vendor selection segment of the customer"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Activity": {
				"properties": {
					"group": {
						"type": "string",
						"nullable": true,
						"description": "Activity segment of the customer"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerExperience": {
				"properties": {
					"group": {
						"type": "string",
						"nullable": true,
						"description": "Customer experience segment of the customer"
					},
					"score": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Customer experience score, ranging from 0.0 (good experience) to 1.0 (bad experience)"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Segment": {
				"properties": {
					"intention": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Intention"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Segment : Intention"
					},
					"engagement": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Engagement"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Segment : Engagement"
					},
					"vendor_selection": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/VendorSelection"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Segment : VendorSelection"
					},
					"activity": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Activity"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Segment : Activity"
					},
					"customer_experience": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CustomerExperience"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Segment : CustomerExperience"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"OrderAttributes": {
				"properties": {
					"first_order_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp of the first order of the customer"
					},
					"last_order_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp of the last order of the customer"
					},
					"peak_hour_order_rate": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders placed during peak hours"
					},
					"night_hour_order_rate": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders placed during night hours"
					},
					"weekend_order_rate": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders placed during weekends"
					},
					"unique_ordered_last_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of unique weeks with orders over the last 12 weeks"
					},
					"total_orders": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of orders placed in customer’s lifetime"
					},
					"orders_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of orders placed by the customer in the last 28 days"
					},
					"orders_last_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of orders placed by the customer in the last 84 days"
					},
					"voucher_order_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders with voucher in the last 28 days"
					},
					"non_restaurants_vertical_order_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders with voucher in the last 28 days"
					},
					"order_fail_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders failed in the last 28 days"
					},
					"online_payment_order_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders with online payment over the last 28 days"
					},
					"median_order_delivery_time_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Median delivery time in minutes for orders placed in the last 28 days"
					},
					"unique_vendors_ordered_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number of unique vendors the customer ordered from in last 28 days"
					},
					"avg_ordered_vendors_rating_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average rating of the restaurants that customer order from in the last 4 weeks"
					},
					"offer_order_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders with discount, voucher, joker offer  in the last 4 weeks"
					},
					"preferred_cuisine_rate_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders with preferred cuisine type  in the last 28 days"
					},
					"preferred_cuisine_type_last_4_weeks": {
						"type": "string",
						"nullable": true,
						"description": "Most ordered cuisine type in the last 28 days"
					},
					"last_after_order_survey_response_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp of the last AO NPS survey"
					},
					"last_after_order_survey_response_score": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Overall promoter score of the last AO NPS survey"
					},
					"last_after_order_survey_response_avg_rating": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average of ratings from the last  AO NPS survey"
					},
					"group_order_rate": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of group orders in customer's lifetime"
					},
					"non_restaurants_vertical_order_rate": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Rate of orders from verticals in customer's lifetime"
					},
					"unique_ordered_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of unique weeks with orders in customer's lifetime"
					},
					"unique_addresses_used_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of different (unique) addresses used in orders in the last 4 weeks"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MonetaryAttributes": {
				"properties": {
					"currency": {
						"type": "string",
						"nullable": true,
						"description": "Currency of the monetary attributes"
					},
					"total_customer_spent": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount spent by customer on orders"
					},
					"total_customer_spent_last_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount spent by customer on orders in the last 12 weeks"
					},
					"total_basket_value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount of baskets (including fees etc.) ordered by customer (before deductions of vouchers or discounts)"
					},
					"total_basket_value_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount of baskets (including fees etc.) ordered by customer\n(before deductions of vouchers or discounts) in the last 12 weeks"
					},
					"total_dh_revenue": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount of DH revenue from the customer’s orders (before deductions of vouchers or discounts)"
					},
					"total_dh_revenue_last_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount of DH revenue from the customer’s orders\n(before deductions of vouchers or discounts)  in the last 12 weeks"
					},
					"total_dh_profit": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount of DH profits from the customer’s orders"
					},
					"total_dh_profit_last_12_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount of DH profits from the customer’s orders in the last 12 weeks"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MktechSegment": {
				"properties": {
					"discount_group_dh_last_6_months": {
						"type": "string",
						"nullable": true,
						"description": "Total amount of discount paid by Delivery Hero"
					},
					"discount_group_partner_last_6_months": {
						"type": "string",
						"nullable": true,
						"description": "Total amount of discount paid by Partners"
					},
					"frequency_group_last_6_months": {
						"type": "string",
						"nullable": true,
						"description": "Frequency of a user who has ordered in the last six months\nPossible values - A, B, C, D, E, F, M, N"
					},
					"monetary_group_last_6_months": {
						"type": "string",
						"nullable": true,
						"description": "Percentile of customers with respect to average basket size Null for customers who have created.\nPossible values - L, M, H"
					},
					"order_variety_group_last_6_months": {
						"type": "string",
						"nullable": true,
						"description": "User variety of orders from restaurants\nPossible values - L, M, H"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MktechLoyalty": {
				"properties": {
					"next_best_action": {
						"type": "string",
						"nullable": true,
						"description": "It provides the Next Best Action for each customer in order to maximise their probability to become loyal."
					},
					"status": {
						"type": "string",
						"nullable": true,
						"description": "Provides the customer segmentation value about their loyalty status based on their order behavior."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MktechCustomer": {
				"properties": {
					"is_most_recent_account": {
						"type": "boolean",
						"nullable": true,
						"description": "Values are True or False. if the customer is associated with multiple accounts,\nthe account from which the customer has last ordered is marked as True"
					},
					"analytical_customer_id": {
						"type": "string",
						"nullable": true,
						"description": "Also called ACID is created by the central DWH team to identify unique customers in a brand.\nAn ACID is only assigned for customers who place at least one order"
					},
					"returning_probability": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Returning probability will be calculated after the customer places a second order.\nIt gets updated every two days for all the customers."
					},
					"propensity_to_order": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The score is updated for customers who ordered their first order.\nIt provides the probability that the customer will order in the next 182 days"
					},
					"times_reactivated": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Provides the number of times the customer has come out of churn throughout his lifetime"
					},
					"segment": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MktechSegment"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					},
					"loyalty": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MktechLoyalty"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MktechLastVendor": {
				"properties": {
					"vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "Id of the most recent vendor"
					},
					"kill_category": {
						"type": "string",
						"nullable": true,
						"description": "The Kill category of the last vendor the customer ordered from\nTakes the values - N, Z, A, B, C, D and NULL"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MktechOrderAttributes": {
				"properties": {
					"last_failed_order_failure_owner": {
						"type": "string",
						"nullable": true,
						"description": "Contains whether the Delivery Hero, Restaurant, none or the customer responsible for the failed order"
					},
					"last_vendor": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MktechLastVendor"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Vendor data of the customer's recent order"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Mktech": {
				"properties": {
					"timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp when the mktech customer information has been refreshed as UTC ISO-8601\nExample: 2016-06-10T21:42:24Z"
					},
					"customer": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MktechCustomer"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Contains customer data"
					},
					"order_attributes": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MktechOrderAttributes"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Churn": {
				"properties": {
					"churn_probability": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Probability from churn model, ranging from 0 to 1."
					},
					"churn_group": {
						"type": "string",
						"nullable": true,
						"description": "Predicted user status for churn. Values are ‘Churn’ and ‘Return’."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Predictions": {
				"properties": {
					"churn": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Churn"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Object containing churn results. Churn (for next 4 weeks)\nis predicted for every user who placed at least one order in\ntheir lifetime and visited the platform in the last 12 weeks."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomerCCInteractions": {
				"properties": {
					"total_cc_sessions_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Count of all sessions (1 session is a combination of all interactions across all GCC squads over the same issue)\nover the last 4 weeks"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GCC": {
				"properties": {
					"timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Timestamp when the gcc information RFC-3339<br>\nValid formats\n2014-07-30T10:43:17Z\n2014-07-30T10:43:17.123Z"
					},
					"currency": {
						"type": "string",
						"nullable": true,
						"description": "The code for the currency in https://de.wikipedia.org/wiki/ISO_4217 <br>\nLocal currency abbreviation of the monetary values in gcc object."
					},
					"compensations_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Count of instances of compensation over the last 4 weeks"
					},
					"total_compensation_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The sum of compensations (total value) over the last 4 weeks in local currency"
					},
					"refunds_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Count of instances of refund over the last 4 weeks"
					},
					"total_refund_last_4_weeks": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The sum of refunds (total value) over the last 4 weeks in local currency"
					},
					"customer_cc_interactions": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CustomerCCInteractions"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Object which contains all instances of customer interaction,\nwhich is any touch points between the customer and GCC services."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AnalyticsCustomerProfileMessage": {
				"properties": {
					"brand_name": {
						"$ref": "#/components/schemas/BrandName",
						"description": "Unique identifier for brands<br>\nUser friendly brand name of the profile (PedidosYa, pizza.de, Talabat, etc.)<br>\nMaximum length is 120 characters"
					},
					"country_code": {
						"type": "string",
						"description": "Code of the last country of the customer"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "This is the timestamp when the profiles were or calculated (timestamp with ms precision) <br>\nExample: 2016-06-10T21:42:24Z"
					},
					"customer": {
						"$ref": "#/components/schemas/AnalyticsCustomer",
						"description": "Object that contains information about customer"
					},
					"visit_attributes": {
						"$ref": "#/components/schemas/VisitAttributes",
						"description": "Customer attributes based on visits"
					},
					"segment": {
						"$ref": "#/components/schemas/Segment",
						"description": "Segments information"
					},
					"order_attributes": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/OrderAttributes"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order attributes information"
					},
					"monetary_attributes": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MonetaryAttributes"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Monetary attributes information"
					},
					"mktech": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Mktech"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "The object contains attributes and segments provided by MKTech User Feed 2.0"
					},
					"predictions": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Predictions"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Object contains models which predicts the future behaviour of user"
					},
					"gcc": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GCC"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "All Global Contact Center originating attributes"
					}
				},
				"required": [
					"brand_name",
					"country_code",
					"global_entity_id",
					"timestamp",
					"customer",
					"visit_attributes",
					"segment"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PandataCustomer": {
				"properties": {
					"customer_id": {
						"type": "string",
						"description": "customer id that Data Fridge is using"
					},
					"first_name": {
						"type": "string",
						"nullable": true,
						"description": "Customer first name"
					},
					"signed_up_date": {
						"type": "string",
						"nullable": true,
						"description": "Date the customer registered"
					},
					"is_active_last_60_days": {
						"type": "boolean",
						"nullable": true,
						"description": "Whether customer was active in the last 60 days or not"
					},
					"days_since_signup": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Days since user signup"
					},
					"is_subscription_user": {
						"type": "boolean",
						"nullable": true,
						"description": "Whether customer is a subscription user"
					},
					"is_churned_subscription_user": {
						"type": "boolean",
						"nullable": true,
						"description": "Whether customer is a churned subscription user"
					},
					"ab_test_group": {
						"type": "string",
						"nullable": true,
						"description": "Information of random grouping of users for a given period of time"
					}
				},
				"required": [
					"customer_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PandataSegment": {
				"properties": {
					"retention_score": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Segment : retention_score"
					},
					"order_elasticity_score": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Segment : order_elasticity_score"
					},
					"order_elasticity_score_update_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Segment : order_elasticity_score_update_timestamp"
					},
					"retention_score_update_timestamp": {
						"type": "string",
						"nullable": true,
						"description": "Segment : retention_score_update_timestamp"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"OrderValueGroup": {
				"description": "Average order value group: extreme, high, medium, low",
				"enum": [
					"extreme",
					"high",
					"medium",
					"low"
				],
				"type": "string"
			},
			"AvgItemCategoriesPerOrderAllTime": {
				"properties": {
					"master_category": {
						"type": "string",
						"nullable": true,
						"description": "Category based on master category"
					},
					"avg_item_per_order_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "A breakdown of average number of items per order, group by categories"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AvgItemCategoriesPerOrderRecent": {
				"properties": {
					"master_category": {
						"type": "string",
						"nullable": true,
						"description": "Category based on master category"
					},
					"avg_item_per_order_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "A breakdown of average number of items per order, group by categories"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PandataOrderAttributes": {
				"properties": {
					"total_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number of valid orders that the customer placed (based on last 60 days)"
					},
					"total_cities_with_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Distinct count of cities within a country where the customer placed an order (based on life time orders)"
					},
					"total_cities_with_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Distinct count of cities within a country where the customer placed an order (based on last 60 days)"
					},
					"total_restaurant_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from restaurants (based on life time orders)"
					},
					"total_restaurant_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from restaurants (based on last 60 days)"
					},
					"total_shop_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from pandamart (everything except restaurant, darkstores and kitchen)\n(based on life time orders)"
					},
					"total_shop_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from pandamart (everything except restaurant, darkstores and kitchen)\n(based on last 60 days)"
					},
					"total_dmart_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from pandanow (darkstore orders) (based on life time orders)"
					},
					"total_dmart_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from pandanow (darsktore orders) (based on last 60 days)"
					},
					"total_kitchen_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from pandakitchen (shared_kitchen orders) (based on life time orders)"
					},
					"total_kitchen_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from pandakitchen (shared_kitchen orders) (based on last 60 days)"
					},
					"business_verticals_order_placed_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Distinct count of business_type\n(for example, shops, restaurants, kitchens, pandamart etc)\nwhere the customer placed an order\n(based on life time orders)"
					},
					"business_verticals_order_placed_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Distinct count of business_type where the customer placed an order (based on last 60 days)"
					},
					"incentivised_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total count of valid orders that were incentivised (discounted or vouchered) (based on life time orders)"
					},
					"incentivised_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total count of valid orders that were incentivised (discounted or vouchered either by foodpanda or vendors)\n(based on last 60 days)"
					},
					"discounted_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total count of valid orders that were discounted by either foodpanda or vendor (based on life time orders)"
					},
					"discounted_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total count of valid orders that were discounted by either foodpanda or vendor (based on last 60 days)"
					},
					"vouchered_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number of valid orders that were vouchered by either foodpanda or vendor (based on life time orders)"
					},
					"vouchered_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number of valid orders that were vouchered by either foodpanda or vendor (based on last 60 days)"
					},
					"frequent_cuisine_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Customers most frequently ordered cuisine (based on life time orders) (global cuisine title in english)"
					},
					"frequent_cuisine_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "Customers most frequently ordered cuisine (based on last 60 days)"
					},
					"frequent_vendor_id_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Vendor code of the vendor customer frequently ordered (based on life time orders)\nthis is the alphanumeric code of the vendor e.g., x2sa"
					},
					"frequent_vendor_id_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "vendor code of the vendor customer frequently ordered (based on last 60 days)"
					},
					"frequent_vendor_chain_id_all_time": {
						"type": "string",
						"nullable": true,
						"description": "ID of the chain/vendor customer frequently ordered (based on life time orders)"
					},
					"frequent_vendor_chain_id_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "ID of the chain/vendor customer frequently ordered (based on last 60 days)"
					},
					"frequent_vendor_chain_name_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Name of the chain/vendor customer frequently ordered (based on life time orders)"
					},
					"frequent_vendor_chain_name_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "Name of the chain/vendor customer frequently ordered (based on last 60 days)"
					},
					"highest_gfv_cuisine_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Cuisine with the highest gfv value for an order by the customer (based on life time orders)\n(global cuisine title in english)"
					},
					"highest_gfv_cuisine_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "Cuisine with the highest gfv value for an order by the customer (based on last 60 days)"
					},
					"frequent_order_hour_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Frequently ordered time of the day (based on life time orders) this is from 0 - 23 hours."
					},
					"frequent_order_hour_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Frequently ordered time of the day (based on last 60 days)"
					},
					"total_vendor_chains_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total distinct chain/vendors from where the customer ordered (based on life time orders)"
					},
					"total_vendor_chains_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total distinct chain/vendors from where the customer ordered (based on last 60 days)"
					},
					"percent_vouchered_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percentage of vouchered orders of customer's total valid orders (based on life time orders)"
					},
					"percent_vouchered_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percentage of vouchered orders of customer's total valid orders (based on last 60 days)"
					},
					"percent_discounted_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percentage of discounted orders of customer's total valid orders (based on life time orders)"
					},
					"percent_discounted_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percentage of discounted orders of customer's total valid orders (based on last 60 days)"
					},
					"percent_incentivised_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percentage of discounted or vouchered orders of customer's total valid orders (based on life time orders)"
					},
					"percent_incentivised_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percentage of discounted or vouchered orders of customer's total valid orders (based on last 60 days)"
					},
					"order_freq_distribution_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percent Rank based on total valid orders placed by the customer (based on life time orders)"
					},
					"order_freq_distribution_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percent Rank based on total valid orders placed by the customer (based on last 60 days)"
					},
					"customer_incentive_value_distribution_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percent rank based on total incentives that the customer received (based on life time orders)"
					},
					"customer_incentive_value_distribution_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percent rank based on total incentives that the customer received (based on last 60 days)"
					},
					"customer_actual_amount_spent_distribution_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percent rank based on total amount that the customer actually paid (based on life time orders)"
					},
					"customer_actual_amount_spent_distribution_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Percent rank based on total amount that the customer actually paid (based on last 60 days)"
					},
					"order_frequency_group_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Frequency group based on the number of successful orders the customer placed\n(EXTREME, HIGH, MODERATE, LOW) (using order_freq_distribution_all_time)\n(based on life time orders)"
					},
					"order_frequency_group_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "Frequency group based on the number of successful orders the customer placed\n(EXTREME, HIGH, MODERATE, LOW) (using order_freq_distribution_all_time)\n(based on last 60 days)"
					},
					"incentive_value_sensitivity_group_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Sensitivity group based on the value of incentives the customer received\n(EXTREME, HIGH, MODERATE, LOW) (using customer_incentive_value_distribution_all_time) (based on life time orders)"
					},
					"incentive_value_sensitivity_group_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "Sensitivity group based on the value of incentives the customer received\n(EXTREME, HIGH, MODERATE, LOW) (using customer_incentive_value_distribution_all_time) (based on last 60 days)"
					},
					"spending_power_sensitivity_group_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Frequency group based on the value of actual amount a customer has spent\n(EXTREME, HIGH, MODERATE, LOW) (using customer_actual_amount_spent_distribution_all_time)\n(based on life time orders)"
					},
					"spending_power_sensitivity_group_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "Frequency group based on the value of actual amount a customer has spent\n(EXTREME, HIGH, MODERATE, LOW) (using customer_actual_amount_spent_distribution_recent) (based on last 60 days)"
					},
					"incentive_sensitivity_group_all_time": {
						"type": "string",
						"nullable": true,
						"description": "Frequency group based on the % of orders that were incentivised for the customer\n(EXTREME, HIGH, MODERATE, LOW) (using percent_incentivised_orders_all_time) (based on life time orders)"
					},
					"incentive_sensitivity_group_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "Frequency group based on the % of orders that were incentivised for the customer\n(EXTREME, HIGH, MODERATE, LOW) (using percent_incentivised_orders_all_time) (based on last 60 days)"
					},
					"customer_total_gmv_value_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total gmv ( includes delivery fees, food value, surcharge etc) (based on last 60 days)"
					},
					"customer_total_incentives_used_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives used by the customer (discounts and vouchers) (based on life time orders)"
					},
					"customer_total_incentives_used_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives used by the customer (discounts and vouchers) (based on last 60 days)"
					},
					"customer_total_actual_amount_spent_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total amount that the customer actually paid (based on last 60 days)"
					},
					"average_order_value_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average value of an order placed by a customer (calculated based on life time orders)"
					},
					"average_order_value_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average value of an order placed by a customer (calculated based on last 60 days)"
					},
					"minimum_order_value_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum gfv of an order for the customer (based on life time orders)"
					},
					"minimum_order_value_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum gfv of an order for the customer (based on last 60 days)"
					},
					"maximum_order_value_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum gfv of an order for the customer (based on life time orders)"
					},
					"maximum_order_value_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Minimum gfv of an order for the customer (based on last 60 days)"
					},
					"avg_days_to_subsequent_order_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average number of days the customer takes before placing a subsequent order (based on life time orders)"
					},
					"avg_days_to_subsequent_order_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average number of days the customer takes before placing a subsequent order (based on last 60 days)"
					},
					"avg_delivery_seconds_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average delivery time for an order in seconds for the customer (calculated based on life time orders)"
					},
					"avg_delivery_seconds_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average delivery time for an order in seconds for the customer (calculated based on last 60 days)"
					},
					"avg_order_delay_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average delivery delay for an order in seconds for the customer (calculated based on life time orders)"
					},
					"avg_order_delay_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Average delivery delay for an order in seconds for the customer (calculated based on last 60 days)"
					},
					"days_since_first_transaction": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of days since the customer placed his first valid order"
					},
					"days_since_last_transaction": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of days since the customer placed his last valid order"
					},
					"total_concepts_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from concepts (based on life time orders)"
					},
					"total_concepts_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total number orders placed from concepts (based on last 60 days)"
					},
					"frequent_vertical_all_time": {
						"type": "string",
						"nullable": true,
						"description": "The most frequently ordered vertical (based on life time orders)"
					},
					"frequent_vertical_last_60_days": {
						"type": "string",
						"nullable": true,
						"description": "The most frequently ordered vertical (based on last 60 days)"
					},
					"total_challenge_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The total number orders placed that are matching the challenge criteria\n(based on life time orders)"
					},
					"total_challenge_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The total number orders placed that are matching the challenge criteria\n(based on last 60 days)"
					},
					"percent_challenge_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The percentage of orders matching the challenge criteria of the total orders placed\n(based on life time orders)"
					},
					"percent_challenge_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The percentage of orders matching the challenge criteria of the total orders placed\n(based on last 60 days)"
					},
					"average_order_value_group_all_time": {
						"$ref": "#/components/schemas/OrderValueGroup",
						"description": "Frequency group based on the average value of orders that the customer placed\n(EXTREME, HIGH, MODERATE, LOW)\n(based on life time orders)"
					},
					"average_order_value_group_last_60_days": {
						"$ref": "#/components/schemas/OrderValueGroup",
						"description": "Frequency group based on the average value of orders that the customer placed\n(EXTREME, HIGH, MODERATE, LOW)\n(based on last 60 days)"
					},
					"avg_delivery_fee_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total delivery fee divided with orders with delivery fee (based on life time orders)"
					},
					"avg_delivery_fee_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total delivery fee divided with orders with delivery fee (based on last 60 days)"
					},
					"percent_delivery_fee_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The percentage of orders with delivery fee > 0 or not free delivery\n(based on life time orders)"
					},
					"percent_delivery_fee_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The percentage of orders with delivery fee > 0 or not free delivery (based on last 60 days)"
					},
					"avg_items_per_order_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of items in each order transaction (based on life time orders)"
					},
					"avg_items_per_order_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Number of items in each order transaction (based on last 60 days)"
					},
					"avg_item_categories_per_order_all_time": {
						"items": {
							"$ref": "#/components/schemas/AvgItemCategoriesPerOrderAllTime"
						},
						"type": "array",
						"nullable": true
					},
					"avg_item_categories_per_order_last_60_days": {
						"items": {
							"$ref": "#/components/schemas/AvgItemCategoriesPerOrderRecent"
						},
						"type": "array",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TotalOrdersAllTimeAttributes": {
				"properties": {
					"city_id": {
						"type": "string",
						"nullable": true
					},
					"city_name": {
						"type": "string",
						"nullable": true
					},
					"total_orders_all_time": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TotalOrdersRecentAttributes": {
				"properties": {
					"city_id": {
						"type": "string",
						"nullable": true
					},
					"city_name": {
						"type": "string",
						"nullable": true
					},
					"total_orders_last_60_days": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CityAttributes": {
				"properties": {
					"cities_with_total_orders_all_time": {
						"items": {
							"$ref": "#/components/schemas/TotalOrdersAllTimeAttributes"
						},
						"type": "array",
						"nullable": true,
						"description": "CityAttributes: cities_with_total_orders_all_time\nTotal number of valid orders per cities (based on life time orders).\nThis is stored as an array of city id, city_name and number of orders,\nordered by the total number of orders descendingly."
					},
					"cities_with_total_orders_last_60_days": {
						"items": {
							"$ref": "#/components/schemas/TotalOrdersRecentAttributes"
						},
						"type": "array",
						"nullable": true,
						"description": "Total number of valid orders per cities (based on last 60 days).\nThis is stored as an array of city id, city_name and number of orders,\nordered by the total number of orders descendingly."
					},
					"logistics_cities_with_total_orders_all_time": {
						"items": {
							"$ref": "#/components/schemas/TotalOrdersAllTimeAttributes"
						},
						"type": "array",
						"nullable": true,
						"description": "Total number of valid orders per logistic cities (from the hurrier system based on life time orders)"
					},
					"logistics_cities_with_total_orders_last_60_days": {
						"items": {
							"$ref": "#/components/schemas/TotalOrdersRecentAttributes"
						},
						"type": "array",
						"nullable": true,
						"description": "Total number of valid orders per logistic cities (based on last 60 days)"
					},
					"city_with_last_order": {
						"type": "string",
						"nullable": true,
						"description": "City name where the customer placed the last order"
					},
					"logistics_city_with_last_order": {
						"type": "string",
						"nullable": true,
						"description": "Logistics city name where the customer placed the last order"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PandataCustomerProfileMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "This is the timestamp when the profiles were or calculated (timestamp with ms precision) <br>\nExample: 2016-06-10T21:42:24Z"
					},
					"customer": {
						"$ref": "#/components/schemas/PandataCustomer",
						"description": "Object that contains information about customer"
					},
					"segment": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PandataSegment"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Segments information"
					},
					"order_attributes": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PandataOrderAttributes"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order attributes information"
					},
					"city_attributes": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CityAttributes"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Cities attributes information"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"customer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TotalVendorOrderWithTiming": {
				"properties": {
					"count": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Count of instances"
					},
					"time_in_seconds": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Time taken in seconds"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TotalVendorOrderDelay": {
				"properties": {
					"count": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Count of instances"
					},
					"time_in_seconds": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Time taken in seconds"
					},
					"more_than_5_mins_count": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Count of instances for orders that were greater than 5 minutes"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PandataCityMetric": {
				"properties": {
					"total_vendor_order_acceptance": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderWithTiming"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Acceptance\nThe total vendor order acceptance values"
					},
					"total_vendor_order_delay": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderDelay"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Delay\nThe total vendor order delay values"
					},
					"total_vendor_order_preparation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderWithTiming"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Preparation\nThe total vendor order preparation values"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TotalVendorOrderCancelled": {
				"properties": {
					"count": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Count of instances"
					},
					"gfv_local": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The gross food value of the items that were in cancelled orders"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TotalVendorOrderCancelledBreakdown": {
				"properties": {
					"closed": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because vendor is closed"
					},
					"unreachable": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because vendor is unreachable"
					},
					"outside_delivery_area": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because order is outside of delivery area"
					},
					"product_unavailable": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because product is unavailable"
					},
					"no_courier": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because no courier"
					},
					"too_busy": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because vendor is too busy"
					},
					"weather_problems": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because of weather problems"
					},
					"will_not_work_with_platform": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because vendor will not work with platform"
					},
					"technical_problem": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because of technical problems"
					},
					"wrong_menu": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because the menu is wrong"
					},
					"late_delivery": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because the delivery is late"
					},
					"incomplete_address": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because of incomplete address"
					},
					"unable_to_find_customer": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because unable to find customer"
					},
					"courier_accident": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because courier had accident"
					},
					"closed_logistics": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because logistics is closed"
					},
					"other_vendor_cancelled": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Order cancelled because of other vendor reasons"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TotalClosedHoursBreakdown": {
				"properties": {
					"vendor_device": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor self-closed through device"
					},
					"order_declined": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is offlined based on vendor failed order rules in same day"
					},
					"vendor_courier_delay": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is offlined due to courier being delayed at pickup as order is not ready"
					},
					"monitor_unreachable_offline": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is offline due to vendor device having connectivity issues"
					},
					"vendor_compliance": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is offline due to consistent performance & compliance issues"
					},
					"churn": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is offlined based on potential vendor churn rules"
					},
					"cc_temporarily_closed": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is offlined due to CC agents setting vendor as temporarily closed"
					},
					"cc_special_day_closed": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is closed due to special day closure"
					},
					"cc_special_day_delivering": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours where vendor is closed due to special day closure for delivery only"
					},
					"other": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours for all remaining vendor closure/offline reasons"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PandataVendorKpiMessage": {
				"properties": {
					"daily_vendor_operational_performance_id": {
						"type": "string",
						"description": "Unique ID for a Vendor Operational KPI for a specific day\nEach daily_vendor_operational_performance_id is a concatenation\nof {order_create_local_date}_{global_entity_id}_{vendor_id}\n\nExample: 2020-02-02_FP_SG_1234"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique ID generated by DWH to identify a brand, platform in a specific country"
					},
					"global_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "Salesforce Global Restaurant ID"
					},
					"vendor_id": {
						"type": "string",
						"description": "Vendor ID generated by Pandora backend"
					},
					"vendor_name": {
						"type": "string",
						"description": "Full Vendor Name"
					},
					"country_iso": {
						"type": "string",
						"description": "Country ISO code\n2 letter country ISO code"
					},
					"currency_code": {
						"type": "string",
						"description": "Currency ISO code"
					},
					"order_create_local_date": {
						"type": "string",
						"nullable": true,
						"description": "Date of the orders"
					},
					"total_gross_order_quantity": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total gross orders for the vendor"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the data was collated in RFC-3339 format"
					},
					"city_metric": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/PandataCityMetric"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "City Metric Information\nThe aggregated values of vendors in a specific city"
					},
					"total_vendor_order_acceptance": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderWithTiming"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Acceptance\nThe total vendor order acceptance values"
					},
					"total_vendor_order_delay": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderDelay"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Delay\nThe total vendor order delay values"
					},
					"total_vendor_order_preparation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderWithTiming"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Preparation\nThe total vendor order preparation values"
					},
					"total_vendor_order_cancelled": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelled"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Cancelled\nThe total vendor order cancelled values"
					},
					"total_vendor_order_cancelled_breakdown_by_reason": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalVendorOrderCancelledBreakdown"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Vendor Order Cancelled Breakdown\nThe breakdown of total vendor order cancelled"
					},
					"total_open_hours": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the scheduled open hours for the vendor"
					},
					"total_closed_hours": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total of the closed hours for the vendor"
					},
					"total_closed_hours_breakdown_by_reason": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/TotalClosedHoursBreakdown"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Total Closed Hours Cancelled Breakdown\nThe breakdown of total closed hours"
					}
				},
				"required": [
					"daily_vendor_operational_performance_id",
					"global_entity_id",
					"vendor_id",
					"vendor_name",
					"country_iso",
					"currency_code",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Deal": {
				"properties": {
					"total_order": {
						"type": "number",
						"format": "double",
						"description": "Total orders for the vendor"
					},
					"total_gfv_local": {
						"type": "number",
						"format": "double",
						"description": "The gross food value of the items"
					}
				},
				"required": [
					"total_order",
					"total_gfv_local"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerProfile": {
				"properties": {
					"total_customer": {
						"type": "number",
						"format": "double",
						"description": "Total distinct customers"
					},
					"total_new_customer": {
						"type": "number",
						"format": "double",
						"description": "Total distinct customers who placed their first order"
					},
					"total_pickup_customer": {
						"type": "number",
						"format": "double",
						"description": "Total distinct customers who placed pick-up order"
					}
				},
				"required": [
					"total_customer",
					"total_new_customer",
					"total_pickup_customer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuProfile": {
				"properties": {
					"total_product": {
						"type": "number",
						"format": "double",
						"description": "Total number of active menu items for the vendor"
					},
					"total_product_with_image": {
						"type": "number",
						"format": "double",
						"description": "Total number of active menu items with images for the vendor"
					},
					"total_product_with_description": {
						"type": "number",
						"format": "double",
						"description": "Total number of active menu items with descriptions for the vendor"
					}
				},
				"required": [
					"total_product",
					"total_product_with_image",
					"total_product_with_description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PandataVendorDealsKpiMessage": {
				"properties": {
					"daily_vendor_deals_kpi_id": {
						"type": "string",
						"description": "Unique ID for a Vendor Deals KPI for a specific day\nEach daily_vendor_deals_kpi_id is a concatenation\nof {order_create_local_date}_{global_entity_id}_{vendor_id}\n\nExample: 2020-02-02_FP_SG_1234"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique ID generated by DWH to identify a brand, platform in a specific country"
					},
					"vendor_id": {
						"type": "string",
						"description": "Vendor ID generated by Pandora backend"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the data was collated in RFC-3339 format"
					},
					"order_create_local_date": {
						"type": "string",
						"description": "Date of the orders"
					},
					"vendor_deal": {
						"$ref": "#/components/schemas/Deal",
						"description": "Vendor Deal information"
					},
					"vendor_deal_customer_profile": {
						"$ref": "#/components/schemas/CustomerProfile",
						"description": "Vendor Deal Customer Profile information"
					},
					"vendor_subscriber_deal": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Deal"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Vendor Subscriber Deal information"
					},
					"vendor_subscriber_deal_customer_profile": {
						"$ref": "#/components/schemas/CustomerProfile",
						"description": "Vendor Subscriber Deal Customer Profile information"
					},
					"vendor_menu_profile": {
						"$ref": "#/components/schemas/MenuProfile",
						"description": "Vendor Menu Profile information"
					}
				},
				"required": [
					"daily_vendor_deals_kpi_id",
					"global_entity_id",
					"vendor_id",
					"timestamp",
					"order_create_local_date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GPSInVendorLocationUpdate": {
				"properties": {
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorInVendorLocationUpdate": {
				"properties": {
					"vendor_id": {
						"type": "string",
						"description": "Unique Id of the vendor\nIt identifies vendor from the Global Entity Id side. It is also used by RPS, Logistics etc."
					},
					"global_vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "global_vendor_id is the salesforce grid_id. <br>\nIt is required if 'id' is empty\nMaximum length is 120 characters"
					}
				},
				"required": [
					"vendor_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorLocationUpdateMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "When the location update happened,  <br>\nwith at least ms precision It can be used by data consumers  <br>\nto discard old messages if they come out of order. Ex: 2010-02-18T06:22:33.442Z <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"location_change_meters": {
						"type": "number",
						"format": "double",
						"description": "Defines amount in meters of location"
					},
					"gps": {
						"$ref": "#/components/schemas/GPSInVendorLocationUpdate",
						"description": "New GPS location"
					},
					"vendor": {
						"$ref": "#/components/schemas/VendorInVendorLocationUpdate"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"location_change_meters",
					"gps",
					"vendor"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GPSInCustomerLocationUpdate": {
				"properties": {
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerInCustomerLocationUpdate": {
				"properties": {
					"customer_address_id": {
						"type": "string"
					}
				},
				"required": [
					"customer_address_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerLocationUpdateMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "When the location update happened,  <br>\nwith at least ms precision It can be used by data consumers  <br>\nto discard old messages if they come out of order. Ex: 2010-02-18T06:22:33.442Z <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"location_change_meters": {
						"type": "number",
						"format": "double",
						"description": "Defines amount in meters of location"
					},
					"gps": {
						"$ref": "#/components/schemas/GPSInCustomerLocationUpdate",
						"description": "New GPS location"
					},
					"customer": {
						"$ref": "#/components/schemas/CustomerInCustomerLocationUpdate"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"location_change_meters",
					"gps",
					"customer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Variant": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Name of the variant"
					},
					"value": {
						"type": "number",
						"format": "double",
						"description": "Score for this variant defined by name field"
					}
				},
				"required": [
					"name",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VendorScoreMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with second precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when Vendor Score was sent. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z <br>"
					},
					"vendor_id": {
						"type": "string",
						"description": "Vendor code that identifies vendor"
					},
					"vendor_score": {
						"type": "number",
						"format": "double",
						"description": "Vendor score to be updated for the vendor identified by vendor_id\n(the higher the score, the better ranking)"
					},
					"variants": {
						"items": {
							"$ref": "#/components/schemas/Variant"
						},
						"type": "array",
						"nullable": true,
						"description": "Vendor score variants to be updated for the vendor identified by vendor_id\nEach variant define a score to be used for A/B testing"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"vendor_id",
					"vendor_score"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocationReverseGeocodingProviderRequest": {
				"properties": {
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"language": {
						"type": "string",
						"nullable": true,
						"description": "Describes the language in which the client wishes the response to be returned."
					}
				},
				"required": [
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocationReverseGeocodingProviderResponse": {
				"properties": {
					"street": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response street name"
					},
					"postal_code": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response postal code"
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response city name"
					},
					"country": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response country name"
					},
					"country_code": {
						"type": "string",
						"nullable": true,
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes the response latitude"
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes the response longitude"
					},
					"number": {
						"type": "string",
						"nullable": true,
						"description": "Number is the conventional way of naming street numbers in some countries,\nfor these countries Geolocator will map street number to (number). And for\nother countries street number will be mapped to (building) field"
					},
					"formatted_address": {
						"type": "string",
						"nullable": true,
						"description": "The combined address components describing a complete address in a particular country"
					},
					"block": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the square area of the location"
					},
					"building": {
						"type": "string",
						"nullable": true,
						"description": "Building is the conventional way of naming street numbers in some countries, for these\ncountries Geolocator will map street number to (building). And for other countries\nstreet number will be mapped to (number) field"
					},
					"company": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the company if exists"
					},
					"entrance": {
						"type": "string",
						"nullable": true,
						"description": "Describes a particular entrance if exists"
					},
					"suburb": {
						"type": "string",
						"nullable": true,
						"description": "Describes a type of residential area"
					},
					"area": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the area"
					},
					"state": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the state"
					},
					"district": {
						"type": "string",
						"nullable": true,
						"description": "Describes a particular district if it exits."
					},
					"place_name": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the place"
					},
					"place_id": {
						"type": "string",
						"nullable": true,
						"description": "Describes the provider id of the place"
					},
					"address_confidence": {
						"type": "string",
						"nullable": true,
						"description": "Provider’s level of confidence of the returned response"
					},
					"street_number": {
						"type": "string",
						"nullable": true,
						"description": "This field will be deprecated. <br>\nThe value that was being passed to street number will either be passed\nto number or to building according to which country is it"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LocationReverseGeocodingProvider": {
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the third party location provider used for geolocation request"
					},
					"request": {
						"$ref": "#/components/schemas/LocationReverseGeocodingProviderRequest",
						"description": "Describes the request to location provider"
					},
					"responses": {
						"items": {
							"$ref": "#/components/schemas/LocationReverseGeocodingProviderResponse"
						},
						"type": "array",
						"nullable": true,
						"description": "Describes the response from the location provider"
					}
				},
				"required": [
					"name",
					"request"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocationReverseGeocodingEventMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with second precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when location reverse geocoding event was sent. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z <br>"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"platform_request_id": {
						"type": "string",
						"description": "Unique id of platform request"
					},
					"provider": {
						"$ref": "#/components/schemas/LocationReverseGeocodingProvider",
						"description": "Determines if delivery area event was activated"
					},
					"service_name": {
						"type": "string",
						"nullable": true,
						"description": "Describes the service name (Pandora, B2C, Pandora B2B, Salesforce, ODR etc)"
					},
					"caller_platform": {
						"type": "string",
						"nullable": true,
						"description": "Describes the platform name (iOS, Android, Web)"
					},
					"perseus_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus User Identifier. <br>\nThe field is only populated in products where Perseus is implemented\nhttps://confluence.deliveryhero.com/display/DA/Perseus"
					},
					"perseus_session_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus Session ID. <br>\nThe field is only populated in products where Perseus is implemented"
					},
					"api_version": {
						"type": "string",
						"nullable": true,
						"description": "Describes the version of Geolocator API for the request"
					},
					"cached_response": {
						"type": "boolean",
						"nullable": true,
						"description": "True if Geolocator serves the provider response from the cache without an actual call to the external API"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"platform_request_id",
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocationGeocodeProviderRequest": {
				"properties": {
					"query": {
						"type": "string",
						"description": "The string of the address query of the request"
					},
					"country_code": {
						"type": "string",
						"nullable": true,
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"language": {
						"type": "string",
						"nullable": true,
						"description": "Contains the abbreviation of the desired language or the language combined with the country code. <br>\nexample: en or en_SG"
					}
				},
				"required": [
					"query"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocationGeocodeProviderResponse": {
				"properties": {
					"street": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response street name"
					},
					"postal_code": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response postal code"
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response city name"
					},
					"country": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response country name"
					},
					"country_code": {
						"type": "string",
						"nullable": true,
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes the response latitude"
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes the response longitude"
					},
					"number": {
						"type": "string",
						"nullable": true,
						"description": "Number is the conventional way of naming street numbers in some countries,\nfor these countries Geolocator will map street number to (number). And for\nother countries street number will be mapped to (building) field"
					},
					"formatted_address": {
						"type": "string",
						"nullable": true,
						"description": "The combined address components describing a complete address in a particular country"
					},
					"block": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the square area of the location"
					},
					"building": {
						"type": "string",
						"nullable": true,
						"description": "Building is the conventional way of naming street numbers in some countries, for these\ncountries Geolocator will map street number to (building). And for other countries\nstreet number will be mapped to (number) field"
					},
					"company": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the company if exists"
					},
					"entrance": {
						"type": "string",
						"nullable": true,
						"description": "Describes a particular entrance if exists"
					},
					"suburb": {
						"type": "string",
						"nullable": true,
						"description": "Describes a type of residential area"
					},
					"area": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the area"
					},
					"state": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the state"
					},
					"district": {
						"type": "string",
						"nullable": true,
						"description": "Describes a particular district if it exits."
					},
					"place_name": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the place"
					},
					"place_id": {
						"type": "string",
						"nullable": true,
						"description": "Describes the provider id of the place"
					},
					"address_confidence": {
						"type": "string",
						"nullable": true,
						"description": "Provider’s level of confidence of the returned response"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LocationGeocodeProvider": {
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the third party location provider used for geolocation request"
					},
					"request": {
						"$ref": "#/components/schemas/LocationGeocodeProviderRequest",
						"description": "Describes the request to location provider"
					},
					"responses": {
						"items": {
							"$ref": "#/components/schemas/LocationGeocodeProviderResponse"
						},
						"type": "array",
						"description": "Describes the response from the location provider"
					}
				},
				"required": [
					"name",
					"request",
					"responses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocationGeocodeMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with second precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when location reverse geocoding event was sent. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z <br>"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"platform_request_id": {
						"type": "string",
						"description": "Unique id of platform request"
					},
					"provider": {
						"$ref": "#/components/schemas/LocationGeocodeProvider",
						"description": "Contains the external location provider information"
					},
					"service_name": {
						"type": "string",
						"description": "Describes the service name (Pandora, B2C, Pandora B2B, Salesforce, ODR etc)"
					},
					"caller_platform": {
						"type": "string",
						"description": "Describes the platform name (iOS, Android, Web)"
					},
					"perseus_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus User Identifier. <br>\nThe field is only populated in products where Perseus is implemented\nhttps://confluence.deliveryhero.com/display/DA/Perseus"
					},
					"perseus_session_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus Session ID. <br>\nThe field is only populated in products where Perseus is implemented"
					},
					"api_version": {
						"type": "string",
						"nullable": true,
						"description": "Describes the version of Geolocator API for the request"
					},
					"cached_response": {
						"type": "boolean",
						"nullable": true,
						"description": "True if Geolocator serves the provider response from the cache without an actual call to the external API"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"platform_request_id",
					"provider",
					"service_name",
					"caller_platform"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlaceDetailsProviderRequest": {
				"properties": {
					"query_id": {
						"type": "string",
						"description": "The string of the address query id of the request"
					},
					"language": {
						"type": "string",
						"nullable": true,
						"description": "Contains the abbreviation of the desired language or the language combined with the country code. <br>\nexample: en or en_SG"
					}
				},
				"required": [
					"query_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlaceDetailsProviderResponse": {
				"properties": {
					"street": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response street name"
					},
					"postal_code": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response postal code"
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response city name"
					},
					"country": {
						"type": "string",
						"nullable": true,
						"description": "Describes the response country name"
					},
					"country_code": {
						"type": "string",
						"nullable": true,
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes the response latitude"
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes the response longitude"
					},
					"number": {
						"type": "string",
						"nullable": true,
						"description": "Number is the conventional way of naming street numbers in some countries,\nfor these countries Geolocator will map street number to (number). And for\nother countries street number will be mapped to (building) field"
					},
					"formatted_address": {
						"type": "string",
						"nullable": true,
						"description": "The combined address components describing a complete address in a particular country"
					},
					"block": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the square area of the location"
					},
					"building": {
						"type": "string",
						"nullable": true,
						"description": "Building is the conventional way of naming street numbers in some countries, for these\ncountries Geolocator will map street number to (building). And for other countries\nstreet number will be mapped to (number) field"
					},
					"company": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the company if exists"
					},
					"entrance": {
						"type": "string",
						"nullable": true,
						"description": "Describes a particular entrance if exists"
					},
					"suburb": {
						"type": "string",
						"nullable": true,
						"description": "Describes a type of residential area"
					},
					"area": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the area"
					},
					"state": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the state"
					},
					"district": {
						"type": "string",
						"nullable": true,
						"description": "Describes a particular district if it exits."
					},
					"place_name": {
						"type": "string",
						"nullable": true,
						"description": "Describes the name of the place"
					},
					"place_id": {
						"type": "string",
						"nullable": true,
						"description": "Describes the provider id of the place"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PlaceDetailsProvider": {
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the third party location provider used for geolocation request"
					},
					"request": {
						"$ref": "#/components/schemas/PlaceDetailsProviderRequest",
						"description": "Describes the request to location provider"
					},
					"responses": {
						"items": {
							"$ref": "#/components/schemas/PlaceDetailsProviderResponse"
						},
						"type": "array",
						"description": "Describes the response from the location provider"
					}
				},
				"required": [
					"name",
					"request",
					"responses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlaceDetailsMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with second precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when location reverse geocoding event was sent. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z <br>"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"platform_request_id": {
						"type": "string",
						"description": "Unique id of platform request"
					},
					"provider": {
						"$ref": "#/components/schemas/PlaceDetailsProvider",
						"description": "Contains the external location provider information"
					},
					"service_name": {
						"type": "string",
						"description": "Describes the service name (Pandora, B2C, Pandora B2B, Salesforce, ODR etc)"
					},
					"caller_platform": {
						"type": "string",
						"description": "Describes the platform name (iOS, Android, Web)"
					},
					"perseus_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus User Identifier. <br>\nThe field is only populated in products where Perseus is implemented\nhttps://confluence.deliveryhero.com/display/DA/Perseus"
					},
					"perseus_session_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus Session ID. <br>\nThe field is only populated in products where Perseus is implemented"
					},
					"api_version": {
						"type": "string",
						"nullable": true,
						"description": "Describes the version of Geolocator API for the request"
					},
					"cached_response": {
						"type": "boolean",
						"nullable": true,
						"description": "True if Geolocator serves the provider response from the cache without an actual call to the external API"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"platform_request_id",
					"provider",
					"service_name",
					"caller_platform"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlaceAutoCompleteProviderRequest": {
				"properties": {
					"query": {
						"type": "string",
						"description": "The string of the address query of the request"
					},
					"country_code": {
						"type": "string",
						"nullable": true,
						"description": "The code of the country as specified by ISO 3166-1 ALPHA-2. <br>\nhttps://en.wikipedia.org/wiki/ISO_3166-2"
					},
					"language": {
						"type": "string",
						"nullable": true,
						"description": "Contains the abbreviation of the desired language or the language combined with the country code. <br>\nexample: en or en_SG"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes a latitude which to be the center of the search area"
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes a longitude which to be the center of the search area"
					},
					"radius": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Describes the radius of the search area"
					}
				},
				"required": [
					"query"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlaceAutoCompleteProviderResponse": {
				"properties": {
					"formatted_address": {
						"type": "string",
						"nullable": true,
						"description": "The combined address components describing a complete address in a particular country"
					},
					"place_id": {
						"type": "string",
						"nullable": true,
						"description": "Describes the provider id of the place"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PlaceAutoCompleteProvider": {
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the third party location provider used for geolocation request"
					},
					"request": {
						"$ref": "#/components/schemas/PlaceAutoCompleteProviderRequest",
						"description": "Describes the request to location provider"
					},
					"responses": {
						"items": {
							"$ref": "#/components/schemas/PlaceAutoCompleteProviderResponse"
						},
						"type": "array",
						"description": "Describes the response from the location provider"
					}
				},
				"required": [
					"name",
					"request",
					"responses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlaceAutoCompleteMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp when the event happened as UTC ISO-8601 with second precision. <br>\nThis field might be used by data consumers to solve concurrency problems. <br>\nRepresents when location reverse geocoding event was sent. <br>\nValid formats: <br>\n2010-02-18T06:22:33Z <br>"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"platform_request_id": {
						"type": "string",
						"description": "Unique id of platform request"
					},
					"provider": {
						"$ref": "#/components/schemas/PlaceAutoCompleteProvider",
						"description": "Contains the external location provider information"
					},
					"service_name": {
						"type": "string",
						"description": "Describes the service name (Pandora, B2C, Pandora B2B, Salesforce, ODR etc)"
					},
					"caller_platform": {
						"type": "string",
						"description": "Describes the platform name (iOS, Android, Web)"
					},
					"perseus_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus User Identifier. <br>\nThe field is only populated in products where Perseus is implemented\nhttps://confluence.deliveryhero.com/display/DA/Perseus"
					},
					"perseus_session_id": {
						"type": "string",
						"nullable": true,
						"description": "Perseus Session ID. <br>\nThe field is only populated in products where Perseus is implemented"
					},
					"api_version": {
						"type": "string",
						"nullable": true,
						"description": "Describes the version of Geolocator API for the request"
					},
					"cached_response": {
						"type": "boolean",
						"nullable": true,
						"description": "True if Geolocator serves the provider response from the cache without an actual call to the external API"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"platform_request_id",
					"provider",
					"service_name",
					"caller_platform"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommissionType": {
				"description": "To split commission types where there are multiple per order,<br>\ne.g. Pedidosya & Talabat where each vendor has a standard 10% (ish) listing commission rate <br>\nAND an additional commission rate or fee if the vendor is using our logistics services (Own Delivery).<br>\nDefault value for Commission type should be \"listing\".",
				"enum": [
					"listing",
					"own_delivery"
				],
				"type": "string"
			},
			"CommissionInBillingOrder": {
				"properties": {
					"commission_amount_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total commission for the order that the vendor is charged, excluding tax. <br>\nCommission excludes Joker fee, Payment fee, Service fees (including logistics/delivery fees)"
					},
					"commission_amount_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total commission for the order that the vendor is charged, including tax. <br>\nCommission excludes Joker fee, Payment fee, Service fees (including logistics/delivery fees)"
					},
					"commission_base": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Every country/global_entity has its own logic for calculating this field.<br>\nCommissionable value of an order is the basis for calculating the commission to be paid by a vendor.<br>\nThe primary constituent should be the basket value, but depending on the individual company definitions,\nit can include extra charges like delivery or payment fees paid by the customer.<br>\nTypically commission_base is calculated differently if a joker is submitted.<br>\ncommission_base * commission_rate = commission_amount <br>\nI.e. the effective commission rate of an order is given by commission_amount/commission_base <br>"
					},
					"commission_type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/CommissionType"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "To split commission types where there are multiple per order,<br>\ne.g. Pedidosya & Talabat where each vendor has a standard 10% (ish) listing commission rate <br>\nAND an additional commission rate or fee if the vendor is using our logistics services (Own Delivery)."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Revenue": {
				"properties": {
					"commission_amount_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total commission for the order that the vendor is charged, excluding tax. <br>\nCommission excludes Joker fee, Payment fee, Service fees (including logistics/delivery fees)"
					},
					"commission_amount_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total commission for the order that the vendor is charged, including tax. <br>\nCommission excludes Joker fee, Payment fee, Service fees (including logistics/delivery fees)"
					},
					"commission_base": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Commissionable base from which the commission amount is charged. <br>\nIf there are multiple commissions on the order, <br>\nthen this should be the MAX commissionable base from the various calculations. <br>\nIf the commission amount is a flat fee (i.e. no commissionable base needed), <br>\nyou should still pass a value if possible, <br>\ne.g. basket_value_gross - incentive_value_gross_vendor (or whatever is relevant in your platform) <br>\nIt should include the amounts the platform use to calculate commissions. <br>\ne.g. if a customer orders 10$ worth of food with a 2$ delivery fee (for the vendor).\nIf we have a 10% commission rate, then the commission base is what we apply the 10% to, to get the commission\nrevenue. Let’s assume that in this case it’s 12$, so a 1.2$ revenue. It could just as easily be 10$."
					},
					"commissions": {
						"items": {
							"$ref": "#/components/schemas/CommissionInBillingOrder"
						},
						"type": "array",
						"nullable": true,
						"description": "Covers commission_amount & commission_base. <br>\nArray is for allowing the flexibility of multiple commissions within one order (e.g. in Pedidosya & Talabat)"
					},
					"joker_fee_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee paid by vendors for using joker service, excluding tax"
					},
					"joker_fee_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee paid by vendors for using joker service, including tax"
					},
					"payment_fee_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to the vendor for processing payment or for specific payment providers. <br>\nIn some cases a fee is charged to the vendor for specific payment methods.<br>\nExample: a vendor pays a fee of 2 if customer pays Cash On Delivery.<br>\nExcluding tax"
					},
					"payment_fee_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to the vendor for processing payment or for specific payment providers. <br>\nIn some cases a fee is charged to the vendor for specific payment methods.<br>\nExample: a vendor pays a fee of 2 if customer pays Cash On Delivery.<br>\nExcluding tax"
					},
					"service_fee_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to the vendor for serving this order, excluding tax. Excludes delivery fees and logistics fees."
					},
					"service_fee_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to the vendor for serving this order, excluding tax. Excludes delivery fees and logistics fees."
					},
					"vendor_funded_delivery_fee_incentive_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to the vendor for them agreeing to give a delivery fee incentive to the customer, excluding tax"
					},
					"vendor_funded_delivery_fee_incentive_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Fee charged to the vendor for them agreeing to give a delivery fee incentive to the customer, excluding tax"
					},
					"other_order_attributable_revenue_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Catch-all for any other order-level revenues not described by the other fields in this stream, excluding tax"
					},
					"other_order_attributable_revenue_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Catch-all for any other order-level revenues not described by the other fields in this stream, excluding tax"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"OrderValues": {
				"properties": {
					"total_order_value_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The total amount paid, excluding tips, including tax.\nIt also includes the money from wallet if user has some money on wallet and used it."
					},
					"total_order_value_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The total amount paid, excluding tips, excluding tax.\nIt also includes the money from wallet if user has some money on wallet and used it."
					},
					"total_tax_value": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The tax on the total amount paid"
					},
					"tip_value_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The online payment of the tip, including tax"
					},
					"tip_value_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The online payment of the tip, excluding tax"
					},
					"container_charges_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Container charges, including tax"
					},
					"container_charges_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Container charges, excluding tax"
					},
					"additional_charges_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "everything else not covered by other charges"
					},
					"additional_charges_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "everything else not covered by other charges"
					},
					"delivery_fee_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Delivery fee (before incentives), excluding ta"
					},
					"delivery_fee_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Delivery fee (before incentives), excluding ta"
					},
					"basket_value_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The total basket value of the order (before incentives),\nincluding tax. Here “basket” is limited to the actual products that the customer has added to the basket. <br>\nI.e. food items, grocery items, dmart items.<br>\nExcludes delivery fees, service fees, payment fees."
					},
					"basket_value_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The total basket value of the order (before incentives),\nincluding tax. Here “basket” is limited to the actual products that the customer has added to the basket. <br>\nI.e. food items, grocery items, dmart items.<br>\nExcludes delivery fees, service fees, payment fees."
					},
					"mov_surcharge_fee_gross": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The amount added to the basket to meet the minimum order value (if basket value is lower than MOV), excluding tax"
					},
					"mov_surcharge_fee_net": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The amount added to the basket to meet the minimum order value (if basket value is lower than MOV), excluding tax"
					},
					"incentive_value_gross_vendor": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives funded by the vendor (Vouchers, Discounts etc), excluding tax"
					},
					"incentive_value_net_vendor": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives funded by the vendor (Vouchers, Discounts etc), excluding tax"
					},
					"incentive_value_gross_partner": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives funded by a non-vendor partner. E.g. a bank, excluding tax"
					},
					"incentive_value_net_partner": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives funded by a non-vendor partner. E.g. a bank, excluding tax"
					},
					"incentive_value_gross_platform": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives funded by Delivery Hero (Vouchers, Discounts etc), including tax"
					},
					"incentive_value_net_platform": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Total incentives funded by Delivery Hero (Vouchers, Discounts etc), including tax"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"BillingOrderMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp when commission data was generated.\nValid formats <br>\n2010-02-18T06:22:33Z"
					},
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"vendor_id": {
						"type": "string",
						"nullable": true,
						"description": "Vendor id that generated the commission <br>\nAt least one of order_id and vendor_id must be filled"
					},
					"order_id": {
						"type": "string",
						"nullable": true,
						"description": "Order id that generated the commission <br>\nAt least one of order_id and vendor_id must be filled"
					},
					"currency": {
						"type": "string",
						"description": "The code for the currency in https://de.wikipedia.org/wiki/ISO_4217 <br>\ne.g. <code>EUR</code> for Euro."
					},
					"vendor_payout": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The amount that DH pays out to the vendor after deductions for commissions & fees. <br>\nIn the case of an Offline payment method with Vendor Delivery\n(e.g. cash on delivery) then the vendor payout would be zero"
					},
					"revenue": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Revenue"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Covers vendor-payable revenues to DH.<br>\nNote: This does not include delivery fee,\nexcept for cases when the vendor funds a delivery fee incentive on an Own Delivery order."
					},
					"order_values": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/OrderValues"
							},
							{
								"type": "number",
								"enum": [
									null
								],
								"nullable": true
							}
						],
						"description": "Covers order values typically needed within the billing calculations,\nand so billing should give the “truth” of these values (from a vendor perspective)"
					}
				},
				"required": [
					"timestamp",
					"global_entity_id",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BenefitDetail": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Unique Identification of a benefits\nMaximum length is 40 characters"
					},
					"type": {
						"type": "string",
						"description": "What kind of benefit is offered to customer\nexample: 1+1 Food or 2+2 Drinks\nMaximum length is 40 characters"
					}
				},
				"required": [
					"id",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RedemptionRules": {
				"properties": {
					"max_per_vendor": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum number of redemption allowed on a vendor in 1 billing cycle\nExample: 10"
					},
					"max_per_period": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum number of redemption allowed at any vendor in a certain time interval\nExample: 10"
					},
					"limit_period_in_hours": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the time period after which you can redeem the benefit again at any vendor\nExample: 10hrs"
					},
					"max_per_vendor_period": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum number of redemption allowed at same vendor in certain time interval\nExample: 10"
					},
					"limit_vendor_period_in_hours": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "It defines the time period after which you can redeem the benefit again at same vendor\nExample: 10hrs"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RedemptionDetails": {
				"properties": {
					"max": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Maximum number of redemption allowed in 1 billing cycle\nExample: 10"
					},
					"used": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "Used defines number of redemption used by the user in 1 billing cycle\nExample: 4"
					},
					"remaining": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "remaining defines number of redemption left for user in 1 billing cycle\nExample: 6"
					},
					"is_unlimited": {
						"type": "boolean",
						"nullable": true,
						"description": "If the value is true then it means user has unlimited redemption in 1 billing cycle but\nrestricted by rules mentioned below\nExample: true/false"
					},
					"rules": {
						"$ref": "#/components/schemas/RedemptionRules",
						"description": "It defines the redemption rules for a country on per vendor or per time limit basis or even both"
					}
				},
				"required": [
					"rules"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DineInBenefitRedemptionMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier generated by DWH to identify a brand, platform in a specific country"
					},
					"subscription_id": {
						"type": "string",
						"description": "Unique Identification of a customer_subscription\nMaximum length is 40 characters"
					},
					"redemption_id": {
						"type": "string",
						"description": "Unique Identification of a redemption\nMaximum length is 40 characters"
					},
					"customer_id": {
						"type": "string",
						"description": "Unique Identification of a customer\nMaximum length is 40 characters"
					},
					"vendor_id": {
						"type": "string",
						"description": "Unique Identification of a vendor\nMaximum length is 40 characters"
					},
					"plan_id": {
						"type": "string",
						"nullable": true,
						"description": "Unique Identification of a pandaPro plan\nMaximum length is 40 characters"
					},
					"benefit": {
						"$ref": "#/components/schemas/BenefitDetail",
						"description": "It defines the benefits offered to customer by the customer_subscription"
					},
					"redemption": {
						"$ref": "#/components/schemas/RedemptionDetails",
						"description": "It defines the benefits offered to customer by the customer_subscription"
					},
					"timestamp": {
						"type": "string",
						"description": "The time when the benefit was redeemed by user was last updated\nValid formats\n2020-04-08T10:43:17Z"
					}
				},
				"required": [
					"global_entity_id",
					"subscription_id",
					"redemption_id",
					"customer_id",
					"vendor_id",
					"benefit",
					"redemption",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogisticsEmployeeContract": {
				"properties": {
					"contract_id": {
						"type": "number",
						"format": "double",
						"description": "Internal Rooster-API contract id"
					},
					"job_title": {
						"type": "string",
						"description": "Job title specified in contract"
					},
					"name": {
						"type": "string",
						"description": "Internal contract name\ni.e. “freelancer contract”"
					},
					"type": {
						"type": "string",
						"description": "Internal contract type name,\ni.e. FULL_TIME"
					},
					"city": {
						"type": "string",
						"description": "City where this employee expected to work"
					},
					"vehicle_type": {
						"type": "string",
						"nullable": true,
						"description": "Vehicle type identifier that specified in the employee contract\nCan be empty."
					},
					"start_at": {
						"type": "string",
						"description": "Timestamp representing a start time of the contract"
					},
					"end_at": {
						"type": "string",
						"description": "Timestamp representing a start time of the contract"
					},
					"active": {
						"type": "boolean",
						"description": "if “false” - contract is no longer valid,\neven though it must be active according to\nstart_at and end_at parameters"
					},
					"termination_reason": {
						"type": "string",
						"nullable": true,
						"description": "If exists - specifies reason for contract early termination"
					}
				},
				"required": [
					"contract_id",
					"job_title",
					"name",
					"type",
					"city",
					"start_at",
					"end_at",
					"active"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogisticsEmployeeVehicleType": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Vehicle type name, can be country specific/localised. I.e. “Motocicleta K”"
					},
					"profile": {
						"type": "string",
						"description": "Category of vehicle, i.e. “car”"
					}
				},
				"required": [
					"name",
					"profile"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogisticsEmployeeStartingPoint": {
				"properties": {
					"starting_point_id": {
						"type": "string",
						"description": "Unique identifier of the starting point"
					},
					"name": {
						"type": "string",
						"description": "Name of the starting point"
					},
					"zone_id": {
						"type": "string",
						"description": "Zone identifier that this starting point is tied to"
					},
					"zone_name": {
						"type": "string",
						"description": "Name of the zone that this starting point is tied to"
					}
				},
				"required": [
					"starting_point_id",
					"name",
					"zone_id",
					"zone_name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogisticsEmployeeAttributeType": {
				"description": "Type of the employee data sent in employee_attributes[].value field.",
				"enum": [
					"STRING",
					"INTEGER",
					"NUMBER",
					"BOOLEAN",
					"DATE",
					"LIST",
					"FILE",
					"PHONE_NUMBER"
				],
				"type": "string"
			},
			"LogisticsEmployeeAttributes": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Internal field name"
					},
					"value": {
						"type": "string",
						"description": "Field value\nNote: these values are always sent as strings,\nbut can be interpreted differently based on type property"
					},
					"type": {
						"$ref": "#/components/schemas/LogisticsEmployeeAttributeType",
						"description": "Type of the employee data sent in value field."
					},
					"document_id": {
						"type": "string",
						"nullable": true,
						"description": "Internal document name that refers to this field.\nMultiple employee attributes might refer to the same\ndocument using this property.\nAdditionally it is used as a reference for status update in DocumentStatusUpdate event"
					},
					"document_version": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "number",
								"format": "double"
							}
						],
						"description": "Numeric value representing version of the attribute value in the document.\nIt can be expected that all attributes in related to the same document have the same version value"
					}
				},
				"required": [
					"name",
					"value",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogisticsEmployeeMessage": {
				"properties": {
					"timestamp": {
						"type": "string",
						"description": "Timestamp when data update was generated.\nRFC-3339 format with millisecond precision."
					},
					"country_code": {
						"type": "string",
						"description": "Country code used for identifying the environment that produces events."
					},
					"logistics_employee_id": {
						"type": "number",
						"format": "double",
						"description": "Internal Rooster-API employee id"
					},
					"name": {
						"type": "string",
						"description": "Employee name"
					},
					"phone_number": {
						"type": "string",
						"description": "Employee phone number"
					},
					"email": {
						"type": "string",
						"description": "Employee email"
					},
					"bank_data": {
						"type": "string",
						"nullable": true,
						"description": "Bank account number or other bank information. Format might be specific to a particular environment / country\nCan be empty."
					},
					"work_permit_expiration_date": {
						"type": "string",
						"nullable": true,
						"description": "End date of the submitted work permit, might not be specified if no permit submitted or submission is no required\nCan be empty."
					},
					"birth_date": {
						"type": "string",
						"nullable": true,
						"description": "End date of the submitted work permit, might not be specified if no permit submitted or submission is no required\nCan be empty."
					},
					"reporting_to_logistics_id": {
						"type": "string",
						"nullable": true,
						"description": "Logistics id of the person this employee reporting to\nCan be empty."
					},
					"default_working_city": {
						"type": "string",
						"nullable": true,
						"description": "Name of the city where the employee is expected to work. Note: the actual working city.\n(specified in active contract might be different from this one)\nCan be empty."
					},
					"contracts": {
						"items": {
							"$ref": "#/components/schemas/LogisticsEmployeeContract"
						},
						"type": "array",
						"description": "Array of information related to employee contracts\nCan be empty."
					},
					"vehicle_types": {
						"items": {
							"$ref": "#/components/schemas/LogisticsEmployeeVehicleType"
						},
						"type": "array",
						"description": "Array of information related to employee vehicle types\nCan be empty."
					},
					"starting_points": {
						"items": {
							"$ref": "#/components/schemas/LogisticsEmployeeStartingPoint"
						},
						"type": "array",
						"description": "List of starting points (working areas) available to the employee\nCan be empty."
					},
					"employee_attributes": {
						"items": {
							"$ref": "#/components/schemas/LogisticsEmployeeAttributes"
						},
						"type": "array",
						"description": "Custom properties provided for this user (i.e. banking data)\nCan be empty."
					}
				},
				"required": [
					"timestamp",
					"country_code",
					"logistics_employee_id",
					"name",
					"phone_number",
					"email",
					"contracts",
					"vehicle_types",
					"starting_points",
					"employee_attributes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogisticsDocumentStatusUpdateCommandStatus": {
				"description": "Status update value for the document",
				"enum": [
					"VERIFIED",
					"REJECTED"
				],
				"type": "string"
			},
			"LogisticsDocumentStatusUpdateCommandMessage": {
				"properties": {
					"logistics_employee_id": {
						"type": "number",
						"format": "double"
					},
					"timestamp": {
						"type": "string"
					},
					"country_code": {
						"type": "string"
					},
					"document_id": {
						"type": "string"
					},
					"document_version": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"$ref": "#/components/schemas/LogisticsDocumentStatusUpdateCommandStatus"
					}
				},
				"required": [
					"logistics_employee_id",
					"timestamp",
					"country_code",
					"document_id",
					"document_version",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerLoginEventMessage": {
				"properties": {
					"global_entity_id": {
						"$ref": "#/components/schemas/GlobalEntityId",
						"description": "Global Unique Identifier to identify a brand, platform in a specific country"
					},
					"email": {
						"type": "string",
						"nullable": true,
						"description": "The email of the customer attempting to login, this is an optional field <br>\nas it might not be available in all login scenarios"
					},
					"timestamp": {
						"type": "string",
						"description": "The timestamp of the login event with ms precision <br>\nValid formats: <br>\n2010-02-18T06:22:33.442Z <br>\n2010-02-18T06:22:33.442234Z"
					},
					"ip": {
						"type": "string",
						"description": "The ip address of the customer attempting a login"
					},
					"type": {
						"type": "string",
						"description": "The login type <br>\nExample: <br>\npassword, password_2fa, magiclink\nNot creating an ENUM here to allow for flexibility in the future"
					},
					"status": {
						"type": "string",
						"description": "The login status <br>\nExample: <br>\nsuccess, failed, user_not_exists\nNot creating an ENUM here to allow for flexibility in the future."
					},
					"country_code": {
						"type": "string",
						"description": "The country code from where the login occurred <br>\nfollows ISO 3166-1 ALPHA-2."
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "The city from where the customer attempted the login <br>\nThis is an optional field as it might not be available in all scenarios"
					},
					"device_id": {
						"type": "string",
						"nullable": true,
						"description": "The device id of the device used to attempt login <br>\nThis is a generic UUID field assigned by device tokens to clients <br>\nIt is an optional field and all clients might not be configured to send a device id"
					},
					"perseus_id": {
						"type": "string",
						"nullable": true,
						"description": "The perseus id of the device used to login <br>\nThis is an optional field and all clients might not be configured to send a perseus id"
					},
					"user_agent": {
						"type": "string",
						"description": "The user agent of the client making a login request <br>\nThis is a required field as it is standard for api calls"
					},
					"customer_id": {
						"type": "string",
						"nullable": true,
						"description": "The customer id of the customer attempting a login <br>\nThis is widely known as the customer_code in the pandora platform"
					},
					"phone": {
						"type": "string",
						"nullable": true,
						"description": "The phone number of the customer attempting a login <br>\nThis is an optional field as all users have not configured a phone number"
					},
					"adjust_id": {
						"type": "string",
						"nullable": true,
						"description": "A unique device identifier provided by Adjust (3d party). <br>\nIt's stable across reinstalls on the same device and also stable <br>\nif a user resets advertising IDs or disables them"
					},
					"client": {
						"type": "string",
						"description": "The client used by the customer to login <br>\nExample: iphone, android, web\nNot validating as ENUM to allow for flexibility in the future <br>\nas we add more clients"
					},
					"session_id": {
						"type": "string",
						"nullable": true,
						"description": "The JWT ID from the login request"
					}
				},
				"required": [
					"global_entity_id",
					"timestamp",
					"ip",
					"type",
					"status",
					"country_code",
					"user_agent",
					"client"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"bearer": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header",
				"description": "JWT is expected. <br> The content of the header should look like the following: 'Authorization: 'Bearer <token>'.<br>To obtain token follow: https://product.deliveryhero.net/data-machine-learning/documentation/work-with-data-fridge-as-data-producer/ <br><br><strong>IMPORTANT:</strong><br><ul><li>Max body size of <strong>ALL NON HISTORICAL endpoints</strong> is <strong>250 Kb</strong> because of max message size of AWS SNS Service.</li><li>Max body size of <strong>Historical Endpoints</strong> ('/orders/history') have a limit of <strong>10 Mb</strong> because of BigQuery Streaming API & PubSub limit.</li></ul>"
			}
		}
	},
	"info": {
		"title": "Fridge Ingestion API",
		"version": "1.0.0",
		"license": {
			"name": "UNLICENSED"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/orders": {
			"post": {
				"operationId": "Order",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when an Order is PLACED (i.e. accepted by the backend) or <strong>UPDATED</strong>. <br>\nOnly orders paid with online payment or Cash On Delivery orders accepted by\nbackend system should be sent to this endpoint. <br>\nAny orders which failed on online payment must not be sent to this endpoint.",
				"tags": [
					"order events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OrderMessage"
							}
						}
					}
				}
			}
		},
		"/history/orders": {
			"post": {
				"operationId": "HistoryOrder",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This endpoint is Deprecated,\nPlease check this new functionality to import historical data for order and\norder status: <br/>\n     https://product.deliveryhero.net/data-machine-learning/documentation/importing-historical-data/ <br/>\nUsed when importing historical orders",
				"tags": [
					"order events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HistoryOrdersRequest"
							}
						}
					}
				}
			}
		},
		"/order-statuses": {
			"post": {
				"operationId": "OrderStatus",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent every time an Order Status changes",
				"tags": [
					"order events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OrderStatusMessage"
							}
						}
					}
				}
			}
		},
		"/history/order-statuses": {
			"post": {
				"operationId": "HistoryOrderStatus",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This endpoint is Deprecated,\nPlease check this new functionality to import historical data for order and\norder status: <br/>\n     https://product.deliveryhero.net/data-machine-learning/documentation/importing-historical-data/ <br/>\nUsed when importing historical order statuses",
				"tags": [
					"order events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HistoryOrderStatusesRequest"
							}
						}
					}
				}
			}
		},
		"/vendors": {
			"post": {
				"operationId": "Vendor",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is submitted whenever Vendor data changes",
				"tags": [
					"vendor events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorMessage"
							}
						}
					}
				}
			}
		},
		"/products": {
			"post": {
				"operationId": "Product",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "A product is an entity you can add to a cart and pay for it.\nIn some platforms it is called a Product Variation<br>\nIt is submitted whenever Product information changes",
				"tags": [
					"product events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProductMessage"
							}
						}
					}
				}
			}
		},
		"/product-availabilities": {
			"post": {
				"operationId": "ProductAvailability",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is submitted whenever Product Availability information changes\nto be used when a product is temporarily de-activated or is activated again",
				"tags": [
					"product events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProductAvailabilityMessage"
							}
						}
					}
				}
			}
		},
		"/product-options": {
			"post": {
				"operationId": "ProductOption",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is submitted whenever Product Option information changes",
				"tags": [
					"product events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProductOptionMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-schedules": {
			"post": {
				"operationId": "VendorSchedule",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is submitted whenever Vendor Schedule changes",
				"tags": [
					"vendor events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorScheduleMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-availabilities": {
			"post": {
				"operationId": "VendorAvailability",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Unavailability is an exceptional situation when restaurant is busy, unreachable, etc.\nWhen it happens it is a high priority (emergency layer) on top of all schedules that closes restaurant any\ntime for some specific time range. It can be perceived as an on/off switch with a reason and TTL. <br>\nOverrides VendorScheduleSubmit. <br>\nExample:\nif restaurant goes offline because it is overloaded then VendorAvailability is used instead of VendorSchedule",
				"tags": [
					"vendor events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorAvailabilityMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-delivery-areas": {
			"post": {
				"operationId": "VendorDeliveryArea",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is submitted whenever delivery areas are updated for a vendor",
				"tags": [
					"delivery-area events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorDeliveryAreaMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-ads": {
			"post": {
				"operationId": "VendorAd",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is submitted whenever ads are updated for a vendor",
				"tags": [
					"vendor events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorAdEventMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-category-trees": {
			"post": {
				"operationId": "VendorCategoryTree",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is submitted whenever a product category for a vendor is created or updated",
				"tags": [
					"vendor events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorCategoryTreeMessage"
							}
						}
					}
				}
			}
		},
		"/reviews": {
			"post": {
				"operationId": "Review",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a Review is placed",
				"tags": [
					"feedback events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReviewMessage"
							}
						}
					}
				}
			}
		},
		"/feedback-responses": {
			"post": {
				"operationId": "FeedbackResponse",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Customer reviews for a specific subject (e.g. rider, food). <br>\nOriginating from the dh-feedback service.",
				"tags": [
					"feedback events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FeedbackResponseMessage"
							}
						}
					}
				}
			}
		},
		"/survey-responses": {
			"post": {
				"operationId": "SurveyResponse",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a SurveyResponse is placed",
				"tags": [
					"feedback events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SurveyResponseMessage"
							}
						}
					}
				}
			}
		},
		"/delivery-area-events": {
			"post": {
				"operationId": "DeliveryAreaEvent",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever conditions for a group of delivery areas change. <br>\nF.e. rider fleet outages, closing or shrinking polygons etc.",
				"tags": [
					"delivery-area events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeliveryAreaEventMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-account-creations": {
			"post": {
				"operationId": "SalesforceAccountCreation",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever Salesforce account was created",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceAccountCreationMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-additional-charges": {
			"post": {
				"operationId": "SalesforceAdditionalCharge",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever additional charge is created or terminated at Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceAdditionalChargeMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-add-charge-updates": {
			"post": {
				"operationId": "SalesforceAddChargeUpdate",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever there is an AddChargeUpdate event at Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceAddChargeUpdateMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-commissions": {
			"post": {
				"operationId": "SalesforceCommission",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever commission is created, updated or terminated at Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceCommissionMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-update-accounts": {
			"post": {
				"operationId": "SalesforceUpdateAccount",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever Salesforce account is updated",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceUpdateAccountMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-update-addresses": {
			"post": {
				"operationId": "SalesforceUpdateAddress",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever address is updated at Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceUpdateAddressMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-bank-account-info-updates": {
			"post": {
				"operationId": "SalesforceUpdateBankDetails",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever bank details is updated at Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceBankAccountInfoUpdateMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-update-billing-contacts": {
			"post": {
				"operationId": "SalesforceUpdateBillingContact",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever billing contact is updated at Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceUpdateBillingContactMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-update-cases": {
			"post": {
				"operationId": "SalesforceUpdateCase",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever case is updated in Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceUpdateCaseMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-update-contacts": {
			"post": {
				"operationId": "SalesforceUpdateContact",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever contact is updated at Salesforce",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceUpdateContactMessage"
							}
						}
					}
				}
			}
		},
		"/salesforce-vendor-status-changes": {
			"post": {
				"operationId": "SalesforceVendorStatusChange",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted vendor status changes",
				"tags": [
					"salesforce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SalesforceVendorStatusChangeMessage"
							}
						}
					}
				}
			}
		},
		"/deployment-events": {
			"post": {
				"operationId": "DeploymentEvent",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever there is a deployment event.",
				"tags": [
					"deployment-event"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeploymentEventMessage"
							}
						}
					}
				}
			}
		},
		"/customer-address-events": {
			"post": {
				"operationId": "CustomerAddressEvent",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever there is a customer address event.",
				"tags": [
					"customer events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerAddressEventMessage"
							}
						}
					}
				}
			}
		},
		"/customer-events": {
			"post": {
				"operationId": "CustomerEvent",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever there is a customer event.",
				"tags": [
					"customer events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerEventMessage"
							}
						}
					}
				}
			}
		},
		"/customer-opt-in-status-events": {
			"post": {
				"operationId": "CustomerOptInStatusEvent",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "To be submitted whenever an existing customer subscribes/unsubscribes on a marketing\nchannel (sms, email, push notifications, etc).<br>\nOr a non customer subscribes/unsubscribes on marketing channel (email) without even\nregistering or placing an order.",
				"tags": [
					"customer events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerOptInStatusEventMessage"
							}
						}
					}
				}
			}
		},
		"/joker-promotion-definitions": {
			"post": {
				"operationId": "JokerPromotionDefinition",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "JokerPromotionDefinition event provides information about the created Joker promotion definitions.\nIt is sent whenever a promotion definition is created.",
				"tags": [
					"joker events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JokerPromotionDefinitionMessage"
							}
						}
					}
				}
			}
		},
		"/joker-promotions": {
			"post": {
				"operationId": "JokerPromotion",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "JokerPromotion event provides information about the created Joker promotions.\nIt is sent whenever a Joker promotion is created.",
				"tags": [
					"joker events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JokerPromotionMessage"
							}
						}
					}
				}
			}
		},
		"/joker-offers": {
			"post": {
				"operationId": "JokerOffer",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "JokerOffer event provides offer, user, restaurant, reservation and promotion information\nreturned from the get_new_joker method.<br>\nIt is sent when a Joker Offer changes.",
				"tags": [
					"joker events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JokerOfferMessage"
							}
						}
					}
				}
			}
		},
		"/joker-orders": {
			"post": {
				"operationId": "JokerOrder",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "JokerOrder event provides order, offer, vendor and promotion information\nIt is sent when a Joker Order changes.",
				"tags": [
					"joker events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JokerOrderMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-badges": {
			"post": {
				"operationId": "LoyaltyBadge",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyBadge event provides badge and its information\nit is submitted whenever badge is updated",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyBadgeMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-challenges": {
			"post": {
				"operationId": "LoyaltyChallenge",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyChallenge event provides challenge and its information\nit is submitted whenever challenge is updated",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyChallengeMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-customer-badges": {
			"post": {
				"operationId": "CustomerBadge",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyCustomerBadge event provides customer badge and its information\nit is submitted whenever customer badge is updated",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyCustomerBadgeMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-customer-challenges": {
			"post": {
				"operationId": "CustomerChallenge",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyCustomerChallenge event provides customer challenge and its information\nit is submitted whenever customer challenge is updated",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyCustomerChallengeMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-point-transactions": {
			"post": {
				"operationId": "LoyaltyPointTransaction",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyPointTransaction event provides point transaction and its information\nit is submitted whenever point transaction is created",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyPointTransactionMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-incentive-templates": {
			"post": {
				"operationId": "LoyaltyIncentiveTemplate",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyIncentiveTemplate event contain the properties of the incentive,\nwhich will be generated when user win a incentive.<br/>\nThis event is sent whenever an Incentive Template is created or updated by internal user via an admin portal",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyIncentiveTemplateMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-customer-scratch-cards": {
			"post": {
				"operationId": "LoyaltyCustomerScratchCard",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyCustomerScratchCard event contain the data for each scratch card purchase by a user and\ntheir reward details. <br/>\nThis event is sent whenever customers make a purchase of scratch cards",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyCustomerScratchCardMessage"
							}
						}
					}
				}
			}
		},
		"/loyalty-scratch-cards": {
			"post": {
				"operationId": "LoyaltyScratchCard",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "LoyaltyScratchCard event contains all the scratch card that a user can purchase by redeeming the points<br/>\nThis event is sent whenever a Scratch Card is created or updated by internal user via an admin portal",
				"tags": [
					"loyalty events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoyaltyScratchCardMessage"
							}
						}
					}
				}
			}
		},
		"/bulk/products": {
			"post": {
				"operationId": "BulkProductsRequest",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Used when importing bulk products",
				"tags": [
					"product events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BulkProductsRequest"
							}
						}
					}
				}
			}
		},
		"/rider-surveys": {
			"post": {
				"operationId": "RiderSurvey",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a RiderSurvey is placed",
				"tags": [
					"feedback events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RiderSurveyMessage"
							}
						}
					}
				}
			}
		},
		"/new-rider-surveys": {
			"post": {
				"operationId": "NewRiderSurvey",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a NewRiderSurvey is placed",
				"tags": [
					"feedback events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewRiderSurveyMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-surveys": {
			"post": {
				"operationId": "VendorSurvey",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a VendorSurvey is placed",
				"tags": [
					"feedback events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorSurveyMessage"
							}
						}
					}
				}
			}
		},
		"/customer-subscriptions": {
			"post": {
				"operationId": "CustomerSubscription",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when subscription is subscribe or benefit is claimed corresponding to a customer subscription",
				"tags": [
					"customer events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerSubscriptionMessage"
							}
						}
					}
				}
			}
		},
		"/customer-incentives": {
			"post": {
				"operationId": "CustomerIncentive",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "A customer incentive holds the rules and benefits that one or MANY customers can use. <br>\nA customer incentive might be sent/shared by N users. When a customer incentive is used,\na different event named \"customer incentive transaction\" must be used.\nCustomer Incentive event is sent when any of the properties of it change (rules, descriptions etc.).",
				"tags": [
					"customer-incentive events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerIncentiveMessage"
							}
						}
					}
				}
			}
		},
		"/customer-incentive-transactions": {
			"post": {
				"operationId": "CustomerIncentiveTransaction",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a voucher/discount is applied to an order during order placement or\nwhen a voucher/discount usage is reverted from an order, eg. order cancellation",
				"tags": [
					"customer-incentive events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerIncentiveTransactionMessage"
							}
						}
					}
				}
			}
		},
		"/aggregated-rating-updates": {
			"post": {
				"operationId": "AggregatedRatingUpdate",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This event is sent whenever an aggregated rating for a given vendor has been (re)calculated",
				"tags": [
					"feedback events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AggregatedRatingUpdateMessage"
							}
						}
					}
				}
			}
		},
		"/crm-customer-communications": {
			"post": {
				"operationId": "CRMCustomerCommunication",
				"responses": {
					"202": {
						"description": ""
					}
				},
				"description": "This event is sent whenever a marketing communication is sent to the customer from the Braze (CRM) tool",
				"tags": [
					"crm-customer-communication events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CRMCustomerCommunicationMessage"
							}
						}
					}
				}
			}
		},
		"/group-orders": {
			"post": {
				"operationId": "GroupOrder",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a group order placement is made.",
				"tags": [
					"order events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GroupOrderMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-catalog-import-commands": {
			"post": {
				"operationId": "VendorCatalogImportCommand",
				"responses": {
					"202": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent to retrieve the status of a pos vendor menu import.",
				"tags": [
					"vendor-catalog-import events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorCatalogImportCommandMessage"
							}
						}
					}
				}
			}
		},
		"/vendor-catalog-import-info-events": {
			"post": {
				"operationId": "VendorCatalogImportInfoEvent",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when a Vendor Catalog update Request is made.",
				"tags": [
					"vendor-catalog-import events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VendorCatalogImportInfoEventMessage"
							}
						}
					}
				}
			}
		},
		"/courier-delivery-zones": {
			"post": {
				"operationId": "CourierDeliveryZone",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This event is sent whenever a courier zone is created and\nwhenever a property of a courier zone is updated.",
				"tags": [
					"courier-delivery-zone events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CourierDeliveryZoneMessage"
							}
						}
					}
				}
			}
		},
		"/qcommerce-invoices": {
			"post": {
				"operationId": "QcommerceInvoice",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This event is sent whenever a Qcommerce Invoice is created or updated",
				"tags": [
					"qcommerce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QcommerceInvoiceMessage"
							}
						}
					}
				}
			}
		},
		"/qcommerce-delivery-receipts": {
			"post": {
				"operationId": "QcommerceDeliveryReceipt",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This event is sent whenever a Qcommerce Delivery Receipt is created or updated",
				"tags": [
					"qcommerce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QcommerceDeliveryReceiptMessage"
							}
						}
					}
				}
			}
		},
		"/qcommerce-supplier-returns": {
			"post": {
				"operationId": "QcommerceSupplierReturn",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This event is sent whenever a new supplier return is created or updated.",
				"tags": [
					"qcommerce events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QcommerceSupplierReturnMessage"
							}
						}
					}
				}
			}
		},
		"/payment-transactions": {
			"post": {
				"operationId": "PaymentTransaction",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This event is sent whenever a payment is created.\nThis event is sent whenever a property of a payment is updated.\nThis event might be re-sent and shall be understood as idempotent.",
				"tags": [
					"payment events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PaymentTransactionMessage"
							}
						}
					}
				}
			}
		},
		"/dine-in-benefit-redemptions": {
			"post": {
				"operationId": "DineInBenefitRedemption",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when user redeems the dine-in benefits offered to him/her",
				"tags": [
					"dine-in events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DineInBenefitRedemptionMessage"
							}
						}
					}
				}
			}
		},
		"/logistics-employees": {
			"post": {
				"operationId": "LogisticsEmployeeMessage",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when LogisticsEmployee created or updated.",
				"tags": [
					"rider events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LogisticsEmployeeMessage"
							}
						}
					}
				}
			}
		},
		"/logistics-document-status-update-commands": {
			"post": {
				"operationId": "LogisticsDocumentStatusUpdateCommandMessage",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It is sent when LogisticsDocumentStatusUpdateCommand created or updated.",
				"tags": [
					"rider events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LogisticsDocumentStatusUpdateCommandMessage"
							}
						}
					}
				}
			}
		},
		"/customer-login-events": {
			"post": {
				"operationId": "CustomerLoginEventMessage",
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "This event is sent whenever a customer attempts a login at pandors:keymaker service.\nThe login can be of type password, password_2fa, magic_link etc. This stream also records\nfailed login attempts. The keymaker service is protected by CloudFlare and Permiter X\nso any malicious attacks or brute force attemps will not be sent to this stream",
				"tags": [
					"customer events"
				],
				"security": [
					{
						"bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerLoginEventMessage"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/v1"
		}
	],
	"tags": [
		{
			"name": "analytics-customer-profile",
			"x-displayName": "analytics-customer-profile",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/AnalyticsCustomerProfileMessage\" />\n"
		},
		{
			"name": "pandata-customer-profile",
			"x-displayName": "pandata-customer-profile",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/PandataCustomerProfileMessage\" />\n"
		},
		{
			"name": "pandata-vendor-kpi",
			"x-displayName": "pandata-vendor-kpi",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/PandataVendorKpiMessage\" />\n"
		},
		{
			"name": "pandata-vendor-deals-kpi",
			"x-displayName": "pandata-vendor-deals-kpi",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/PandataVendorDealsKpiMessage\" />\n"
		},
		{
			"name": "vendor-location-update",
			"x-displayName": "vendor-location-update",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/VendorLocationUpdateMessage\" />\n"
		},
		{
			"name": "customer-location-update",
			"x-displayName": "customer-location-update",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/CustomerLocationUpdateMessage\" />\n"
		},
		{
			"name": "vendor-score",
			"x-displayName": "vendor-score",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/VendorScoreMessage\" />\n"
		},
		{
			"name": "location-reverse-geocoding-event",
			"x-displayName": "location-reverse-geocoding-event",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/LocationReverseGeocodingEventMessage\" />\n"
		},
		{
			"name": "location-geocode",
			"x-displayName": "location-geocode",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/LocationGeocodeMessage\" />\n"
		},
		{
			"name": "place-details",
			"x-displayName": "place-details",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/PlaceDetailsMessage\" />\n"
		},
		{
			"name": "place-autocomplete",
			"x-displayName": "place-autocomplete",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/PlaceAutoCompleteMessage\" />\n"
		},
		{
			"name": "billing-order",
			"x-displayName": "billing-order",
			"description": "<SchemaDefinition schemaRef=\"#/components/schemas/BillingOrderMessage\" />\n"
		}
	],
	"x-tagGroups": [
		{
			"name": "Real Time Events",
			"tags": [
				"order events",
				"vendor events",
				"delivery-area events",
				"product events",
				"salesforce events",
				"customer events",
				"customer-incentive events",
				"feedback events",
				"loyalty events",
				"joker events",
				"deployment-event",
				"vendor-catalog-import events",
				"dine-in events",
				"rider events",
				"courier-delivery-zone events",
				"login events",
				"qcommerce events",
				"payment events"
			]
		},
		{
			"name": "Batch Ingestion Events",
			"tags": [
				"crm-customer-communication events",
				"analytics-customer-profile",
				"pandata-customer-profile",
				"pandata-vendor-kpi",
				"pandata-vendor-deals-kpi",
				"vendor-location-update",
				"customer-location-update",
				"vendor-score",
				"location-reverse-geocoding-event",
				"location-geocode",
				"place-details",
				"place-autocomplete",
				"billing-order"
			]
		}
	]
}